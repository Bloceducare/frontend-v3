{"version":3,"sources":["assets/images/icons/github.svg","assets/images/icons/twitter.svg","assets/images/icons/telegram.svg","assets/images/icons/discord.svg","assets/images/icons/discord-full.svg","assets/images/icons/portis.svg","assets/images/icons/arrow_down.svg","assets/images/icons/arrow_up.svg","assets/images/icons/arrow_left.svg","assets/images/icons/arrow_right.svg","assets/images/icons/check.svg","assets/images/icons/check_active.svg","assets/images/icons/edit.svg","assets/images/icons/info.svg","assets/images/icons/info_active.svg","assets/images/icons/warning.svg","assets/images/icons/warning_active.svg","assets/images/icons/question.svg","assets/images/icons/question_active.svg","assets/images/icons/external_link.svg","assets/images/icons/feedback.svg","assets/images/icons/refresh.svg","assets/images/icons/support.svg","assets/images/icons/close.svg","assets/images/icons/copy.svg","assets/images/icons/settings.svg","assets/images/icons/croco_emoji.svg","assets/images/icons/croco_logo.svg","assets/images/icons/heart.svg","assets/images/icons/filter.svg","assets/images/icons/pools.svg","assets/images/icons/dashboard.svg","assets/images/icons/hamburger_menu.svg","assets/images/icons/unknown_token.svg","assets/images/icons/plus.svg","assets/images/icons/light-mode.svg","assets/images/icons/dark-mode.svg","i18n.ts","components/analytics/GoogleAnalyticsReporter.tsx","assets/svg/logo_white.svg","assets/images/menu.svg","state/application/actions.ts","connectors/Fortmatic.ts","connectors/NetworkConnector.ts","connectors/index.ts","constants/index.ts","hooks/index.ts","state/application/hooks.ts","state/user/actions.ts","state/user/hooks.tsx","theme/components.tsx","theme/index.tsx","components/Menu/index.tsx","hooks/useOnClickOutside.tsx","components/Row/index.tsx","state/tokens/actions.ts","apollo/client.ts","data/tokens/poolsForToken.ts","data/tokens/chartData.ts","utils/queries.ts","hooks/useBlocksFromTimestamps.ts","data/tokens/priceData.ts","types/index.ts","utils/tokens.ts","data/tokens/transactions.ts","utils/index.ts","state/tokens/hooks.ts","utils/data.ts","hooks/useEthPrices.ts","data/tokens/tokenData.ts","state/pools/actions.ts","data/pools/chartData.ts","data/pools/transactions.ts","state/pools/hooks.ts","data/search/index.ts","components/Column/index.tsx","components/Logo/index.tsx","components/CurrencyLogo/index.tsx","utils/numbers.ts","components/DoubleLogo/index.tsx","components/Card/index.tsx","hooks/useTheme.ts","components/Button/index.tsx","components/Popover/index.tsx","hooks/useInterval.ts","components/Tooltip/index.tsx","components/HoverInlineText/index.tsx","components/Search/index.tsx","components/Header/index.tsx","components/Header/URLWarning.tsx","state/lists/actions.ts","utils/listVersionLabel.ts","components/Popups/ListUpdatePopup.tsx","components/Popups/TransactionPopup.tsx","components/Popups/PopupItem.tsx","components/Popups/index.tsx","theme/DarkModeQueryParamReader.tsx","hooks/usePrevious.ts","components/LineChart/index.tsx","state/protocol/actions.ts","state/protocol/hooks.ts","components/Percent/index.tsx","assets/images/whitev3.svg","components/Loader/index.tsx","components/Text/index.ts","components/shared/index.tsx","components/tokens/TokenTable.tsx","components/pools/PoolTable.tsx","pages/styled.ts","utils/date.ts","components/BarChart/index.tsx","components/TransactionsTable/index.tsx","pages/Home/index.tsx","pages/Protocol/index.tsx","pages/Pool/PoolsOverview.tsx","pages/Token/TokensOverview.tsx","components/Header/TopBar.tsx","components/CollapsibleContainer/index.tsx","components/InlineCircle/index.tsx","utils/math.ts","components/VerticalCryptoAmounts/index.tsx","state/simulator/actions.ts","state/simulator/hooks.ts","utils/simulator.ts","components/simulator/Position/PositionOverview/GridRow.tsx","components/simulator/Position/PositionOverview/index.tsx","components/Icon/icons.ts","components/Icon/index.tsx","components/Checkbox/index.tsx","components/Input/index.tsx","components/simulator/Position/PositionSelector/RangeTypeSelect/index.tsx","components/RangeSelector/index.tsx","components/simulator/Position/PositionSelector/RangeSelector/AbsoluteSelector.tsx","components/simulator/Position/PositionSelector/RangeSelector/RelativeSelector.tsx","components/simulator/Position/PositionSelector/index.tsx","components/simulator/Position/index.tsx","components/simulator/PriceReferenceSwitch.tsx","components/Slider/index.tsx","components/simulator/PriceSimulationBox/SimulatePriceRow/index.tsx","components/simulator/PriceSimulationBox/index.tsx","components/simulator/PoolSelect/index.tsx","hooks/useColor.ts","components/SimulatedDensityChart/index.tsx","pages/Simulator/index.tsx","components/Toggle/index.tsx","pages/Token/TokenPage.tsx","components/CandleChart/index.tsx","pages/Token/redirects.tsx","data/pools/tickData.ts","components/DensityChart/index.tsx","pages/Pool/PoolPage.tsx","pages/App.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","constants/lists.ts","state/lists/reducer.ts","state/multicall/actions.ts","state/multicall/reducer.ts","state/protocol/reducer.ts","state/tokens/reducer.ts","state/pools/reducer.ts","state/simulator/reducer.ts","state/index.ts","state/user/updater.tsx","data/protocol/overview.ts","data/protocol/chart.ts","data/protocol/transactions.ts","state/protocol/updater.ts","data/tokens/topTokens.ts","state/tokens/updater.ts","data/pools/topPools.ts","data/pools/poolData.ts","state/pools/updater.ts","index.tsx"],"names":["i18next","use","XHR","LanguageDetector","initReactI18next","init","backend","loadPath","react","useSuspense","fallbackLng","preload","keySeparator","interpolation","escapeValue","GoogleAnalyticsReporter","location","pathname","search","useEffect","ReactGA","pageview","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SvgMenu","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","ForwardRef","ApplicationModal","updateBlockNumber","createAction","setOpenModal","addPopup","removePopup","CHAIN_ID_NETWORK_ARGUMENT","ChainId","MAINNET","undefined","ROPSTEN","RINKEBY","KOVAN","FortmaticConnector","a","fortmatic","Fortmatic","default","apiKey","chainId","Error","provider","getProvider","pollForOverlayReady","Promise","resolve","interval","setInterval","overlayReady","clearInterval","emit","all","enable","then","accounts","account","FortmaticConnectorCore","RequestError","message","code","data","MiniRpcProvider","url","batchWaitTimeMs","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","console","debug","fetch","method","headers","accept","body","JSON","stringify","map","item","request","response","forEach","reject","ok","status","statusText","json","byKey","reduce","memo","current","result","error","sendAsync","callback","params","jsonrpc","catch","toString","promise","push","setTimeout","parsed","URL","NetworkConnector","urls","defaultChainId","invariant","supportedChainIds","k","Number","providers","currentChainId","accumulator","AbstractConnector","NETWORK_URL","process","FORMATIC_KEY","REACT_APP_FORTMATIC_KEY","PORTIS_ID","REACT_APP_PORTIS_ID","NETWORK_CHAIN_ID","parseInt","InjectedConnector","WalletConnectConnector","rpc","1","bridge","qrcode","pollingInterval","PortisConnector","dAppId","networks","WalletLinkConnector","appName","appLogoUrl","WETH_ADDRESS","DAI","Token","USDC","USDT","COMP","MKR","AMPL","WBTC","UNI_ADDRESS","WETH_ONLY","GÖRLI","WETH","TOKEN_HIDE","address","POOL_HIDE","BIPS_BASE","JSBI","BigInt","Percent","exponentiate","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","active","useModalOpen","modal","useSelector","state","application","openModal","useToggleModal","open","dispatch","useDispatch","useCallback","useRemovePopup","updateMatchesDarkMode","updateUserDarkMode","addSerializedToken","removeSerializedToken","addSavedToken","addSavedPool","addSerializedPair","removeSerializedPair","toggleURLWarning","useIsDarkMode","user","matchesDarkMode","userDarkMode","shallowEqual","useSavedTokens","savedTokens","useSavedPools","savedPools","useURLWarningVisible","URLWarningVisible","StyledInternalLink","styled","button","attrs","warning","theme","backgroundColor","red1","primary1","white","darken","bg1","text4","X","div","size","marginRight","marginLeft","blue1","disabled","text2","Link","fontSize","StyledLink","rotateImg","LinkIconFeather","Trash","text3","keyframes","img","ExternalLink","href","rel","rest","handleClick","event","ctrlKey","metaKey","outboundLink","label","preventDefault","window","onClick","rotate","Spinner","text1","span","mediaWidth","upToMedium","HideMedium","HideSmall","upToSmall","HideExtraSmall","upToExtraSmall","ExtraSmallOnly","MEDIA_WIDTHS","upToLarge","FONT_WEIGHTS","light","regular","medium","demiBold","bold","FONT_SIZES","tiny","small","normal","h1","h2","h3","mediaWidthTemplates","b","c","css","colors","darkMode","black","text5","bg0","bg2","bg3","bg4","bg5","modalBG","advancedBG","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","pink1","red2","red3","green1","yellow1","yellow2","yellow3","blue2","black1","ThemeProvider","children","themeObject","useMemo","grids","sm","md","lg","fontWeight","shadow1","flexColumnNoWrap","flexRowNoWrap","TextWrapper","Text","color","TYPE","FixedGlobalStyle","createGlobalStyle","ThemedGlobalStyle","StyledMenuIcon","MenuIcon","StyledMenuButton","StyledMenu","MenuFlyout","MenuItem","Menu","node","useRef","MENU","toggle","handler","handlerRef","handleClickOutside","e","contains","document","addEventListener","removeEventListener","useOnClickOutside","Row","Box","align","justify","padding","border","borderRadius","RowBetween","RowFlat","AutoRow","gap","RowFixed","ResponsiveRow","updateTokenData","addTokenKeys","addPoolAddresses","updateChartData","updateTransactions","updatePriceData","client","ApolloClient","uri","cache","InMemoryCache","queryDeduplication","defaultOptions","watchQuery","fetchPolicy","blockClient","POOLS_FOR_TOKEN","gql","fetchPoolsForToken","query","variables","loading","Boolean","addresses","formattedData","asToken0","concat","asToken1","p","dayjs","extend","utc","weekOfYear","ONE_DAY_UNIX","TOKEN_CHART","fetchTokenChartData","startTimestamp","endTimestamp","unix","skip","allFound","startTime","chartResData","tokenDayDatas","formattedExisting","accum","dayData","date","toFixed","volumeUSD","parseFloat","totalValueLockedUSD","firstEntry","timestamp","latestTvl","nextDay","currentDayIndex","includes","dateMap","splitQuery","vars","values","skipCount","fetchedData","end","sliced","slice","log","useDeltaTimestamps","utcCurrentTime","subtract","startOf","GET_BLOCKS","timestamps","queryString","useBlocksFromTimestamps","useState","blocks","setBlocks","setError","results","fetchData","formatted","t","split","number","getBlocksFromTimestamps","TransactionType","PRICES_BY_BLOCK","tokenAddress","block","fetchTokenPriceData","time","blocksNew","row","prices","derivedETH","priceUSD","brow","index","ethPriceUSD","formattedHistory","close","formatTokenSymbol","symbol","formatTokenName","name","GLOBAL_TRANSACTIONS","fetchTokenTransactions","mints0","mintsAs0","m","type","MINT","hash","transaction","sender","origin","token0Symbol","pool","token0","token1Symbol","token1","token0Address","token1Address","amountUSD","amountToken0","amount0","amountToken1","amount1","mints1","mintsAs1","burns0","burnsAs0","BURN","owner","burns1","burnsAs1","swaps0","swapsAs0","SWAP","swaps1","swapsAs1","isAddress","value","getAddress","ETHERSCAN_PREFIXES","3","4","5","42","getEtherscanLink","prefix","currentTimestamp","Date","getTime","shortenAddress","chars","substring","escapeRegExp","string","replace","feeTierPercent","fee","toPrecision","notEmpty","useAllTokenData","tokens","byAddress","useAddTokenKeys","tokenAddresses","useTokenDatas","allTokenData","filter","get2DayChange","valueNow","value24HoursAgo","value48HoursAgo","currentChange","previousChange","adjustedPercentChange","isNaN","isFinite","getPercentChange","ETH_PRICES","fetchEthPrices","block24","block48","blockWeek","oneDay","twoDay","week","oneWeek","useEthPrices","setPrices","blockError","formattedBlocks","TOKENS_BULK","tokenString","ethPrices","useQuery","loading24","error24","data24","loading48","error48","data48","loadingWeek","errorWeek","dataWeek","anyError","anyLoading","poolData","parsed24","parsed48","parsedWeek","volumeUSDChange","volumeUSDWeek","tvlUSD","tvlUSDChange","tvlToken","totalValueLocked","priceUSDOneDay","priceUSDWeek","priceUSDChange","priceUSDChangeWeek","txCount","updatePoolData","addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTickData","POOL_CHART","fetchPoolChartData","poolDayDatas","POOL_TRANSACTIONS","fetchPoolTransactions","mints","burns","swaps","useAllPoolData","pools","useAddPoolKeys","poolAddresses","usePoolDatas","allPoolData","untrackedAddresses","TOKEN_SEARCH","POOL_SEARCH","useFetchSearchResults","allTokens","allPools","tokenData","setTokenData","setPoolData","toUpperCase","asSymbol","allFetchedTokens","asAddress","asName","allFetchedPools","as0","as1","tokenFullDatas","tokenFullLoading","poolDatasFull","formattedTokens","newTokens","combinedTokens","filteredSortedTokens","tokenEntryKey","match","RegExp","some","newPools","combinedPools","toLocaleLowerCase","Column","AutoColumn","BAD_SRCS","getTokenLogoURL","StyledLogo","srcs","alt","refresh","src","find","onError","CurrencyLogo","style","checkSummed","getNumberSign","formatDollarAmount","num","digits","round","signed","returnValue","numbro","formatCurrency","average","mantissa","formatAmount","nf","Intl","NumberFormat","format","toTwoNonZeroDecimals","n","log10","Math","floor","pow","countDecimals","formatPercentageValue","hideDecimals","usePlusSymbol","sign","abs","percentageFormat","numOfDecimals","roundToNDecimals","decimals","decimalsCount","coeff","Wrapper","sizeraw","margin","HigherLogo","CoveredLogo","DoubleCurrencyLogo","address0","address1","Card","LightCard","GreyCard","DarkGreyCard","GreyBadge","useTheme","useContext","ThemeContext","Base","RebassButton","ButtonPrimary","bgColor","altDisabledStyle","ButtonGray","ButtonSecondary","ButtonOutlined","lighten","HoverIcon","SavedIcon","PopoverContainer","show","transparentize","ReferenceElement","Arrow","Popover","content","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","options","offset","element","styles","update","attributes","delay","leading","savedCallback","tick","useInterval","popper","className","arrow","TooltipContainer","Tooltip","text","link","adjustSize","HoverInlineText","maxCharacters","showHover","setShowHover","onMouseEnter","onMouseLeave","Container","StyledInput","input","hide","Blackout","ResponsiveGrid","Break","HoverText","HoverRowLink","OptionButton","enabled","SearchSmall","hideTokens","hidePools","history","useHistory","menuRef","textRef","handleDown","focus","focused","setFocused","showMenu","setShowMenu","setValue","tokensShown","setTokensShown","poolsShown","setPoolsShown","handleNav","to","watchListTokenData","watchListPoolData","showWatchlist","setShowWatchlist","tokensForList","poolForList","keyName","onKeyDown","onChange","placeholder","onFocus","onBlur","pl","textAlign","ml","stopPropagation","whiteSpace","feeTier","token0Price","HeaderFrame","HeaderControls","HeaderElementWrap","HeaderRow","HeaderLinks","Title","NavLink","UniIcon","activeClassName","StyledNavLink","Header","LogoDark","isActive","Search","PhishAlert","StyledClose","URLWarning","useURLWarningToggle","showURLWarning","isMobile","display","hostname","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","listVersionLabel","version","major","minor","patch","ChangesList","ul","ListUpdatePopup","popKey","listUrl","oldList","newList","auto","removeThisPopup","handleAcceptUpdate","category","action","diffTokenLists","tokensAdded","added","tokensChanged","changed","tokensRemoved","removed","numTokensChanged","flex","token","Fragment","flexGrow","RowNoFlex","TransactionPopup","success","summary","paddingRight","Popup","Fader","AnimatedFader","animated","PopupItem","removeAfterMs","timeout","clearTimeout","popupContent","txn","listUpdate","faderStyle","useSpring","from","config","duration","MobilePopupWrapper","MobilePopupInner","FixedPopupColumn","extraPadding","Popups","activePopups","list","popupList","useActivePopups","urlWarningActive","reverse","DarkModeQueryParamReader","parse","parseArrays","ignoreQueryPrefix","toLowerCase","usePrevious","LineChart","topLeft","topRight","bottomLeft","bottomRight","minHeight","textColor","chartRef","chartCreated","setChart","dataPrev","resize","currentValue","handleResize","parentElement","clientWidth","timeScale","fitContent","scrollToPosition","isClient","chart","createChart","layout","fontFamily","rightPriceScale","scaleMargins","top","bottom","drawTicks","borderVisible","watermark","grid","horzLines","visible","vertLines","crosshair","horzLine","labelBackgroundColor","vertLine","series","addAreaSeries","lineColor","topColor","bottomColor","lineWidth","priceLineVisible","setData","scrollToRealTime","applyOptions","priceFormat","minMove","formatter","price","subscribeCrosshairMove","param","point","x","y","seriesPrices","get","updateProtocolData","useProtocolData","protocolData","protocol","useProtocolChartData","chartData","useProtocolTransactions","transactions","negative","neutral","wrap","simple","truncated","StyledSVG","svg","Loader","pulse","AnimatedImg","LocalLoader","v3","loadingAnimation","LoadingRows","Label","ClickableText","PageButtons","faded","LinkWrapper","ResponsiveLogo","DataRow","SORT_FIELD","TokenTable","tokenDatas","maxItems","sortField","setSortField","sortDirection","setSortDirection","page","setPage","maxPage","setMaxPage","extraPages","sortedTokens","sort","handleSort","newField","field","PoolTable","poolDatas","sortedPools","PageWrapper","ThemedBackground","ThemedBackgroundGlobal","unixToDate","formatTime","now","inSeconds","diff","inMinutes","inHours","inDays","BarChart","addHistogramSeries","SortText","abs0","abs1","outputTokenSymbol","inputTokenSymbol","TransactionTable","txFilter","setTxFilter","sortedTransactions","ChartWrapper","Home","volumeHover","setVolumeHover","liquidityHover","setLiquidityHover","formattedTvlData","day","formattedVolumeData","mr","toLocaleString","txCountChange","Protocol","PoolPage","watchlistPools","TokensOverview","watchListTokens","Item","TopBar","justifyContent","Content","CollapsibleContainer","isOpenedDefault","collapseBody","header","isOpened","setIsOpened","roundedBottom","Circle","InlineCircle","nDecimals","getTokenArrayValue","tokenBalances","tokenPrices","sum","multiplyArraysElementWise","arr1","arr2","Array","rightAlignedStyles","leftAlignedStyles","reversedOrder","maxHeight","Amount","Symbol","maxWidth","VerticalCryptoAmounts","tokenSymbols","tokenAmounts","roundToDecimals","tokenSymbolsRendered","setNewSimulationPoolData","resetSimulationCoefficients","setSimulatedPriceCoefficients","setDefaultSliderPriceCoefficient","setPositionMinPrice","setPositionMaxPrice","switchPriceRatioOrder","toggleInfiniteRange","setPositionInvestedAmount","addPosition","removePosition","useAllSimulatorData","simulator","getReservesInvestedToInfiniteRange","investment","tokenReserves","getSimulatedStatsForRange","currentTokenPricesUsd","simulatedTokenPricesUsd","priceMin","priceMax","investmentUsd","currentPriceRatio","simulatedPriceRatio","virtualTokenReservesCurrentPrice","virtualTokenReservesAtLimitPriceMin","sqrt","virtualTokenReservesAtLimitPriceMax","realTokenReservesAtLimitPriceMin","commonPart","realTokenReservesAtLimitPriceMax","realTokenReservesCurrentPrice","virtualReservesSimulatedPrice","realTokenReservesSimulatedPrice","tokenReservesCurrentPrice","tokenReservesSimulatedPrice","holdValue","poolValue","ilAbsolute","ilRelative","getRelativeImpLoss","getRelativeAndAbsoluteImpLoss","getInvestmentIncreaseCoefficient","currentTokenPrices","fakeInvestment","getRealReservesAtLimitPrices","Col","customColor","GridRow","firstColumn","secondColumn","thirdColumn","fourthColumn","columnColors","columnAlignment","GridWrapper","RightPaddingWrapper","PoolValueCryptoFiatWrapper","PoolValueCryptoFiatWrapperBorder","AdditionalInfoWrapper","AddRow","AddTitle","IlValuesWrapper","IlRelative","IlAbsolute","PositionStatus","RemovePositionWrapper","FiatDifference","PositionOverview","positionIndex","infiniteRangeSelected","simulatedPriceCoefficients","priceRatioOrder","capitalEfficiencyCoefficient","getCapitalEfficiencyCoefficient","simulationStats","Infinity","tokenBalancesDiff","subtractArraysElementWise","positionValueCurrentPrices","positionValueSimulatedPrices","currentPrice","getPositionStatus","ICONS","GITHUB","require","TWITTER","TELEGRAM","DISCORD","DISCORD_FULL","PORTIS","ARROW_DOWN","ARROW_UP","ARROW_LEFT","ARROW_RIGHT","CHECK","CHECK_ACTIVE","EDIT","INFO","INFO_ACTIVE","WARNING","WARNING_ACTIVE","QUESTION","QUESTION_ACTIVE","EXTERNAL_LINK","FEEDBACK","REFRESH","SUPPORT","CLOSE","COPY","SETTINGS","CROCO_EMOJI","CROCO_LOGO","HEART","FILTER","POOLS","DASHBOARD","HAMBURGER_MENU","UNKNOWN_TOKEN","PLUS","LIGHT_MODE","DARK_MODE","SvgWrapper","hoverColor","Icon","icon","beforeInjection","setAttribute","IconWrapper","isChecked","Checkbox","onKeyUp","keyCode","handleKeyboard","tabIndex","textIndent","noBorder","useDarkBorder","variant","InputWrapper","InputAddon","Input","innerRef","innerAddon","labelAddon","labelRight","isDisabled","clearButton","labelAddonIsVisible","onClear","addonAlign","noError","useWhiteBackground","inputAddonRef","createRef","React","inputAddonWidth","setInputAddonWidth","rect","getBoundingClientRect","spellCheck","Button","selected","RangeTypeSelect","typeSelected","onTypeChange","useStyles","makeStyles","root","thumb","marginTop","boxShadow","thumbDisabled","valueLabel","track","trackDisabled","rail","opacity","mark","markLabel","valuetext","RangeSelector","min","max","step","defaultValues","marks","getColors","classes","Slider","valueLabelFormat","getAriaValueText","aria-labelledby","InputLabel","SliderWrapper","PriceRangeSelector","onPriceLimitChange","sliderValues","setSliderValues","sliderMinPrice","setSliderMinPrice","sliderMaxPrice","setSliderMaxPrice","handleSliderLimitPriceChange","typedValueFloat","getSliderMarkValue","trim","_","newValue","handleSliderMoveChange","InputWrapper2","PercentageLabel","AbsValueWrapper","RelativeRangeSelector","initialMinRatio","initialMaxRatio","getAbsolutePriceRatio","percentageDifference","Headline","RangeInputsWrapper","RangeTypeSelectWrapper","InfiniteRangeWrapper","InvestmentWrapper","InvestmentTitle","InvestmentInputWrapper","CurrentPriceLabel","PositionSelector","selectorType","priceOrder","rangeSelectorType","setRangeSelectorType","handlePriceLimitChange","priceLimit","limit","inputValue","inputValueFloat","handleInvestmentChange","PositionHeadline","PositionDataWrapper","PositionSelectorWrapper","PositionOverviewWrapper","ExpandButton","Position","isExpanded","setIsExpanded","SwitchPriceLabel","SwitchPriceButton","PriceReferenceSwitch","left","MaterialSlider","defaultValue","valueLabelDisplay","TokenNameWrapper","TokenSymbol","SliderLabel","SliderLeftLabel","SliderRightLabel","SimulatedPrice","SimulatePriceRow","tokenSymbol","simulatedPrice","onSliderMoveChange","onNewDefaultSliderValue","defaultSliderValue","numSteps","sliderMidValue","setSliderMidValue","sliderValue","setSliderValue","handleInputChange","CurrentPricesWrapper","CurrentPricesTitle","CurrentPricesValuesWrapper","CurrentPricesValue","PriceRowsWrapper","SubTitlesWrapper","SubTitleLeft","SubTitleRight","XScrollWrapper","PriceSimulationBox","simulatedCoefficients","poolId","PoolSelect","Vibrant","getPalette","palette","detectedHex","hex","AAscore","shade","useColor","setColor","formattedAddress","useLayoutEffect","stale","getColorFromToken","tokenColor","SimulatedDensityChart","maxInvestment","ResponsiveContainer","AreaChart","right","CartesianGrid","strokeDasharray","_data","dataKeyName","Area","isAnimationActive","dataKey","fillOpacity","XAxis","xAxisId","domain","position","textAnchor","YAxis","angle","dx","ReferenceLine","isFront","PureComponent","ContentWrapper","SectionHeadline","PoolSelectTitle","PositionsHeadline","PositionsTitle","PositionWrapper","PoolSelectWrapper","PositionsSelectorWrapper","AddPositionButtonWrapper","AddPositionButton","SimulationBoxWrapper","Simulator","scrollTo","positions","token0PriceUSD","token1PriceUSD","tokenWeights","poolTokenReserves","tvlToken0","tvlToken1","swapFee","volume24Usd","minPriceBottom","maxPriceTop","xAxisOffset","liquidityValuesArrLength","initialLiquidityValues","liquidityValues","liquidityValuesBottom","liquidityValuesTop","bottomIndex","lastLiquidityValues","getDataForSimulatedDensityChart","isOnSwitch","ChartView","ToggleWrapper","ToggleElementFree","CandleChart","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","PriceText","ContentLayout","TokenPage","useTokenData","poolsForToken","usePoolsForToken","useTokenTransactions","useTokenChartData","TVL","view","setView","latestValue","setLatestValue","priceData","secondsInterval","useTokenPriceData","formattedPriceData","high","low","alignItems","VOL","PRICE","RedirectInvalidToken","FEE_TIER_TO_TICK_SPACING","fetchInitializedTicks","poolAddress","tickIdxLowerBound","tickIdxUpperBound","tickQuery","surroundingTicks","surroundingTicksResult","ticks","fetchTicksSurroundingPrice","numSurroundingTicks","poolQuery","poolResult","poolCurrentTick","liquidity","token0Decimals","token1Decimals","poolCurrentTickIdx","tickSpacing","activeTickIdx","initializedTicksResult","initializedTicks","tickIdxToInitializedTick","keyBy","activeTickIdxForPrice","TickMath","MIN_TICK","MAX_TICK","activeTickProcessed","liquidityActive","tickIdx","liquidityNet","price0","tickToPrice","price1","liquidityGross","activeTick","Direction","subsequentTicks","computeSurroundingTicks","direction","previousTickProcessed","processedTicks","currentTickIdx","ASC","currentTickProcessed","currentInitializedTick","add","DESC","notEqual","previousTicks","ticksProcessed","TooltipWrapper","DensityChart","tickData","usePoolTickData","poolTickData","updatePoolTickData","currentEntry","isCurrent","activeLiquidity","grouped","minimumSignificantDigits","reversed","Bar","TokenButton","usePoolChartData","usePoolTransactions","token1Price","DENSITY","AppWrapper","HeaderWrapper","BodyWrapper","Marginer","App","setLoading","fallback","component","exact","strict","PoolsOverview","createReducer","blockNumber","builder","addCase","payload","popup","nanoid","updateVersion","pairKey","initialState","pairs","lastUpdateVersionTimestamp","serializedToken","serializedPair","tokenAAddress","tokenBAddress","GEMINI_LIST","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","byUrl","activeListUrls","requestId","tokenList","getVersionUpgrade","VersionUpgrade","NONE","errorMessage","u","lastInitializedSet","s","l","Set","newListOfListsSet","has","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","test","callData","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","callResults","calls","blocksPerFetch","listeners","callListeners","callKey","fetchingBlockNumber","lastUpdated","initialPosition","fetchError","defaultSliderPriceCoefficients","tokenCount","coefficientsArrCopy","currentOrder","newTop","newBottom","splice","PERSISTED_KEYS","store","configureStore","reducer","multicall","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","Updater","darkHandler","matches","matchMedia","addListener","removeListener","GLOBAL_DATA","GLOBAL_CHART","fetchChartData","uniswapDayDatas","fetchTopTransactions","mintEntries","burnEntries","swapEntries","factories","totalVolumeUSD","useFetchProtocolData","fetchedProtocolData","useFetchGlobalChartData","fetchedChartData","chartError","TOP_TOKENS","updateTokenDatas","useUpdateTokenData","useTopTokenAddresses","tokenDataError","tokenDataLoading","TOP_POOLS","POOLS_BULK","poolString","useUpdatePoolData","useTopPoolAddresses","totalValueLockedToken0","totalValueLockedToken1","sqrtPrice","poolDataError","poolDataLoading","GOOGLE_ANALYTICS_ID","REACT_APP_GOOGLE_ANALYTICS_ID","Updaters","initialize","set","customBrowserType","testMode","exception","description","filename","lineno","colno","fatal","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d704352f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github.ea25994e.svg\";","export default __webpack_public_path__ + \"static/media/twitter.7052a9e4.svg\";","export default __webpack_public_path__ + \"static/media/telegram.1731eff4.svg\";","export default __webpack_public_path__ + \"static/media/discord.0aae010a.svg\";","export default __webpack_public_path__ + \"static/media/discord-full.41101eea.svg\";","export default __webpack_public_path__ + \"static/media/portis.6db52fac.svg\";","export default __webpack_public_path__ + \"static/media/arrow_down.e717b966.svg\";","export default __webpack_public_path__ + \"static/media/arrow_up.7bf4b2db.svg\";","export default __webpack_public_path__ + \"static/media/arrow_left.e2de47b5.svg\";","export default __webpack_public_path__ + \"static/media/arrow_right.0d1cd8c2.svg\";","export default __webpack_public_path__ + \"static/media/check.d0a933c9.svg\";","export default __webpack_public_path__ + \"static/media/check_active.7de8a0dc.svg\";","export default __webpack_public_path__ + \"static/media/edit.0b6bcf51.svg\";","export default __webpack_public_path__ + \"static/media/info.fa150b9f.svg\";","export default __webpack_public_path__ + \"static/media/info_active.806642c2.svg\";","export default __webpack_public_path__ + \"static/media/warning.ef4ea86d.svg\";","export default __webpack_public_path__ + \"static/media/warning_active.6152e6bf.svg\";","export default __webpack_public_path__ + \"static/media/question.f1ea76c3.svg\";","export default __webpack_public_path__ + \"static/media/question_active.d1edfcc7.svg\";","export default __webpack_public_path__ + \"static/media/external_link.1f3c7b99.svg\";","export default __webpack_public_path__ + \"static/media/feedback.d50fce8c.svg\";","export default __webpack_public_path__ + \"static/media/refresh.665ee638.svg\";","export default __webpack_public_path__ + \"static/media/support.6bd78201.svg\";","export default __webpack_public_path__ + \"static/media/close.75269e12.svg\";","export default __webpack_public_path__ + \"static/media/copy.f6ac61d8.svg\";","export default __webpack_public_path__ + \"static/media/settings.74946b91.svg\";","export default __webpack_public_path__ + \"static/media/croco_emoji.f707f64b.svg\";","export default __webpack_public_path__ + \"static/media/croco_logo.da10be52.svg\";","export default __webpack_public_path__ + \"static/media/heart.a6581789.svg\";","export default __webpack_public_path__ + \"static/media/filter.db93549b.svg\";","export default __webpack_public_path__ + \"static/media/pools.35670566.svg\";","export default __webpack_public_path__ + \"static/media/dashboard.7b11ee75.svg\";","export default __webpack_public_path__ + \"static/media/hamburger_menu.5c353009.svg\";","export default __webpack_public_path__ + \"static/media/unknown_token.a6fdbf67.svg\";","export default __webpack_public_path__ + \"static/media/plus.3a5f2591.svg\";","export default __webpack_public_path__ + \"static/media/light-mode.73872693.svg\";","export default __webpack_public_path__ + \"static/media/dark-mode.a79afbd9.svg\";","import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport XHR from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\ni18next\n  .use(XHR)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: `./locales/{{lng}}.json`,\n    },\n    react: {\n      useSuspense: true,\n    },\n    fallbackLng: 'en',\n    preload: ['en'],\n    keySeparator: false,\n    interpolation: { escapeValue: false },\n  })\n\nexport default i18next\n","import { useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport { RouteComponentProps } from 'react-router-dom'\n\n// fires a GA pageview every time the route changes\nexport default function GoogleAnalyticsReporter({ location: { pathname, search } }: RouteComponentProps): null {\n  useEffect(() => {\n    ReactGA.pageview(`${pathname}${search}`)\n  }, [pathname, search])\n  return null\n}\n","export default __webpack_public_path__ + \"static/media/logo_white.ff3473ba.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z\",\n  stroke: \"black\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13C19.5523 13 20 12.5523 20 12C20 11.4477 19.5523 11 19 11C18.4477 11 18 11.4477 18 12C18 12.5523 18.4477 13 19 13Z\",\n  stroke: \"black\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5 13C5.55228 13 6 12.5523 6 12C6 11.4477 5.55228 11 5 11C4.44772 11 4 11.4477 4 12C4 12.5523 4.44772 13 5 13Z\",\n  stroke: \"black\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nfunction SvgMenu(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenu);\nexport default __webpack_public_path__ + \"static/media/menu.79681e1f.svg\";\nexport { ForwardRef as ReactComponent };","import { createAction } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\n\nexport type PopupContent = {\n  listUpdate: {\n    listUrl: string\n    oldList: TokenList\n    newList: TokenList\n    auto: boolean\n  }\n}\n\nexport enum ApplicationModal {\n  WALLET,\n  SETTINGS,\n  MENU,\n}\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\nexport const setOpenModal = createAction<ApplicationModal | null>('application/setOpenModal')\nexport const addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\n  'application/addPopup'\n)\nexport const removePopup = createAction<{ key: string }>('application/removePopup')\n","import { ChainId } from '@uniswap/sdk'\nimport { FortmaticConnector as FortmaticConnectorCore } from '@web3-react/fortmatic-connector'\n\nexport const OVERLAY_READY = 'OVERLAY_READY'\n\ntype FormaticSupportedChains = Extract<ChainId, ChainId.MAINNET | ChainId.ROPSTEN | ChainId.RINKEBY | ChainId.KOVAN>\n\nconst CHAIN_ID_NETWORK_ARGUMENT: { readonly [chainId in FormaticSupportedChains]: string | undefined } = {\n  [ChainId.MAINNET]: undefined,\n  [ChainId.ROPSTEN]: 'ropsten',\n  [ChainId.RINKEBY]: 'rinkeby',\n  [ChainId.KOVAN]: 'kovan',\n}\n\nexport class FortmaticConnector extends FortmaticConnectorCore {\n  async activate() {\n    if (!this.fortmatic) {\n      const { default: Fortmatic } = await import('fortmatic')\n\n      const { apiKey, chainId } = this as any\n      if (chainId in CHAIN_ID_NETWORK_ARGUMENT) {\n        this.fortmatic = new Fortmatic(apiKey, CHAIN_ID_NETWORK_ARGUMENT[chainId as FormaticSupportedChains])\n      } else {\n        throw new Error(`Unsupported network ID: ${chainId}`)\n      }\n    }\n\n    const provider = this.fortmatic.getProvider()\n\n    const pollForOverlayReady = new Promise((resolve) => {\n      const interval = setInterval(() => {\n        if (provider.overlayReady) {\n          clearInterval(interval)\n          this.emit(OVERLAY_READY)\n          resolve()\n        }\n      }, 200)\n    })\n\n    const [account] = await Promise.all([\n      provider.enable().then((accounts: string[]) => accounts[0]),\n      pollForOverlayReady,\n    ])\n\n    return { provider: this.fortmatic.getProvider(), chainId: (this as any).chainId, account }\n  }\n}\n","import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n  resolve: (result: any) => void\n  reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n  public readonly chainId: number\n  public readonly url: string\n  public readonly host: string\n  public readonly path: string\n  public readonly batchWaitTimeMs: number\n\n  private nextId = 1\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n  private batch: BatchItem[] = []\n\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\n  }\n\n  public readonly clearBatch = async () => {\n    console.debug('Clearing batch', this.batch)\n    const batch = this.batch\n    this.batch = []\n    this.batchTimeoutId = null\n    let response: Response\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map((item) => item.request)),\n      })\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n      return\n    }\n\n    if (!response.ok) {\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n      return\n    }\n\n    let json\n    try {\n      json = await response.json()\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n      return\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {})\n    for (const result of json) {\n      const {\n        resolve,\n        reject,\n        request: { method },\n      } = byKey[result.id]\n      if (resolve && reject) {\n        if ('error' in result) {\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n        } else if ('result' in result) {\n          resolve(result.result)\n        } else {\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n        }\n      }\n    }\n  }\n\n  public readonly sendAsync = (\n    request: {\n      jsonrpc: '2.0'\n      id: number | string | null\n      method: string\n      params?: unknown[] | Record<string, unknown>\n    },\n    callback: (error: any, response: any) => void\n  ): void => {\n    this.request(request.method, request.params)\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch((error) => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    params?: unknown[] | Record<string, unknown>\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params)\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params,\n        },\n        resolve,\n        reject,\n      })\n    })\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n    return promise\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId]\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return\n  }\n}\n","import { Web3Provider } from '@ethersproject/providers'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\n\nimport { FortmaticConnector } from './Fortmatic'\nimport { NetworkConnector } from './NetworkConnector'\n\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL\nconst FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY\nconst PORTIS_ID = process.env.REACT_APP_PORTIS_ID\n\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '1')\n\nif (typeof NETWORK_URL === 'undefined') {\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\n}\n\nexport const network = new NetworkConnector({\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n})\n\nlet networkLibrary: Web3Provider | undefined\nexport function getNetworkLibrary(): Web3Provider {\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42],\n})\n\n// mainnet only\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: NETWORK_URL },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000,\n})\n\n// mainnet only\nexport const fortmatic = new FortmaticConnector({\n  apiKey: FORMATIC_KEY ?? '',\n  chainId: 1,\n})\n\n// mainnet only\nexport const portis = new PortisConnector({\n  dAppId: PORTIS_ID ?? '',\n  networks: [1],\n})\n\n// mainnet only\nexport const walletlink = new WalletLinkConnector({\n  url: NETWORK_URL,\n  appName: 'Uniswap',\n  appLogoUrl:\n    'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg',\n})\n","import { ChainId, JSBI, Percent, Token, WETH } from '@uniswap/sdk'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../connectors'\n\nexport const FACTORY_ADDRESS = '0xFeabCc62240297F1e4b238937D68e7516f0918D7'\n\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const WETH_ADDRESS = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin')\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C')\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD')\nexport const COMP = new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound')\nexport const MKR = new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker')\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth')\nexport const WBTC = new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC')\n\n// Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 13\nexport const PROPOSAL_LENGTH_IN_BLOCKS = 40_320\nexport const PROPOSAL_LENGTH_IN_SECS = AVERAGE_BLOCK_TIME_IN_SECS * PROPOSAL_LENGTH_IN_BLOCKS\n\nexport const GOVERNANCE_ADDRESS = '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F'\n\nexport const TIMELOCK_ADDRESS = '0x1a9C8182C09F50C8318d769245beA52c32BE35BC'\n\nconst UNI_ADDRESS = '0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984'\nexport const UNI: { [chainId in ChainId]: Token } = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\n}\n\nexport const COMMON_CONTRACT_NAMES: { [address: string]: string } = {\n  [UNI_ADDRESS]: 'UNI',\n  [GOVERNANCE_ADDRESS]: 'Governance',\n  [TIMELOCK_ADDRESS]: 'Timelock',\n}\n\n// TODO: specify merkle distributor for mainnet\nexport const MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e',\n}\n\nconst WETH_ONLY: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.ROPSTEN]: [WETH[ChainId.ROPSTEN]],\n  [ChainId.RINKEBY]: [WETH[ChainId.RINKEBY]],\n  [ChainId.GÖRLI]: [WETH[ChainId.GÖRLI]],\n  [ChainId.KOVAN]: [WETH[ChainId.KOVAN]],\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, COMP, MKR, WBTC],\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]],\n  },\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, WBTC],\n}\n\nexport const NETWORK_ONLY = {\n  fetchPolicy: 'network-only',\n}\n\n// temporary! fixing USD accounting on subgraph\nexport const TOKEN_HIDE = [\n  '0x7d29a64504629172a429e64183d6673b9dacbfce',\n  '0xd46ba6d942050d489dbd938a2c909a5d5039a161',\n  '0x7dfb72a2aad08c937706f21421b15bfc34cba9ca',\n]\nexport const POOL_HIDE = [\n  '0x86d257cdb7bc9c0df10e84c8709697f92770b335',\n  '0xf8dbd52488978a79dfe6ffbd81a01fc5948bf9ee',\n  '0x8fe8d9bb8eeba3ed688069c3d6b556c9ca258248',\n]\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [\n      new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\n      new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin'),\n    ],\n    [USDC, USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport interface WalletInfo {\n  connector?: AbstractConnector\n  name: string\n  iconName: string\n  description: string\n  href: string | null\n  color: string\n  primary?: true\n  mobile?: true\n  mobileOnly?: true\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true,\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D',\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: 'WalletConnect',\n    iconName: 'walletConnectIcon.svg',\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n    href: null,\n    color: '#4196FC',\n    mobile: true,\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: 'Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Use Coinbase Wallet app on mobile device',\n    href: null,\n    color: '#315CF5',\n  },\n  COINBASE_LINK: {\n    name: 'Open in Coinbase Wallet',\n    iconName: 'coinbaseWalletIcon.svg',\n    description: 'Open in Coinbase Wallet app.',\n    href: 'https://go.cb-w.com/mtUDhEZPy1',\n    color: '#315CF5',\n    mobile: true,\n    mobileOnly: true,\n  },\n  FORTMATIC: {\n    connector: fortmatic,\n    name: 'Fortmatic',\n    iconName: 'fortmaticIcon.png',\n    description: 'Login using Fortmatic hosted wallet',\n    href: null,\n    color: '#6748FF',\n    mobile: true,\n  },\n  Portis: {\n    connector: portis,\n    name: 'Portis',\n    iconName: 'portisIcon.png',\n    description: 'Login using Portis hosted wallet',\n    href: null,\n    color: '#4A6C9B',\n    mobile: true,\n  },\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// used for rewards deadlines\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7)\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n]\n","import { Web3Provider } from '@ethersproject/providers'\nimport { ChainId } from '@uniswap/sdk'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { injected } from '../connectors'\nimport { NetworkContextName } from '../constants'\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const context = useWeb3ReactCore<Web3Provider>()\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\n  return context.active ? context : contextNetwork\n}\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        if (isMobile && window.ethereum) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true)\n          })\n        } else {\n          setTried(true)\n        }\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  return tried\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n */\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\n\n  useEffect(() => {\n    const { ethereum } = window\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = () => {\n        // eat errors\n        activate(injected, undefined, true).catch((error) => {\n          console.error('Failed to activate after chain changed', error)\n        })\n      }\n\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch((error) => {\n            console.error('Failed to activate after accounts changed', error)\n          })\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n    return undefined\n  }, [active, error, suppress, activate])\n}\n","import { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal } from './actions'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport function useModalOpen(modal: ApplicationModal): boolean {\n  const openModal = useSelector((state: AppState) => state.application.openModal)\n  return openModal === modal\n}\n\nexport function useToggleModal(modal: ApplicationModal): () => void {\n  const open = useModalOpen(modal)\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open])\n}\n\nexport function useOpenModal(modal: ApplicationModal): () => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal])\n}\n\nexport function useCloseModals(): () => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch])\n}\n\nexport function useWalletModalToggle(): () => void {\n  return useToggleModal(ApplicationModal.WALLET)\n}\n\nexport function useToggleSettingsMenu(): () => void {\n  return useToggleModal(ApplicationModal.SETTINGS)\n}\n\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\n  const dispatch = useDispatch()\n\n  return useCallback(\n    (content: PopupContent, key?: string) => {\n      dispatch(addPopup({ content, key }))\n    },\n    [dispatch]\n  )\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup(): (key: string) => void {\n  const dispatch = useDispatch()\n  return useCallback(\n    (key: string) => {\n      dispatch(removePopup({ key }))\n    },\n    [dispatch]\n  )\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n  const list = useSelector((state: AppState) => state.application.popupList)\n  return useMemo(() => list.filter((item) => item.show), [list])\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode')\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSavedToken = createAction<{ address: string }>('user/addSavedToken')\nexport const addSavedPool = createAction<{ address: string }>('user/addSavedPool')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\n  'user/removeSerializedPair'\n)\nexport const toggleURLWarning = createAction<void>('app/toggleURLWarning')\n","import { ChainId, Pair, Token } from '@uniswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserDarkMode,\n  toggleURLWarning,\n  addSavedToken,\n  addSavedPool,\n} from './actions'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode,\n    }),\n    shallowEqual\n  )\n\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const darkMode = true\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\n  }, [darkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useSavedTokens(): [string[], (address: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.savedTokens)\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addSavedToken({ address }))\n    },\n    [dispatch]\n  )\n  return [savedTokens ?? [], updatedSavedTokens]\n}\n\nexport function useSavedPools(): [string[], (address: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.savedPools)\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addSavedPool({ address }))\n    },\n    [dispatch]\n  )\n  return [savedPools ?? [], updateSavedPools]\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useSelector((state: AppState) => state.user.URLWarningVisible)\n}\n\nexport function useURLWarningToggle(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch])\n}\n","import React, { HTMLProps, useCallback } from 'react'\nimport ReactGA from 'react-ga'\nimport { Link } from 'react-router-dom'\nimport styled, { keyframes } from 'styled-components'\nimport { darken } from 'polished'\nimport { MEDIA_WIDTHS } from './index'\nimport { ArrowLeft, X, ExternalLink as LinkIconFeather, Trash } from 'react-feather'\n\nexport const ButtonText = styled.button`\n  outline: none;\n  border: none;\n  font-size: inherit;\n  padding: 0;\n  margin: 0;\n  background: none;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.7;\n  }\n\n  :focus {\n    text-decoration: underline;\n  }\n`\n\nexport const Button = styled.button.attrs<{ warning: boolean }, { backgroundColor: string }>(({ warning, theme }) => ({\n  backgroundColor: warning ? theme.red1 : theme.primary1,\n}))`\n  padding: 1rem 2rem 1rem 2rem;\n  border-radius: 3rem;\n  cursor: pointer;\n  user-select: none;\n  font-size: 1rem;\n  border: none;\n  outline: none;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  color: ${({ theme }) => theme.white};\n  width: 100%;\n\n  :hover,\n  :focus {\n    background-color: ${({ backgroundColor }) => darken(0.05, backgroundColor)};\n  }\n\n  :active {\n    background-color: ${({ backgroundColor }) => darken(0.1, backgroundColor)};\n  }\n\n  :disabled {\n    background-color: ${({ theme }) => theme.bg1};\n    color: ${({ theme }) => theme.text4};\n    cursor: auto;\n  }\n`\n\nexport const CloseIcon = styled(X)<{ onClick: () => void }>`\n  cursor: pointer;\n`\n\n// for wrapper react feather icons\nexport const IconWrapper = styled.div<{ stroke?: string; size?: string; marginRight?: string; marginLeft?: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${({ size }) => size ?? '20px'};\n  height: ${({ size }) => size ?? '20px'};\n  margin-right: ${({ marginRight }) => marginRight ?? 0};\n  margin-left: ${({ marginLeft }) => marginLeft ?? 0};\n  & > * {\n    stroke: ${({ theme, stroke }) => stroke ?? theme.blue1};\n  }\n`\n\n// A button that triggers some onClick result, but looks like a link.\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\n  border: none;\n  text-decoration: none;\n  background: none;\n\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n  color: ${({ theme, disabled }) => (disabled ? theme.text2 : theme.primary1)};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\n// An internal link from the react-router-dom library that is correctly styled\nexport const StyledInternalLink = styled(Link)<{ fontSize?: string }>`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n  font-size: ${({ fontSize }) => fontSize ?? '16px'};\n\n  :hover {\n    text-decoration: none;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: none;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nconst StyledLink = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n  display: flex;\n  flex-direction: center;\n  align-items: center;\n\n  :hover {\n    text-decoration: underline;\n    text-decoration: none;\n    opacity: 0.7;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: none;\n  }\n\n  :active {\n    outline: none;\n    text-decoration: none;\n  }\n`\n\nconst LinkIconWrapper = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n\n  :hover {\n    text-decoration: none;\n    opacity: 0.7;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: none;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nexport const LinkIcon = styled(LinkIconFeather)`\n  height: 16px;\n  width: 18px;\n  margin-left: 10px;\n  stroke: ${({ theme }) => theme.blue1};\n`\n\nexport const TrashIcon = styled(Trash)`\n  height: 16px;\n  width: 18px;\n  margin-left: 10px;\n  stroke: ${({ theme }) => theme.text3};\n\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n\n  :hover {\n    opacity: 0.7;\n  }\n`\n\nconst rotateImg = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`\n\nexport const UniTokenAnimated = styled.img`\n  animation: ${rotateImg} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n  padding: 2rem 0 0 0;\n  filter: drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.15));\n`\n\n/**\n * Outbound link that handles firing google analytics events\n */\nexport function ExternalLink({\n  target = '_blank',\n  href,\n  rel = 'noopener noreferrer',\n  ...rest\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\n      // don't prevent default, don't redirect if it's a new tab\n      if (target === '_blank' || event.ctrlKey || event.metaKey) {\n        ReactGA.outboundLink({ label: href }, () => {\n          console.debug('Fired outbound link event', href)\n        })\n      } else {\n        event.preventDefault()\n        // send a ReactGA event and then trigger a location change\n        ReactGA.outboundLink({ label: href }, () => {\n          window.location.href = href\n        })\n      }\n    },\n    [href, target]\n  )\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\n}\n\nexport function ExternalLinkIcon({\n  target = '_blank',\n  href,\n  rel = 'noopener noreferrer',\n  ...rest\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\n      // don't prevent default, don't redirect if it's a new tab\n      if (target === '_blank' || event.ctrlKey || event.metaKey) {\n        ReactGA.outboundLink({ label: href }, () => {\n          console.debug('Fired outbound link event', href)\n        })\n      } else {\n        event.preventDefault()\n        // send a ReactGA event and then trigger a location change\n        ReactGA.outboundLink({ label: href }, () => {\n          window.location.href = href\n        })\n      }\n    },\n    [href, target]\n  )\n  return (\n    <LinkIconWrapper target={target} rel={rel} href={href} onClick={handleClick} {...rest}>\n      <LinkIcon />\n    </LinkIconWrapper>\n  )\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nexport const Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n`\n\nconst BackArrowLink = styled(StyledInternalLink)`\n  color: ${({ theme }) => theme.text1};\n`\nexport function BackArrow({ to }: { to: string }) {\n  return (\n    <BackArrowLink to={to}>\n      <ArrowLeft />\n    </BackArrowLink>\n  )\n}\n\nexport const CustomLightSpinner = styled(Spinner)<{ size: string }>`\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n`\n\nexport const OnlyMedium = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `};\n`\n\nexport const HideMedium = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `};\n`\n\nexport const HideSmall = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `};\n`\n\nexport const HideExtraSmall = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    display: none;\n  `};\n`\n\nexport const ExtraSmallOnly = styled.span`\n  display: none;\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    display: block;\n  `};\n`\n","import React, { useMemo } from 'react'\nimport styled, {\n  ThemeProvider as StyledComponentsThemeProvider,\n  createGlobalStyle,\n  css,\n  DefaultTheme,\n} from 'styled-components'\nimport { useIsDarkMode } from '../state/user/hooks'\nimport { Text, TextProps } from 'rebass'\nimport { Colors } from './styled'\n\nexport * from './components'\n\nexport const MEDIA_WIDTHS = {\n  upToExtraSmall: 500,\n  upToSmall: 720,\n  upToMedium: 960,\n  upToLarge: 1280,\n}\n\nexport const FONT_WEIGHTS = {\n  light: 300,\n  regular: 400,\n  medium: 500,\n  demiBold: 600,\n  bold: 700,\n} as const\n\nexport const FONT_SIZES = {\n  tiny: '12px',\n  small: '14px',\n  normal: '16px',\n  h1: '24px',\n  h2: '20px',\n  h3: '18px',\n} as const\n\nconst mediaWidthTemplates: { [width in keyof typeof MEDIA_WIDTHS]: typeof css } = Object.keys(MEDIA_WIDTHS).reduce(\n  (accumulator, size) => {\n    ;(accumulator as any)[size] = (a: any, b: any, c: any) => css`\n      @media (max-width: ${(MEDIA_WIDTHS as any)[size]}px) {\n        ${css(a, b, c)}\n      }\n    `\n    return accumulator\n  },\n  {}\n) as any\n\nconst white = '#FFFFFF'\nconst black = '#000000'\n\nexport function colors(darkMode: boolean): Colors {\n  return {\n    // base\n    white,\n    black,\n\n    // text\n    text1: darkMode ? '#FFFFFF' : '#000000',\n    text2: darkMode ? '#C3C5CB' : '#565A69',\n    text3: darkMode ? '#6C7284' : '#888D9B',\n    text4: darkMode ? '#565A69' : '#C3C5CB',\n    text5: darkMode ? '#2C2F36' : '#EDEEF2',\n\n    // backgrounds / greys\n    bg0: darkMode ? '#191B1F' : '#F7F8FA',\n    bg1: darkMode ? '#1F2128' : '#FFFFFF',\n    bg2: darkMode ? '#2C2F36' : '#F7F8FA',\n    bg3: darkMode ? '#40444F' : '#EDEEF2',\n    bg4: darkMode ? '#565A69' : '#CED0D9',\n    bg5: darkMode ? '#6C7284' : '#888D9B',\n\n    //specialty colors\n    modalBG: darkMode ? 'rgba(0,0,0,.425)' : 'rgba(0,0,0,0.3)',\n    advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.6)',\n\n    //primary colors\n    primary1: darkMode ? '#2172E5' : '#ff007a',\n    primary2: darkMode ? '#3680E7' : '#FF8CC3',\n    primary3: darkMode ? '#4D8FEA' : '#FF99C9',\n    primary4: darkMode ? '#376bad70' : '#F6DDE8',\n    primary5: darkMode ? '#153d6f70' : '#FDEAF1',\n\n    // color text\n    primaryText1: darkMode ? '#6da8ff' : '#ff007a',\n\n    // secondary colors\n    secondary1: darkMode ? '#2172E5' : '#ff007a',\n    secondary2: darkMode ? '#17000b26' : '#F6DDE8',\n    secondary3: darkMode ? '#17000b26' : '#FDEAF1',\n\n    // other\n    pink1: '#ff007a',\n    red1: '#FD4040',\n    red2: '#F82D3A',\n    red3: '#D60000',\n    green1: '#27AE60',\n    yellow1: '#FFE270',\n    yellow2: '#F3841E',\n    yellow3: '#F3B71E',\n    blue1: '#2172E5',\n    blue2: '#5199FF',\n    black1: '#121417',\n\n    // dont wanna forget these blue yet\n    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',\n    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\n  }\n}\n\nexport function theme(darkMode: boolean): DefaultTheme {\n  return {\n    ...colors(darkMode),\n\n    grids: {\n      sm: 8,\n      md: 12,\n      lg: 24,\n    },\n\n    fontWeight: FONT_WEIGHTS,\n    fontSize: FONT_SIZES,\n\n    //shadows\n    shadow1: darkMode ? '#000' : '#2F80ED',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n\n    // css snippets\n    flexColumnNoWrap: css`\n      display: flex;\n      flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n      display: flex;\n      flex-flow: row nowrap;\n    `,\n  }\n}\n\nexport default function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const darkMode = useIsDarkMode()\n\n  const themeObject = useMemo(() => theme(darkMode), [darkMode])\n\n  return <StyledComponentsThemeProvider theme={themeObject}>{children}</StyledComponentsThemeProvider>\n}\n\nconst TextWrapper = styled(Text)<{ color: keyof Colors }>`\n  color: ${({ color, theme }) => (theme as any)[color]};\n`\n\nexport const TYPE = {\n  main(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'text2'} {...props} />\n  },\n  link(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'primary1'} {...props} />\n  },\n  label(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'text1'} {...props} />\n  },\n  black(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'text1'} {...props} />\n  },\n  white(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'white'} {...props} />\n  },\n  body(props: TextProps) {\n    return <TextWrapper fontWeight={400} fontSize={16} color={'text1'} {...props} />\n  },\n  largeHeader(props: TextProps) {\n    return <TextWrapper fontWeight={600} fontSize={24} color={'text1'} {...props} />\n  },\n  mediumHeader(props: TextProps) {\n    return <TextWrapper fontWeight={500} fontSize={20} color={'text3'} {...props} />\n  },\n  subHeader(props: TextProps) {\n    return <TextWrapper fontWeight={400} fontSize={14} {...props} />\n  },\n  small(props: TextProps) {\n    return <TextWrapper fontWeight={500} fontSize={11} {...props} />\n  },\n  blue(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'blue1'} {...props} />\n  },\n  yellow(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'yellow3'} {...props} />\n  },\n  darkGray(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'text3'} {...props} />\n  },\n  gray(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'bg3'} {...props} />\n  },\n  italic(props: TextProps) {\n    return <TextWrapper fontWeight={500} fontSize={12} fontStyle={'italic'} color={'text2'} {...props} />\n  },\n  error({ error, ...props }: { error: boolean } & TextProps) {\n    return <TextWrapper fontWeight={500} color={error ? 'red1' : 'text2'} {...props} />\n  },\n}\n\nexport const FixedGlobalStyle = createGlobalStyle`\nhtml, input, textarea, button {\n  font-family: 'Inter', sans-serif;\n  font-display: fallback;\n}\n@supports (font-variation-settings: normal) {\n  html, input, textarea, button {\n    font-family: 'Inter var', sans-serif;\n  }\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n a {\n   color: ${colors(false).blue1}; \n }\n\n* {\n  box-sizing: border-box;\n}\n\nbutton {\n  user-select: none;\n}\n\nhtml {\n  font-size: 16px;\n  font-variant: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  font-feature-settings: 'ss01' on, 'ss02' on, 'cv01' on, 'cv03' on;\n  \n}\n`\n\nexport const ThemedGlobalStyle = createGlobalStyle`\nhtml {\n  color: ${({ theme }) => theme.text1};\n  background-color: ${({ theme }) => theme.bg1};\n}\n\n.three-line-legend-dark {\n\twidth: 100%;\n\theight: 70px;\n\tposition: absolute;\n\tpadding: 8px;\n\tfont-size: 12px;\n\tcolor: white;\n\tbackground-color: transparent;\n\ttext-align: left;\n\tz-index: 10;\n  pointer-events: none;\n}\n\n.tv-lightweight-charts{\n  width: 100% !important;\n  \n  & > * {\n    width: 100% !important;\n  }\n}\n\nbody {\n  min-height: 100vh;\n  background-position: 0 -30vh;\n  background-repeat: no-repeat;\n\n}\n`\n","import React, { useRef } from 'react'\nimport { BookOpen, Code, Info, MessageCircle, PieChart } from 'react-feather'\nimport styled from 'styled-components'\nimport { ReactComponent as MenuIcon } from '../../assets/images/menu.svg'\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useToggleModal } from '../../state/application/hooks'\n\nimport { ExternalLink } from '../../theme'\n\nconst StyledMenuIcon = styled(MenuIcon)`\n  path {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\nconst StyledMenuButton = styled.button`\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n  background-color: ${({ theme }) => theme.bg3};\n\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    background-color: ${({ theme }) => theme.bg4};\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n`\n\nconst StyledMenu = styled.div`\n  margin-left: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n`\n\nconst MenuFlyout = styled.span`\n  min-width: 8.125rem;\n  background-color: ${({ theme }) => theme.bg3};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  border-radius: 12px;\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  position: absolute;\n  top: 4rem;\n  right: 0rem;\n  z-index: 100;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    top: -17.25rem;\n  `};\n`\n\nconst MenuItem = styled(ExternalLink)`\n  flex: 1;\n  padding: 0.5rem 0.5rem;\n  color: ${({ theme }) => theme.text2};\n  :hover {\n    color: ${({ theme }) => theme.text1};\n    cursor: pointer;\n    text-decoration: none;\n  }\n  > svg {\n    margin-right: 8px;\n  }\n`\n\nconst CODE_LINK = 'https://github.com/Uniswap/uniswap-interface'\n\nexport default function Menu() {\n  const node = useRef<HTMLDivElement>()\n  const open = useModalOpen(ApplicationModal.MENU)\n  const toggle = useToggleModal(ApplicationModal.MENU)\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  return (\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\n    <StyledMenu ref={node as any}>\n      <StyledMenuButton onClick={toggle}>\n        <StyledMenuIcon />\n      </StyledMenuButton>\n\n      {open && (\n        <MenuFlyout>\n          <MenuItem id=\"link\" href=\"https://uniswap.org/\">\n            <Info size={14} />\n            About\n          </MenuItem>\n          <MenuItem id=\"link\" href=\"https://uniswap.org/docs/v2\">\n            <BookOpen size={14} />\n            Docs\n          </MenuItem>\n          <MenuItem id=\"link\" href={CODE_LINK}>\n            <Code size={14} />\n            Code\n          </MenuItem>\n          <MenuItem id=\"link\" href=\"https://discord.gg/FCfyBSbCU5\">\n            <MessageCircle size={14} />\n            Discord\n          </MenuItem>\n        </MenuFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n","import { RefObject, useEffect, useRef } from 'react'\n\nexport function useOnClickOutside<T extends HTMLElement>(\n  node: RefObject<T | undefined>,\n  handler: undefined | (() => void)\n) {\n  const handlerRef = useRef<undefined | (() => void)>(handler)\n  useEffect(() => {\n    handlerRef.current = handler\n  }, [handler])\n\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      if (node.current?.contains(e.target as Node) ?? false) {\n        return\n      }\n      if (handlerRef.current) handlerRef.current()\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [node])\n}\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport const ResponsiveRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-direction: column;\n    row-gap: 1rem;\n  `};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\nimport { TokenData, TokenChartEntry, TokenPriceEntry } from './reducer'\nimport { Transaction } from 'types'\n\n// protocol wide info\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('tokens/updateTokenData')\n\n// add token address to byAddress\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('tokens/addTokenKeys')\n\n// add list of pools token is in\nexport const addPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'tokens/addPoolAddresses'\n)\n\n// tvl and volume data over time\nexport const updateChartData = createAction<{ tokenAddress: string; chartData: TokenChartEntry[] }>(\n  'tokens/updateChartData'\n)\n\n// transactions\nexport const updateTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'tokens/updateTransactions'\n)\n\n// price data at arbitrary intervals\nexport const updatePriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData: TokenPriceEntry[]\n}>('tokens/updatePriceData')\n","import { ApolloClient, InMemoryCache } from '@apollo/client'\n\nexport const client = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-testing',\n  cache: new InMemoryCache(),\n  queryDeduplication: false,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-and-network',\n    },\n  },\n})\n\n// export const client = new ApolloClient({\n//   uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-ropsten',\n//   cache: new InMemoryCache(),\n//   queryDeduplication: false,\n//   defaultOptions: {\n//     watchQuery: {\n//       fetchPolicy: 'cache-and-network',\n//     },\n//   },\n// })\n\nexport const healthClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/index-node/graphql',\n  cache: new InMemoryCache(),\n})\n\nexport const blockClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks',\n  cache: new InMemoryCache(),\n})\n","import gql from 'graphql-tag'\nimport { client } from 'apollo/client'\n\nexport const POOLS_FOR_TOKEN = gql`\n  query topPools($address: Bytes!) {\n    asToken0: pools(first: 200, orderBy: totalValueLockedUSD, orderDirection: desc, where: { token0: $address }) {\n      id\n    }\n    asToken1: pools(first: 200, orderBy: totalValueLockedUSD, orderDirection: desc, where: { token1: $address }) {\n      id\n    }\n  }\n`\n\ninterface PoolsForTokenResponse {\n  asToken0: {\n    id: string\n  }[]\n  asToken1: {\n    id: string\n  }[]\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport async function fetchPoolsForToken(\n  address: string\n): Promise<{\n  loading: boolean\n  error: boolean\n  addresses: string[] | undefined\n}> {\n  try {\n    const { loading, error, data } = await client.query<PoolsForTokenResponse>({\n      query: POOLS_FOR_TOKEN,\n      variables: {\n        address: address,\n      },\n      fetchPolicy: 'cache-first',\n    })\n\n    if (loading || error || !data) {\n      return {\n        loading,\n        error: Boolean(error),\n        addresses: undefined,\n      }\n    }\n\n    const formattedData = data.asToken0.concat(data.asToken1).map((p) => p.id)\n\n    return {\n      loading,\n      error: Boolean(error),\n      addresses: formattedData,\n    }\n  } catch {\n    return {\n      loading: false,\n      error: true,\n      addresses: undefined,\n    }\n  }\n}\n","import dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport gql from 'graphql-tag'\nimport { client } from 'apollo/client'\nimport { TokenChartEntry } from 'state/tokens/reducer'\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\nconst ONE_DAY_UNIX = 24 * 60 * 60\n\nconst TOKEN_CHART = gql`\n  query tokenDayDatas($startTime: Int!, $skip: Int!, $address: Bytes!) {\n    tokenDayDatas(\n      first: 1000\n      skip: $skip\n      where: { token: $address, date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n    ) {\n      date\n      volumeUSD\n      totalValueLockedUSD\n    }\n  }\n`\n\ninterface ChartResults {\n  tokenDayDatas: {\n    date: number\n    volumeUSD: string\n    totalValueLockedUSD: string\n  }[]\n}\n\nexport async function fetchTokenChartData(address: string) {\n  let data: {\n    date: number\n    volumeUSD: string\n    totalValueLockedUSD: string\n  }[] = []\n  const startTimestamp = 1619170975\n  const endTimestamp = dayjs.utc().unix()\n\n  let error = false\n  let skip = 0\n  let allFound = false\n\n  try {\n    while (!allFound) {\n      const { data: chartResData, error, loading } = await client.query<ChartResults>({\n        query: TOKEN_CHART,\n        variables: {\n          address: address,\n          startTime: startTimestamp,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      if (!loading) {\n        skip += 1000\n        if (chartResData.tokenDayDatas.length < 1000 || error) {\n          allFound = true\n        }\n        if (chartResData) {\n          data = data.concat(chartResData.tokenDayDatas)\n        }\n      }\n    }\n  } catch {\n    error = true\n  }\n\n  if (data) {\n    const formattedExisting = data.reduce((accum: { [date: number]: TokenChartEntry }, dayData) => {\n      const roundedDate = parseInt((dayData.date / ONE_DAY_UNIX).toFixed(0))\n      accum[roundedDate] = {\n        date: dayData.date,\n        volumeUSD: parseFloat(dayData.volumeUSD),\n        totalValueLockedUSD: parseFloat(dayData.totalValueLockedUSD),\n      }\n      return accum\n    }, {})\n\n    const firstEntry = formattedExisting[parseInt(Object.keys(formattedExisting)[0])]\n\n    // fill in empty days ( there will be no day datas if no trades made that day )\n    let timestamp = firstEntry?.date ?? startTimestamp\n    let latestTvl = firstEntry?.totalValueLockedUSD ?? 0\n    while (timestamp < endTimestamp - ONE_DAY_UNIX) {\n      const nextDay = timestamp + ONE_DAY_UNIX\n      const currentDayIndex = parseInt((nextDay / ONE_DAY_UNIX).toFixed(0))\n      if (!Object.keys(formattedExisting).includes(currentDayIndex.toString())) {\n        formattedExisting[currentDayIndex] = {\n          date: nextDay,\n          volumeUSD: 0,\n          totalValueLockedUSD: latestTvl,\n        }\n      } else {\n        latestTvl = formattedExisting[currentDayIndex].totalValueLockedUSD\n      }\n      timestamp = nextDay\n    }\n\n    const dateMap = Object.keys(formattedExisting).map((key) => {\n      return formattedExisting[parseInt(key)]\n    })\n\n    return {\n      data: dateMap,\n      error: false,\n    }\n  } else {\n    return {\n      data: undefined,\n      error,\n    }\n  }\n}\n","import dayjs from 'dayjs'\n\n/**\n * Used to get large amounts of data when\n * @param query\n * @param localClient\n * @param vars - any variables that are passed in every query\n * @param values - the keys that are used as the values to map over if\n * @param skipCount - amount of entities to skip per query\n */\nexport async function splitQuery(query: any, client: any, vars: any[], values: any[], skipCount = 1000) {\n  let fetchedData = {}\n  let allFound = false\n  let skip = 0\n  try {\n    while (!allFound) {\n      let end = values.length\n      if (skip + skipCount < values.length) {\n        end = skip + skipCount\n      }\n      const sliced = values.slice(skip, end)\n      const result = await client.query({\n        query: query(...vars, sliced),\n        fetchPolicy: 'cache-first',\n      })\n      fetchedData = {\n        ...fetchedData,\n        ...result.data,\n      }\n      if (Object.keys(result.data).length < skipCount || skip + skipCount > values.length) {\n        allFound = true\n      } else {\n        skip += skipCount\n      }\n    }\n    return fetchedData\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nexport function useDeltaTimestamps(): [number, number, number] {\n  const utcCurrentTime = dayjs()\n  const t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n  const t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n  const tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix()\n  return [t1, t2, tWeek]\n}\n","import gql from 'graphql-tag'\nimport { useState, useEffect, useMemo } from 'react'\nimport { splitQuery } from 'utils/queries'\nimport { blockClient } from 'apollo/client'\n\nexport const GET_BLOCKS = (timestamps: string[]) => {\n  let queryString = 'query blocks {'\n  queryString += timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\n      timestamp + 600\n    } }) {\n        number\n      }`\n  })\n  queryString += '}'\n  return gql(queryString)\n}\n\n/**\n * for a given array of timestamps, returns block entities\n * @param timestamps\n */\nexport function useBlocksFromTimestamps(\n  timestamps: number[]\n): {\n  blocks:\n    | {\n        timestamp: string\n        number: any\n      }[]\n    | undefined\n  error: boolean\n} {\n  const [blocks, setBlocks] = useState<any>()\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetchData() {\n      const results = await splitQuery(GET_BLOCKS, blockClient, [], timestamps)\n      if (results) {\n        setBlocks(results)\n      } else {\n        setError(true)\n      }\n    }\n    if (!blocks && !error) {\n      fetchData()\n    }\n  })\n\n  const blocksFormatted = useMemo(() => {\n    if (blocks) {\n      const formatted = []\n      for (const t in blocks) {\n        if (blocks[t].length > 0) {\n          formatted.push({\n            timestamp: t.split('t')[1],\n            number: blocks[t][0]['number'],\n          })\n        }\n      }\n      return formatted\n    }\n    return undefined\n  }, [blocks])\n\n  return {\n    blocks: blocksFormatted,\n    error,\n  }\n}\n\n/**\n * @notice Fetches block objects for an array of timestamps.\n * @dev blocks are returned in chronological order (ASC) regardless of input.\n * @dev blocks are returned at string representations of Int\n * @dev timestamps are returns as they were provided; not the block time.\n * @param {Array} timestamps\n */\nexport async function getBlocksFromTimestamps(timestamps: number[], skipCount = 500) {\n  if (timestamps?.length === 0) {\n    return []\n  }\n  const fetchedData: any = await splitQuery(GET_BLOCKS, blockClient, [], timestamps, skipCount)\n\n  const blocks: any[] = []\n  if (fetchedData) {\n    for (const t in fetchedData) {\n      if (fetchedData[t].length > 0) {\n        blocks.push({\n          timestamp: t.split('t')[1],\n          number: fetchedData[t][0]['number'],\n        })\n      }\n    }\n  }\n  return blocks\n}\n","import dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport gql from 'graphql-tag'\nimport { client } from 'apollo/client'\nimport { getBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\nimport { splitQuery } from 'utils/queries'\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\n\nexport const PRICES_BY_BLOCK = (tokenAddress: string, blocks: any) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block: any) => `\n      t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \n        derivedETH\n      }\n    `\n  )\n  queryString += ','\n  queryString += blocks.map(\n    (block: any) => `\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \n        ethPriceUSD\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport async function fetchTokenPriceData(address: string, interval: number) {\n  // start and end bounds\n  const startTimestamp = 1619170975\n  const endTimestamp = dayjs.utc().unix()\n\n  // create an array of hour start times until we reach current hour\n  const timestamps = []\n  let time = startTimestamp\n  while (time < endTimestamp) {\n    timestamps.push(time)\n    time += interval\n  }\n\n  // backout if invalid timestamp format\n  if (timestamps.length === 0) {\n    return []\n  }\n\n  try {\n    // fetch blocks based on timestamp\n    const blocks = await getBlocksFromTimestamps(timestamps, 100)\n    if (!blocks || blocks.length === 0) {\n      return []\n    }\n\n    const blocksNew = [\n      {\n        timestamp: '1619669248',\n        number: '8495649',\n      },\n      {\n        timestamp: '1619665648',\n        number: '8495452',\n      },\n      {\n        timestamp: '1619662573',\n        number: '8495204',\n      },\n      {\n        timestamp: '1619658853',\n        number: '8494956',\n      },\n      {\n        timestamp: '1619632641',\n        number: '8493209',\n      },\n    ]\n\n    const prices: any | undefined = await splitQuery(PRICES_BY_BLOCK, client, [address], blocksNew, 50)\n\n    // format token ETH price results\n    const values: {\n      timestamp: string\n      derivedETH: number\n      priceUSD: number\n    }[] = []\n    for (const row in prices) {\n      const timestamp = row.split('t')[1]\n      const derivedETH = parseFloat(prices[row]?.derivedETH)\n      if (timestamp) {\n        values.push({\n          timestamp,\n          derivedETH,\n          priceUSD: 0,\n        })\n      }\n    }\n\n    // go through eth usd prices and assign to original values array\n    let index = 0\n    for (const brow in prices) {\n      const timestamp = brow.split('b')[1]\n      if (timestamp) {\n        values[index].priceUSD = parseFloat(prices[brow].ethPriceUSD) * values[index].derivedETH\n        index += 1\n      }\n    }\n\n    const formattedHistory = []\n\n    // for each hour, construct the open and close price\n    for (let i = 0; i < values.length - 1; i++) {\n      formattedHistory.push({\n        timestamp: values[i].timestamp,\n        open: values[i].priceUSD,\n        close: values[i + 1].priceUSD,\n      })\n    }\n\n    return formattedHistory\n  } catch {\n    return undefined\n  }\n}\n","export interface Block {\n  number: number\n  timestamp: string\n}\n\nexport interface ChartDayData {\n  date: number\n  volumeUSD: number\n  tvlUSD: number\n}\n\nexport enum TransactionType {\n  SWAP,\n  MINT,\n  BURN,\n}\n\nexport type Transaction = {\n  type: TransactionType\n  hash: string\n  timestamp: string\n  sender: string\n  token0Symbol: string\n  token1Symbol: string\n  token0Address: string\n  token1Address: string\n  amountUSD: number\n  amountToken0: number\n  amountToken1: number\n}\n","import { Token } from '@uniswap/sdk'\nimport { WETH_ADDRESS } from '../constants/index'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function formatTokenSymbol(address: string, symbol: string) {\n  if (address === WETH_ADDRESS) {\n    return 'ETH'\n  }\n  return symbol\n}\n\nexport function formatTokenName(address: string, name: string) {\n  if (address === WETH_ADDRESS) {\n    return 'Ether'\n  }\n  return name\n}\n","import { client } from 'apollo/client'\nimport gql from 'graphql-tag'\nimport { Transaction, TransactionType } from 'types'\nimport { formatTokenSymbol } from 'utils/tokens'\n\nconst GLOBAL_TRANSACTIONS = gql`\n  query transactions($address: Bytes!) {\n    mintsAs0: mints(first: 500, orderBy: timestamp, orderDirection: desc, where: { token0: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    mintsAs1: mints(first: 500, orderBy: timestamp, orderDirection: desc, where: { token0: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs0: swaps(first: 500, orderBy: timestamp, orderDirection: desc, where: { token0: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swapsAs1: swaps(first: 500, orderBy: timestamp, orderDirection: desc, where: { token1: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs0: burns(first: 500, orderBy: timestamp, orderDirection: desc, where: { token0: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n    burnsAs1: burns(first: 500, orderBy: timestamp, orderDirection: desc, where: { token1: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }\n`\n\ninterface TransactionResults {\n  mintsAs0: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  mintsAs1: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  swapsAs0: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  swapsAs1: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  burnsAs0: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    owner: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  burnsAs1: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    owner: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n}\n\nexport async function fetchTokenTransactions(\n  address: string\n): Promise<{ data: Transaction[] | undefined; error: boolean; loading: boolean }> {\n  try {\n    const { data, error, loading } = await client.query<TransactionResults>({\n      query: GLOBAL_TRANSACTIONS,\n      variables: {\n        address: address,\n      },\n      fetchPolicy: 'cache-first',\n    })\n\n    if (error) {\n      return {\n        data: undefined,\n        error: true,\n        loading: false,\n      }\n    }\n\n    if (loading && !data) {\n      return {\n        data: undefined,\n        error: false,\n        loading: true,\n      }\n    }\n\n    const mints0 = data.mintsAs0.map((m) => {\n      return {\n        type: TransactionType.MINT,\n        hash: m.transaction.id,\n        timestamp: m.timestamp,\n        sender: m.origin,\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n        token0Address: m.pool.token0.id,\n        token1Address: m.pool.token1.id,\n        amountUSD: parseFloat(m.amountUSD),\n        amountToken0: parseFloat(m.amount0),\n        amountToken1: parseFloat(m.amount1),\n      }\n    })\n    const mints1 = data.mintsAs1.map((m) => {\n      return {\n        type: TransactionType.MINT,\n        hash: m.transaction.id,\n        timestamp: m.timestamp,\n        sender: m.origin,\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n        token0Address: m.pool.token0.id,\n        token1Address: m.pool.token1.id,\n        amountUSD: parseFloat(m.amountUSD),\n        amountToken0: parseFloat(m.amount0),\n        amountToken1: parseFloat(m.amount1),\n      }\n    })\n\n    const burns0 = data.burnsAs0.map((m) => {\n      return {\n        type: TransactionType.BURN,\n        hash: m.transaction.id,\n        timestamp: m.timestamp,\n        sender: m.owner,\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n        token0Address: m.pool.token0.id,\n        token1Address: m.pool.token1.id,\n        amountUSD: parseFloat(m.amountUSD),\n        amountToken0: parseFloat(m.amount0),\n        amountToken1: parseFloat(m.amount1),\n      }\n    })\n    const burns1 = data.burnsAs1.map((m) => {\n      return {\n        type: TransactionType.BURN,\n        hash: m.transaction.id,\n        timestamp: m.timestamp,\n        sender: m.owner,\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n        token0Address: m.pool.token0.id,\n        token1Address: m.pool.token1.id,\n        amountUSD: parseFloat(m.amountUSD),\n        amountToken0: parseFloat(m.amount0),\n        amountToken1: parseFloat(m.amount1),\n      }\n    })\n\n    const swaps0 = data.swapsAs0.map((m) => {\n      return {\n        type: TransactionType.SWAP,\n        hash: m.transaction.id,\n        timestamp: m.timestamp,\n        sender: m.origin,\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n        token0Address: m.pool.token0.id,\n        token1Address: m.pool.token1.id,\n        amountUSD: parseFloat(m.amountUSD),\n        amountToken0: parseFloat(m.amount0),\n        amountToken1: parseFloat(m.amount1),\n      }\n    })\n\n    const swaps1 = data.swapsAs1.map((m) => {\n      return {\n        type: TransactionType.SWAP,\n        hash: m.transaction.id,\n        timestamp: m.timestamp,\n        sender: m.origin,\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n        token0Address: m.pool.token0.id,\n        token1Address: m.pool.token1.id,\n        amountUSD: parseFloat(m.amountUSD),\n        amountToken0: parseFloat(m.amount0),\n        amountToken1: parseFloat(m.amount1),\n      }\n    })\n\n    return { data: [...mints0, ...mints1, ...burns0, ...burns1, ...swaps0, ...swaps1], error: false, loading: false }\n  } catch {\n    return {\n      data: undefined,\n      error: true,\n      loading: false,\n    }\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ROUTER_ADDRESS } from '../constants'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@uniswap/sdk'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nconst ETHERSCAN_PREFIXES: { [chainId in ChainId]: string } = {\n  1: '',\n  3: 'ropsten.',\n  4: 'rinkeby.',\n  5: 'goerli.',\n  42: 'kovan.',\n}\n\nexport function getEtherscanLink(\n  chainId: ChainId,\n  data: string,\n  type: 'transaction' | 'token' | 'address' | 'block'\n): string {\n  const prefix = `https://${ETHERSCAN_PREFIXES[chainId] || ETHERSCAN_PREFIXES[1]}etherscan.io`\n\n  switch (type) {\n    case 'transaction': {\n      return `${prefix}/tx/${data}`\n    }\n    case 'token': {\n      return `${prefix}/token/${data}`\n    }\n    case 'block': {\n      return `${prefix}/block/${data}`\n    }\n    case 'address':\n    default: {\n      return `${prefix}/address/${data}`\n    }\n  }\n}\n\nexport const currentTimestamp = () => new Date().getTime()\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n\nexport function feeTierPercent(fee: number): string {\n  return (fee / 10000).toPrecision(1) + '%'\n}\n\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n  return value !== null && value !== undefined\n}\n","import { AppState, AppDispatch } from './../index'\nimport { TokenData, TokenChartEntry, TokenPriceEntry } from './reducer'\nimport { useCallback, useEffect, useState, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  updateTokenData,\n  addTokenKeys,\n  addPoolAddresses,\n  updateChartData,\n  updatePriceData,\n  updateTransactions,\n} from './actions'\nimport { isAddress } from 'ethers/lib/utils'\nimport { fetchPoolsForToken } from 'data/tokens/poolsForToken'\nimport { fetchTokenChartData } from 'data/tokens/chartData'\nimport { fetchTokenPriceData } from 'data/tokens/priceData'\nimport { fetchTokenTransactions } from 'data/tokens/transactions'\nimport { Transaction } from 'types'\nimport { notEmpty } from 'utils'\n\nexport function useAllTokenData(): {\n  [address: string]: { data: TokenData | undefined; lastUpdated: number | undefined }\n} {\n  return useSelector((state: AppState) => state.tokens.byAddress)\n}\n\nexport function useUpdateTokenData(): (tokens: TokenData[]) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (tokens: TokenData[]) => {\n      dispatch(updateTokenData({ tokens }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useAddTokenKeys(): (addresses: string[]) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback((tokenAddresses: string[]) => dispatch(addTokenKeys({ tokenAddresses })), [dispatch])\n}\n\nexport function useTokenDatas(addresses: string[] | undefined): TokenData[] | undefined {\n  const allTokenData = useAllTokenData()\n  const addTokenKeys = useAddTokenKeys()\n\n  // if token not tracked yet track it\n  addresses?.map((a) => {\n    if (!allTokenData[a]) {\n      addTokenKeys([a])\n    }\n  })\n\n  const data = useMemo(() => {\n    if (!addresses) {\n      return undefined\n    }\n    return addresses\n      .map((a) => {\n        return allTokenData[a]?.data\n      })\n      .filter(notEmpty)\n  }, [addresses, allTokenData])\n\n  return data\n}\n\nexport function useTokenData(address: string | undefined): TokenData | undefined {\n  const allTokenData = useAllTokenData()\n  const addTokenKeys = useAddTokenKeys()\n\n  // if invalid address return\n  if (!address || !isAddress(address)) {\n    return undefined\n  }\n\n  // if token not tracked yet track it\n  if (!allTokenData[address]) {\n    addTokenKeys([address])\n  }\n\n  // return data\n  return allTokenData[address]?.data\n}\n\n/**\n * Get top pools addresses that token is included in\n * If not loaded, fetch and store\n * @param address\n */\nexport function usePoolsForToken(address: string): string[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const token = useSelector((state: AppState) => state.tokens.byAddress[address])\n  const poolsForToken = token.poolAddresses\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const { loading, error, addresses } = await fetchPoolsForToken(address)\n      if (!loading && !error && addresses) {\n        dispatch(addPoolAddresses({ tokenAddress: address, poolAddresses: addresses }))\n      }\n      if (error) {\n        setError(error)\n      }\n    }\n    if (!poolsForToken && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, poolsForToken])\n\n  // return data\n  return poolsForToken\n}\n\n/**\n * Get top pools addresses that token is included in\n * If not loaded, fetch and store\n * @param address\n */\nexport function useTokenChartData(address: string): TokenChartEntry[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const token = useSelector((state: AppState) => state.tokens.byAddress[address])\n  const chartData = token.chartData\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const { error, data } = await fetchTokenChartData(address)\n      if (!error && data) {\n        dispatch(updateChartData({ tokenAddress: address, chartData: data }))\n      }\n      if (error) {\n        setError(error)\n      }\n    }\n    if (!chartData && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, chartData])\n\n  // return data\n  return chartData\n}\n\n/**\n * Get top pools addresses that token is included in\n * If not loaded, fetch and store\n * @param address\n */\nexport function useTokenPriceData(address: string, interval: number): TokenPriceEntry[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const token = useSelector((state: AppState) => state.tokens.byAddress[address])\n  const priceData = token.priceData[interval]\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const priceData = await fetchTokenPriceData(address, interval)\n\n      if (priceData) {\n        dispatch(\n          updatePriceData({\n            tokenAddress: address,\n            secondsInterval: interval,\n            priceData: priceData as TokenPriceEntry[],\n          })\n        )\n      }\n      if (error) {\n        setError(error)\n      }\n    }\n    if (!priceData && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, interval, priceData])\n\n  // return data\n  return priceData\n}\n\n/**\n * Get top pools addresses that token is included in\n * If not loaded, fetch and store\n * @param address\n */\nexport function useTokenTransactions(address: string): Transaction[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const token = useSelector((state: AppState) => state.tokens.byAddress[address])\n  const transactions = token.transactions\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const { error, data } = await fetchTokenTransactions(address)\n      if (error) {\n        setError(true)\n      } else if (data) {\n        dispatch(updateTransactions({ tokenAddress: address, transactions: data }))\n      }\n    }\n    if (!transactions && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, transactions])\n\n  // return data\n  return transactions\n}\n","/**\n * gets the amoutn difference plus the % change in change itself (second order change)\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n * @param {*} value48HoursAgo\n */\nexport const get2DayChange = (valueNow: string, value24HoursAgo: string, value48HoursAgo: string): [number, number] => {\n  // get volume info for both 24 hour periods\n  const currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo)\n  const previousChange = parseFloat(value24HoursAgo) - parseFloat(value48HoursAgo)\n  const adjustedPercentChange = ((currentChange - previousChange) / previousChange) * 100\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return [currentChange, 0]\n  }\n  return [currentChange, adjustedPercentChange]\n}\n\n/**\n * get standard percent change between two values\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n */\nexport const getPercentChange = (valueNow: string | undefined, value24HoursAgo: string | undefined): number => {\n  if (valueNow && value24HoursAgo) {\n    return ((parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo)) * 100\n  }\n  return 0\n}\n","import { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\nimport { useDeltaTimestamps } from 'utils/queries'\nimport { useState, useEffect, useMemo } from 'react'\nimport { client } from 'apollo/client'\nimport gql from 'graphql-tag'\n\nexport interface EthPrices {\n  current: number\n  oneDay: number\n  twoDay: number\n  week: number\n}\n\nexport const ETH_PRICES = gql`\n  query prices($block24: Int!, $block48: Int!, $blockWeek: Int!) {\n    current: bundles(first: 1) {\n      ethPriceUSD\n    }\n    oneDay: bundles(first: 1, block: { number: $block24 }) {\n      ethPriceUSD\n    }\n    twoDay: bundles(first: 1, block: { number: $block48 }) {\n      ethPriceUSD\n    }\n    oneWeek: bundles(first: 1, block: { number: $blockWeek }) {\n      ethPriceUSD\n    }\n  }\n`\n\ninterface PricesResponse {\n  current: {\n    ethPriceUSD: string\n  }[]\n  oneDay: {\n    ethPriceUSD: string\n  }[]\n  twoDay: {\n    ethPriceUSD: string\n  }[]\n  oneWeek: {\n    ethPriceUSD: string\n  }[]\n}\n\nasync function fetchEthPrices(\n  blocks: [number, number, number]\n): Promise<{ data: EthPrices | undefined; error: boolean }> {\n  try {\n    const { data, error } = await client.query<PricesResponse>({\n      query: ETH_PRICES,\n      variables: {\n        block24: blocks[0],\n        block48: blocks[1],\n        blockWeek: blocks[2],\n      },\n    })\n\n    if (error) {\n      return {\n        error: true,\n        data: undefined,\n      }\n    } else if (data) {\n      return {\n        data: {\n          current: parseFloat(data.current[0].ethPriceUSD ?? 0),\n          oneDay: parseFloat(data.oneDay[0]?.ethPriceUSD ?? 0),\n          twoDay: parseFloat(data.twoDay[0]?.ethPriceUSD ?? 0),\n          week: parseFloat(data.oneWeek[0]?.ethPriceUSD ?? 0),\n        },\n        error: false,\n      }\n    } else {\n      return {\n        data: undefined,\n        error: true,\n      }\n    }\n  } catch (e) {\n    console.log(e)\n    return {\n      data: undefined,\n      error: true,\n    }\n  }\n}\n\n/**\n * returns eth prices at current, 24h, 48h, and 1k intervals\n */\nexport function useEthPrices(): EthPrices | undefined {\n  const [prices, setPrices] = useState<EthPrices | undefined>()\n  const [error, setError] = useState(false)\n\n  const [t24, t48, tWeek] = useDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek])\n\n  const formattedBlocks = useMemo(() => {\n    if (blocks) {\n      return blocks.map((b) => parseFloat(b.number))\n    }\n    return undefined\n  }, [blocks])\n\n  useEffect(() => {\n    async function fetch() {\n      const { data, error } = await fetchEthPrices(formattedBlocks as [number, number, number])\n      if (error || blockError) {\n        setError(true)\n      } else if (data) {\n        setPrices(data)\n      }\n    }\n    if (!prices && !error && formattedBlocks) {\n      fetch()\n    }\n  }, [error, prices, formattedBlocks, blockError])\n\n  return prices\n}\n","import { getPercentChange } from './../../utils/data'\nimport { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport { useDeltaTimestamps } from 'utils/queries'\nimport { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\nimport { get2DayChange } from 'utils/data'\nimport { TokenData } from 'state/tokens/reducer'\nimport { useEthPrices } from 'hooks/useEthPrices'\nimport { formatTokenSymbol, formatTokenName } from 'utils/tokens'\n\nexport const TOKENS_BULK = (block: number | undefined, tokens: string[]) => {\n  let tokenString = `[`\n  tokens.map((address) => {\n    return (tokenString += `\"${address}\",`)\n  })\n  tokenString += ']'\n  const queryString =\n    `\n    query tokens {\n      tokens(first: 200, where: {id_in: ${tokenString}},` +\n    (block ? `block: {number: ${block}} ,` : ``) +\n    ` orderBy: totalValueLockedUSD, orderDirection: desc) {\n        id\n        symbol\n        name\n        derivedETH\n        volumeUSD\n        volume\n        txCount\n        totalValueLocked\n        totalValueLockedUSD\n      }\n      bundles(first: 1,` +\n    (block ? `block: {number: ${block}} ,` : ``) +\n    ` ){\n        ethPriceUSD\n      }\n    }\n    `\n  return gql(queryString)\n}\n\ninterface TokenFields {\n  id: string\n  symbol: string\n  name: string\n  derivedETH: string\n  volumeUSD: string\n  volume: string\n  txCount: string\n  totalValueLocked: string\n  totalValueLockedUSD: string\n}\n\ninterface TokenDataResponse {\n  tokens: TokenFields[]\n  bundles: {\n    ethPriceUSD: string\n  }[]\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport function useTokenDatas(\n  tokenAddresses: string[]\n): {\n  loading: boolean\n  error: boolean\n  data:\n    | {\n        [address: string]: TokenData\n      }\n    | undefined\n} {\n  // get blocks from historic timestamps\n  const [t24, t48, tWeek] = useDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek])\n  const [block24, block48, blockWeek] = blocks ?? []\n  const ethPrices = useEthPrices()\n\n  const { loading, error, data } = useQuery<TokenDataResponse>(TOKENS_BULK(undefined, tokenAddresses), {\n    fetchPolicy: 'network-only',\n  })\n\n  const { loading: loading24, error: error24, data: data24 } = useQuery<TokenDataResponse>(\n    TOKENS_BULK(parseInt(block24?.number), tokenAddresses),\n    {\n      fetchPolicy: 'network-only',\n    }\n  )\n\n  const { loading: loading48, error: error48, data: data48 } = useQuery<TokenDataResponse>(\n    TOKENS_BULK(parseInt(block48?.number), tokenAddresses),\n    {\n      fetchPolicy: 'network-only',\n    }\n  )\n  const { loading: loadingWeek, error: errorWeek, data: dataWeek } = useQuery<TokenDataResponse>(\n    TOKENS_BULK(parseInt(blockWeek?.number), tokenAddresses),\n    {\n      fetchPolicy: 'network-only',\n    }\n  )\n\n  const anyError = Boolean(error || error24 || error48 || blockError || errorWeek)\n  const anyLoading = Boolean(loading || loading24 || loading48 || loadingWeek || !blocks)\n\n  if (!ethPrices) {\n    return {\n      loading: true,\n      error: false,\n      data: undefined,\n    }\n  }\n\n  // return early if not all data yet\n  if (anyError || anyLoading) {\n    return {\n      loading: anyLoading,\n      error: anyError,\n      data: undefined,\n    }\n  }\n\n  const parsed = data?.tokens\n    ? data.tokens.reduce((accum: { [address: string]: TokenFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsed24 = data24?.tokens\n    ? data24.tokens.reduce((accum: { [address: string]: TokenFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsed48 = data48?.tokens\n    ? data48.tokens.reduce((accum: { [address: string]: TokenFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsedWeek = dataWeek?.tokens\n    ? dataWeek.tokens.reduce((accum: { [address: string]: TokenFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n\n  // format data and calculate daily changes\n  const formatted = tokenAddresses.reduce((accum: { [address: string]: TokenData }, address) => {\n    const current: TokenFields | undefined = parsed[address]\n    const oneDay: TokenFields | undefined = parsed24[address]\n    const twoDay: TokenFields | undefined = parsed48[address]\n    const week: TokenFields | undefined = parsedWeek[address]\n\n    const [volumeUSD, volumeUSDChange] =\n      current && oneDay && twoDay\n        ? get2DayChange(current.volumeUSD, oneDay.volumeUSD, twoDay.volumeUSD)\n        : current\n        ? [parseFloat(current.volumeUSD), 0]\n        : [0, 0]\n\n    const volumeUSDWeek =\n      current && week\n        ? parseFloat(current.volumeUSD) - parseFloat(week.volumeUSD)\n        : current\n        ? parseFloat(current.volumeUSD)\n        : 0\n\n    const tvlUSD = current ? parseFloat(current.totalValueLockedUSD) : 0\n    const tvlUSDChange =\n      current && oneDay\n        ? ((parseFloat(current.totalValueLockedUSD) - parseFloat(oneDay.totalValueLockedUSD)) /\n            parseFloat(oneDay.totalValueLockedUSD)) *\n          100\n        : 0\n    const tvlToken = current ? parseFloat(current.totalValueLocked) : 0\n\n    const priceUSD = current ? parseFloat(current.derivedETH) * ethPrices.current : 0\n    const priceUSDOneDay = oneDay ? parseFloat(oneDay.derivedETH) * ethPrices.oneDay : 0\n    const priceUSDWeek = week ? parseFloat(week.derivedETH) * ethPrices.week : 0\n\n    const priceUSDChange =\n      priceUSD && priceUSDOneDay ? getPercentChange(priceUSD.toString(), priceUSDOneDay.toString()) : 0\n\n    const priceUSDChangeWeek =\n      priceUSD && priceUSDWeek ? getPercentChange(priceUSD.toString(), priceUSDWeek.toString()) : 0\n\n    const txCount =\n      current && oneDay\n        ? parseFloat(current.txCount) - parseFloat(oneDay.txCount)\n        : current\n        ? parseFloat(current.txCount)\n        : 0\n\n    if (current) {\n      accum[address] = {\n        address,\n        name: formatTokenName(address, current.name),\n        symbol: formatTokenSymbol(address, current.symbol),\n        volumeUSD,\n        volumeUSDChange,\n        volumeUSDWeek,\n        txCount,\n        tvlUSD,\n        tvlUSDChange,\n        tvlToken,\n        priceUSD,\n        priceUSDChange,\n        priceUSDChangeWeek,\n      }\n    }\n\n    return accum\n  }, {})\n\n  return {\n    loading: anyLoading,\n    error: anyError,\n    data: formatted,\n  }\n}\n","import { TickProcessed } from './../../data/pools/tickData'\nimport { createAction } from '@reduxjs/toolkit'\nimport { PoolData, PoolChartEntry } from './reducer'\nimport { Transaction } from 'types'\n\n// protocol wide info\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('pools/updatePoolData')\n\n// add pool address to byAddress\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('pool/addPoolKeys')\n\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: PoolChartEntry[] }>(\n  'pool/updatePoolChartData'\n)\n\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'pool/updatePoolTransactions'\n)\n\nexport const updateTickData = createAction<{\n  poolAddress: string\n  tickData:\n    | {\n        ticksProcessed: TickProcessed[]\n        feeTier: string\n        tickSpacing: number\n        activeTickIdx: number\n      }\n    | undefined\n}>('pool/updateTickData')\n","import dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport gql from 'graphql-tag'\nimport { client } from 'apollo/client'\nimport { TokenChartEntry } from 'state/tokens/reducer'\nimport { PoolChartEntry } from 'state/pools/reducer'\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\nconst ONE_DAY_UNIX = 24 * 60 * 60\n\nconst POOL_CHART = gql`\n  query poolDayDatas($startTime: Int!, $skip: Int!, $address: Bytes!) {\n    poolDayDatas(\n      first: 1000\n      skip: $skip\n      where: { pool: $address, date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n    ) {\n      date\n      volumeUSD\n      tvlUSD\n    }\n  }\n`\n\ninterface ChartResults {\n  poolDayDatas: {\n    date: number\n    volumeUSD: string\n    tvlUSD: string\n  }[]\n}\n\nexport async function fetchPoolChartData(address: string) {\n  let data: {\n    date: number\n    volumeUSD: string\n    tvlUSD: string\n  }[] = []\n  const startTimestamp = 1619170975\n  const endTimestamp = dayjs.utc().unix()\n\n  let error = false\n  let skip = 0\n  let allFound = false\n\n  try {\n    while (!allFound) {\n      const { data: chartResData, error, loading } = await client.query<ChartResults>({\n        query: POOL_CHART,\n        variables: {\n          address: address,\n          startTime: startTimestamp,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      if (!loading) {\n        skip += 1000\n        if (chartResData.poolDayDatas.length < 1000 || error) {\n          allFound = true\n        }\n        if (chartResData) {\n          data = data.concat(chartResData.poolDayDatas)\n        }\n      }\n    }\n  } catch {\n    error = true\n  }\n\n  if (data) {\n    const formattedExisting = data.reduce((accum: { [date: number]: PoolChartEntry }, dayData) => {\n      const roundedDate = parseInt((dayData.date / ONE_DAY_UNIX).toFixed(0))\n      accum[roundedDate] = {\n        date: dayData.date,\n        volumeUSD: parseFloat(dayData.volumeUSD),\n        totalValueLockedUSD: parseFloat(dayData.tvlUSD),\n      }\n      return accum\n    }, {})\n\n    const firstEntry = formattedExisting[parseInt(Object.keys(formattedExisting)[0])]\n\n    // fill in empty days ( there will be no day datas if no trades made that day )\n    let timestamp = firstEntry?.date ?? startTimestamp\n    let latestTvl = firstEntry?.totalValueLockedUSD ?? 0\n    while (timestamp < endTimestamp - ONE_DAY_UNIX) {\n      const nextDay = timestamp + ONE_DAY_UNIX\n      const currentDayIndex = parseInt((nextDay / ONE_DAY_UNIX).toFixed(0))\n      if (!Object.keys(formattedExisting).includes(currentDayIndex.toString())) {\n        formattedExisting[currentDayIndex] = {\n          date: nextDay,\n          volumeUSD: 0,\n          totalValueLockedUSD: latestTvl,\n        }\n      } else {\n        latestTvl = formattedExisting[currentDayIndex].totalValueLockedUSD\n      }\n      timestamp = nextDay\n    }\n\n    const dateMap = Object.keys(formattedExisting).map((key) => {\n      return formattedExisting[parseInt(key)]\n    })\n\n    return {\n      data: dateMap,\n      error: false,\n    }\n  } else {\n    return {\n      data: undefined,\n      error,\n    }\n  }\n}\n","import { client } from 'apollo/client'\nimport gql from 'graphql-tag'\nimport { Transaction, TransactionType } from 'types'\nimport { formatTokenSymbol } from 'utils/tokens'\n\nconst POOL_TRANSACTIONS = gql`\n  query transactions($address: Bytes!) {\n    mints(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }\n`\n\ninterface TransactionResults {\n  mints: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  swaps: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  burns: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    owner: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n}\n\nexport async function fetchPoolTransactions(\n  address: string\n): Promise<{ data: Transaction[] | undefined; error: boolean; loading: boolean }> {\n  const { data, error, loading } = await client.query<TransactionResults>({\n    query: POOL_TRANSACTIONS,\n    variables: {\n      address: address,\n    },\n    fetchPolicy: 'cache-first',\n  })\n\n  if (error) {\n    return {\n      data: undefined,\n      error: true,\n      loading: false,\n    }\n  }\n\n  if (loading && !data) {\n    return {\n      data: undefined,\n      error: false,\n      loading: true,\n    }\n  }\n\n  const mints = data.mints.map((m) => {\n    return {\n      type: TransactionType.MINT,\n      hash: m.transaction.id,\n      timestamp: m.timestamp,\n      sender: m.origin,\n      token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n      token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n      token0Address: m.pool.token0.id,\n      token1Address: m.pool.token1.id,\n      amountUSD: parseFloat(m.amountUSD),\n      amountToken0: parseFloat(m.amount0),\n      amountToken1: parseFloat(m.amount1),\n    }\n  })\n  const burns = data.burns.map((m) => {\n    return {\n      type: TransactionType.BURN,\n      hash: m.transaction.id,\n      timestamp: m.timestamp,\n      sender: m.owner,\n      token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n      token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n      token0Address: m.pool.token0.id,\n      token1Address: m.pool.token1.id,\n      amountUSD: parseFloat(m.amountUSD),\n      amountToken0: parseFloat(m.amount0),\n      amountToken1: parseFloat(m.amount1),\n    }\n  })\n\n  const swaps = data.swaps.map((m) => {\n    return {\n      type: TransactionType.SWAP,\n      hash: m.transaction.id,\n      timestamp: m.timestamp,\n      sender: m.origin,\n      token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n      token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n      token0Address: m.pool.token0.id,\n      token1Address: m.pool.token1.id,\n      amountUSD: parseFloat(m.amountUSD),\n      amountToken0: parseFloat(m.amount0),\n      amountToken1: parseFloat(m.amount1),\n    }\n  })\n\n  return { data: [...mints, ...burns, ...swaps], error: false, loading: false }\n}\n","import { addPoolKeys, updatePoolChartData, updatePoolTransactions, updateTickData } from 'state/pools/actions'\nimport { AppState, AppDispatch } from './../index'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PoolData, PoolChartEntry } from './reducer'\nimport { updatePoolData } from './actions'\nimport { notEmpty } from 'utils'\nimport { fetchPoolChartData } from 'data/pools/chartData'\nimport { Transaction } from 'types'\nimport { fetchPoolTransactions } from 'data/pools/transactions'\nimport { PoolTickData } from 'data/pools/tickData'\n\nexport function useAllPoolData(): {\n  [address: string]: { data: PoolData | undefined; lastUpdated: number | undefined }\n} {\n  return useSelector((state: AppState) => state.pools.byAddress)\n}\n\nexport function useUpdatePoolData(): (pools: PoolData[]) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback((pools: PoolData[]) => dispatch(updatePoolData({ pools })), [dispatch])\n}\n\nexport function useAddPoolKeys(): (addresses: string[]) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback((poolAddresses: string[]) => dispatch(addPoolKeys({ poolAddresses })), [dispatch])\n}\n\nexport function usePoolDatas(poolAddresses: string[]): PoolData[] {\n  const allPoolData = useAllPoolData()\n  const addPoolKeys = useAddPoolKeys()\n\n  const untrackedAddresses = poolAddresses.reduce((accum: string[], address) => {\n    if (!Object.keys(allPoolData).includes(address)) {\n      accum.push(address)\n    }\n    return accum\n  }, [])\n\n  useEffect(() => {\n    if (untrackedAddresses) {\n      addPoolKeys(untrackedAddresses)\n    }\n    return\n  }, [addPoolKeys, untrackedAddresses])\n\n  // filter for pools with data\n  const poolsWithData = poolAddresses\n    .map((address) => {\n      const poolData = allPoolData[address]?.data\n      return poolData ?? undefined\n    })\n    .filter(notEmpty)\n\n  return poolsWithData\n}\n\n/**\n * Get top pools addresses that token is included in\n * If not loaded, fetch and store\n * @param address\n */\nexport function usePoolChartData(address: string): PoolChartEntry[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const pool = useSelector((state: AppState) => state.pools.byAddress[address])\n  const chartData = pool?.chartData\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const { error, data } = await fetchPoolChartData(address)\n      if (!error && data) {\n        dispatch(updatePoolChartData({ poolAddress: address, chartData: data }))\n      }\n      if (error) {\n        setError(error)\n      }\n    }\n    if (!chartData && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, chartData])\n\n  // return data\n  return chartData\n}\n\n/**\n * Get all transactions on pool\n * @param address\n */\nexport function usePoolTransactions(address: string): Transaction[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const pool = useSelector((state: AppState) => state.pools.byAddress[address])\n  const transactions = pool?.transactions\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const { error, data } = await fetchPoolTransactions(address)\n      if (error) {\n        setError(true)\n      } else if (data) {\n        dispatch(updatePoolTransactions({ poolAddress: address, transactions: data }))\n      }\n    }\n    if (!transactions && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, transactions])\n\n  // return data\n  return transactions\n}\n\nexport function usePoolTickData(\n  address: string\n): [PoolTickData | undefined, (poolAddress: string, tickData: PoolTickData) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const pool = useSelector((state: AppState) => state.pools.byAddress[address])\n  const tickData = pool.tickData\n\n  const setPoolTickData = useCallback(\n    (address: string, tickData: PoolTickData) => dispatch(updateTickData({ poolAddress: address, tickData })),\n    [dispatch]\n  )\n\n  return [tickData, setPoolTickData]\n}\n","import { useAllTokenData } from 'state/tokens/hooks'\nimport { TokenData } from 'state/tokens/reducer'\nimport { useTokenDatas } from 'data/tokens/tokenData'\nimport gql from 'graphql-tag'\nimport { useState, useEffect, useMemo } from 'react'\nimport { client } from 'apollo/client'\nimport { usePoolDatas, useAllPoolData } from 'state/pools/hooks'\nimport { PoolData } from 'state/pools/reducer'\nimport { notEmpty, escapeRegExp } from 'utils'\n\nexport const TOKEN_SEARCH = gql`\n  query tokens($value: String, $id: String) {\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalValueLockedUSD\n    }\n  }\n`\n\nexport const POOL_SEARCH = gql`\n  query pools($tokens: [Bytes]!, $id: String) {\n    as0: pools(where: { token0_in: $tokens }) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    as1: pools(where: { token1_in: $tokens }) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    asAddress: pools(where: { id: $id }) {\n      id\n      feeTier\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }\n`\n\ninterface TokenRes {\n  asSymbol: {\n    id: string\n    symbol: string\n    name: string\n    totalValueLockedUSD: string\n  }[]\n  asName: {\n    id: string\n    symbol: string\n    name: string\n    totalValueLockedUSD: string\n  }[]\n  asAddress: {\n    id: string\n    symbol: string\n    name: string\n    totalValueLockedUSD: string\n  }[]\n}\n\ninterface PoolResFields {\n  id: string\n  feeTier: string\n  token0: {\n    id: string\n    symbol: string\n    name: string\n  }\n  token1: {\n    id: string\n    symbol: string\n    name: string\n  }\n}\n\ninterface PoolRes {\n  as0: PoolResFields[]\n  as1: PoolResFields[]\n  asAddress: PoolResFields[]\n}\n\nexport function useFetchSearchResults(\n  value: string\n): {\n  tokens: TokenData[]\n  pools: PoolData[]\n  loading: boolean\n} {\n  const allTokens = useAllTokenData()\n  const allPools = useAllPoolData()\n\n  const [tokenData, setTokenData] = useState<TokenRes | undefined>()\n  const [poolData, setPoolData] = useState<PoolRes | undefined>()\n\n  // fetch data based on search input\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const tokens = await client.query<TokenRes>({\n          query: TOKEN_SEARCH,\n          variables: {\n            value: value ? value.toUpperCase() : '',\n            id: value,\n          },\n        })\n        const pools = await client.query<PoolRes>({\n          query: POOL_SEARCH,\n          variables: {\n            tokens: tokens.data.asSymbol?.map((t) => t.id),\n            id: value,\n          },\n        })\n\n        if (tokens.data) {\n          setTokenData(tokens.data)\n        }\n        if (pools.data) {\n          setPoolData(pools.data)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (value && value.length > 0) {\n      fetch()\n    }\n  }, [value])\n\n  const allFetchedTokens = useMemo(() => {\n    if (tokenData) {\n      return [...tokenData.asAddress, ...tokenData.asName, ...tokenData.asSymbol]\n    }\n    return []\n  }, [tokenData])\n\n  const allFetchedPools = useMemo(() => {\n    if (poolData) {\n      return [...poolData.asAddress, ...poolData.as0, ...poolData.as1]\n    }\n    return []\n  }, [poolData])\n\n  // format as token and pool datas\n  const { data: tokenFullDatas, loading: tokenFullLoading } = useTokenDatas(allFetchedTokens.map((t) => t.id))\n  const poolDatasFull = usePoolDatas(allFetchedPools.map((p) => p.id))\n  const formattedTokens = useMemo(() => (tokenFullDatas ? Object.values(tokenFullDatas) : []), [tokenFullDatas])\n\n  const newTokens = useMemo(() => {\n    return formattedTokens.filter((t) => !Object.keys(allTokens).includes(t.address))\n  }, [allTokens, formattedTokens])\n\n  const combinedTokens = useMemo(() => {\n    return [\n      ...newTokens,\n      ...Object.values(allTokens)\n        .map((t) => t.data)\n        .filter(notEmpty),\n    ]\n  }, [allTokens, newTokens])\n\n  const filteredSortedTokens = useMemo(() => {\n    return combinedTokens.filter((t) => {\n      const regexMatches = Object.keys(t).map((tokenEntryKey) => {\n        const isAddress = value.slice(0, 2) === '0x'\n        if (tokenEntryKey === 'address' && isAddress) {\n          return t[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n        }\n        if (tokenEntryKey === 'symbol' && !isAddress) {\n          return t[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n        }\n        if (tokenEntryKey === 'name' && !isAddress) {\n          return t[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n        }\n        return false\n      })\n      return regexMatches.some((m) => m)\n    })\n  }, [combinedTokens, value])\n\n  const newPools = useMemo(() => {\n    return poolDatasFull.filter((p) => !Object.keys(allPools).includes(p.address))\n  }, [allPools, poolDatasFull])\n\n  const combinedPools = useMemo(() => {\n    return [\n      ...newPools,\n      ...Object.values(allPools)\n        .map((p) => p.data)\n        .filter(notEmpty),\n    ]\n  }, [allPools, newPools])\n\n  const filteredSortedPools = useMemo(() => {\n    return combinedPools.filter((t) => {\n      const regexMatches = Object.keys(t).map((key) => {\n        const isAddress = value.slice(0, 2) === '0x'\n        if (key === 'address' && isAddress) {\n          return t[key].match(new RegExp(escapeRegExp(value), 'i'))\n        }\n        if ((key === 'token0' || key === 'token1') && !isAddress) {\n          return (\n            t[key].name.match(new RegExp(escapeRegExp(value), 'i')) ||\n            t[key].symbol.toLocaleLowerCase().match(new RegExp(escapeRegExp(value.toLocaleLowerCase()), 'i'))\n          )\n        }\n        return false\n      })\n      return regexMatches.some((m) => m)\n    })\n  }, [combinedPools, value])\n\n  return {\n    tokens: filteredSortedTokens,\n    pools: filteredSortedPools,\n    loading: tokenFullLoading,\n  }\n}\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import React, { useState } from 'react'\nimport { HelpCircle } from 'react-feather'\nimport { ImageProps } from 'rebass'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends Pick<ImageProps, 'style' | 'alt' | 'className'> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nexport default function Logo({ srcs, alt, ...rest }: LogoProps) {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((src) => !BAD_SRCS[src])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpCircle {...rest} />\n}\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport Logo from '../Logo'\n\nexport const getTokenLogoURL = (address: string) =>\n  `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${address}/logo.png`\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  border-radius: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  background-color: ${({ theme }) => theme.white};\n  color: ${({ theme }) => theme.text4};\n`\n\nexport default function CurrencyLogo({\n  address,\n  size = '24px',\n  style,\n  ...rest\n}: {\n  address?: string\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const srcs: string[] = useMemo(() => {\n    const checkSummed = isAddress(address)\n\n    if (checkSummed) {\n      return [getTokenLogoURL(checkSummed)]\n    }\n    return []\n  }, [address])\n\n  return <StyledLogo size={size} srcs={srcs} alt={'token logo'} style={style} {...rest} />\n}\n","import numbro from 'numbro'\n\nexport function getNumberSign(value: number) {\n  if (Number.isNaN(value)) {\n    throw new Error('Value is not a number')\n  }\n  if (value === 0) {\n    return ''\n  }\n  if (value < 0) {\n    return '-'\n  }\n  return '+'\n}\n// using a currency library here in case we want to add more in future\nexport const formatDollarAmount = (num: number | undefined, digits = 2, round = true, signed = false) => {\n  if (num === 0) return '$0.00'\n  if (!num) return '-'\n  if (num < 0.001 && !signed) {\n    return '<$0.001'\n  }\n\n  const returnValue = numbro(num).formatCurrency({ average: round, mantissa: digits })\n  if (signed && num > 0) return `+${returnValue}`\n  return returnValue\n}\n\n// using a currency library here in case we want to add more in future\nexport const formatAmount = (num: number | undefined, digits = 2, signed = false) => {\n  if (num === 0) return '0'\n  if (!num) return '-'\n  if (num < 0.001 && !signed) {\n    return '<0.001'\n  }\n  const nf = new Intl.NumberFormat()\n  return nf.format(parseFloat(num.toFixed(num > 1000 ? 0 : digits)))\n}\n\nexport function toTwoNonZeroDecimals(n: number) {\n  const log10 = n ? Math.floor(Math.log10(n)) : 0\n  // eslint-disable-next-line no-restricted-properties\n  const div = log10 < 0 ? Math.pow(10, 1 - log10) : 100\n\n  return Math.round(n * div) / div\n}\n\nexport function countDecimals(value: number) {\n  if (Number.isNaN(value)) {\n    throw new Error('Value is not a number')\n  }\n\n  if (Math.floor(value) === value) return 0\n  return value.toString().split('.')[1].length || 0\n}\n\nexport function formatPercentageValue(value: number, hideDecimals = false, usePlusSymbol = false) {\n  const sign = getNumberSign(value)\n  if (usePlusSymbol) {\n    value = Math.abs(value)\n  }\n\n  const percentageFormat = 100 * value\n  const numOfDecimals = countDecimals(percentageFormat)\n\n  if (numOfDecimals === 0 && hideDecimals) {\n    return `${percentageFormat.toFixed(0)}%`\n  }\n\n  if (usePlusSymbol) {\n    return `${sign} ${percentageFormat.toFixed(2)}%`\n  }\n  return `${percentageFormat.toFixed(2)}%`\n}\n\nexport function getSignedValue(value: number) {\n  const sign = getNumberSign(value)\n  if (sign === '') return value\n  if (sign === '-') return `- ${-value}`\n  return `${sign} ${-value}`\n}\n\nexport function formatSignedDollarAmount(value: number) {\n  const sign = getNumberSign(value)\n  if (sign === '') return formatDollarAmount(value)\n  if (sign === '-') return `- ${formatDollarAmount(-value)}`\n  return `${sign} ${formatDollarAmount(-value)}`\n}\n\nexport function roundToNDecimals(value: number, decimals: number) {\n  const decimalsCount = countDecimals(value)\n  const coeff = decimalsCount < decimals ? 10 ** decimalsCount : 10 ** decimals\n  return Math.round(value * coeff) / coeff\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from '../CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean; sizeraw: number }>`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ sizeraw, margin }) => margin && (sizeraw / 3 + 8).toString() + 'px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  address0?: string\n  address1?: string\n}\n\nconst HigherLogo = styled(CurrencyLogo)`\n  z-index: 2;\n`\nconst CoveredLogo = styled(CurrencyLogo)<{ sizeraw: number }>`\n  // position: absolute;\n  // left: ${({ sizeraw }) => '-' + (sizeraw / 2).toString() + 'px'} !important;\n`\n\nexport default function DoubleCurrencyLogo({ address0, address1, size = 16, margin = false }: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper sizeraw={size} margin={margin}>\n      {address0 && <HigherLogo address={address0} size={size.toString() + 'px'} />}\n      {address1 && <CoveredLogo address={address1} size={size.toString() + 'px'} sizeraw={size} />}\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Card = styled(Box)<{ width?: string; padding?: string; border?: string; borderRadius?: string }>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.bg2};\n  background-color: ${({ theme }) => theme.bg1};\n`\n\nexport const LightGreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.bg3};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.bg2};\n`\n\nexport const DarkGreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.bg0};\n`\n\nexport const OutlineCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.bg3};\n`\n\nexport const YellowCard = styled(Card)`\n  background-color: rgba(243, 132, 30, 0.05);\n  color: ${({ theme }) => theme.yellow3};\n  font-weight: 500;\n`\n\nexport const PinkCard = styled(Card)`\n  background-color: rgba(255, 0, 122, 0.03);\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n`\n\nexport const BlueCard = styled(Card)`\n  background-color: ${({ theme }) => theme.primary5};\n  color: ${({ theme }) => theme.blue2};\n  border-radius: 12px;\n  width: fit-content;\n`\n\nexport const ScrollableX = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  overflow-x: auto;\n  overflow-y: hidden;\n  white-space: nowrap;\n`\n\nexport const GreyBadge = styled(Card)`\n  width: fit-content;\n  border-radius: 8px;\n  background: ${({ theme }) => theme.bg3};\n  color: ${({ theme }) => theme.text1};\n  padding: 4px 6px;\n  font-weight: 400;\n`\n","import { ThemeContext } from 'styled-components'\nimport { useContext } from 'react'\n\nexport default function useTheme() {\n  return useContext(ThemeContext)\n}\n","import React, { HTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { darken, lighten } from 'polished'\n\nimport { RowBetween } from '../Row'\nimport { ChevronDown, Check, Star } from 'react-feather'\nimport { Button as RebassButton, ButtonProps } from 'rebass/styled-components'\nimport useTheme from 'hooks/useTheme'\n\nconst Base = styled(RebassButton)<{\n  padding?: string\n  width?: string\n  borderRadius?: string\n  altDisabledStyle?: boolean\n}>`\n  padding: ${({ padding }) => (padding ? padding : '8px 16px')};\n  width: ${({ width }) => (width ? width : '100%')};\n  font-weight: 500;\n  text-align: center;\n  border-radius: 12px;\n  border-radius: ${({ borderRadius }) => borderRadius && borderRadius};\n  outline: none;\n  border: 1px solid transparent;\n  color: white;\n  text-decoration: none;\n  display: flex;\n  justify-content: center;\n  flex-wrap: nowrap;\n  align-items: center;\n  cursor: pointer;\n  position: relative;\n  z-index: 1;\n  &:disabled {\n    cursor: auto;\n  }\n\n  > * {\n    user-select: none;\n  }\n`\n\nexport const ButtonPrimary = styled(Base)<{ bgColor?: string }>`\n  background-color: ${({ theme, bgColor }) => bgColor ?? theme.primary1};\n  color: white;\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme, bgColor }) => darken(0.05, bgColor ?? theme.primary1)};\n    background-color: ${({ theme, bgColor }) => darken(0.05, bgColor ?? theme.primary1)};\n  }\n  &:hover {\n    background-color: ${({ theme, bgColor }) => darken(0.05, bgColor ?? theme.primary1)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme, bgColor }) => darken(0.1, bgColor ?? theme.primary1)};\n    background-color: ${({ theme, bgColor }) => darken(0.1, bgColor ?? theme.primary1)};\n  }\n  &:disabled {\n    background-color: ${({ theme, altDisabledStyle, disabled }) =>\n      altDisabledStyle ? (disabled ? theme.bg3 : theme.primary1) : theme.bg3};\n    color: ${({ theme, altDisabledStyle, disabled }) =>\n      altDisabledStyle ? (disabled ? theme.text3 : 'white') : theme.text3};\n    cursor: auto;\n    box-shadow: none;\n    border: 1px solid transparent;\n    outline: none;\n    opacity: ${({ altDisabledStyle }) => (altDisabledStyle ? '0.5' : '1')};\n  }\n`\n\nexport const ButtonLight = styled(Base)`\n  background-color: ${({ theme }) => theme.primary5};\n  color: ${({ theme }) => theme.primaryText1};\n  font-size: 16px;\n  font-weight: 500;\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme, disabled }) => !disabled && darken(0.03, theme.primary5)};\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.03, theme.primary5)};\n  }\n  &:hover {\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.03, theme.primary5)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme, disabled }) => !disabled && darken(0.05, theme.primary5)};\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.05, theme.primary5)};\n  }\n  :disabled {\n    opacity: 0.4;\n    :hover {\n      cursor: auto;\n      background-color: ${({ theme }) => theme.primary5};\n      box-shadow: none;\n      border: 1px solid transparent;\n      outline: none;\n    }\n  }\n`\n\nexport const ButtonGray = styled(Base)`\n  background-color: ${({ theme }) => theme.bg3};\n  color: ${({ theme }) => theme.text2};\n  font-size: 16px;\n  font-weight: 500;\n  outline: none;\n  &:focus {\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.05, theme.bg4)};\n    outline: none;\n  }\n  &:hover {\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.05, theme.bg4)};\n    outline: none;\n  }\n  &:active {\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.1, theme.bg4)};\n    outline: none;\n  }\n`\n\nexport const ButtonSecondary = styled(Base)`\n  border: 1px solid ${({ theme }) => theme.primary4};\n  color: ${({ theme }) => theme.primary1};\n  background-color: transparent;\n  font-size: 16px;\n  border-radius: 12px;\n  padding: ${({ padding }) => (padding ? padding : '10px')};\n\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme }) => theme.primary4};\n    border: 1px solid ${({ theme }) => theme.primary3};\n  }\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.primary3};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme }) => theme.primary4};\n    border: 1px solid ${({ theme }) => theme.primary3};\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n  a:hover {\n    text-decoration: none;\n  }\n`\n\nexport const ButtonPink = styled(Base)`\n  background-color: ${({ theme }) => theme.primary1};\n  color: white;\n\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.05, theme.primary1)};\n    background-color: ${({ theme }) => darken(0.05, theme.primary1)};\n  }\n  &:hover {\n    background-color: ${({ theme }) => darken(0.05, theme.primary1)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.1, theme.primary1)};\n    background-color: ${({ theme }) => darken(0.1, theme.primary1)};\n  }\n  &:disabled {\n    background-color: ${({ theme }) => theme.primary1};\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nexport const ButtonUNIGradient = styled(ButtonPrimary)`\n  color: white;\n  padding: 4px 8px;\n  height: 36px;\n  font-weight: 500;\n  background-color: ${({ theme }) => theme.bg3};\n  background: radial-gradient(174.47% 188.91% at 1.84% 0%, #ff007a 0%, #2172e5 100%), #edeef2;\n  width: fit-content;\n  position: relative;\n  cursor: pointer;\n  border: none;\n  white-space: no-wrap;\n  :hover {\n    opacity: 0.8;\n  }\n  :active {\n    opacity: 0.9;\n  }\n`\n\nexport const ButtonOutlined = styled(Base)`\n  border: 1px solid ${({ theme }) => theme.bg2};\n  background-color: transparent;\n  color: ${({ theme }) => theme.text1};\n\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.bg4};\n  }\n  &:hover {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.bg4};\n  }\n  &:active {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.bg4};\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nexport const ButtonEmpty = styled(Base)`\n  background-color: transparent;\n  color: ${({ theme }) => theme.primary1};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:focus {\n    text-decoration: underline;\n  }\n  &:hover {\n    text-decoration: none;\n  }\n  &:active {\n    text-decoration: none;\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nexport const ButtonWhite = styled(Base)`\n  border: 1px solid #edeef2;\n  background-color: ${({ theme }) => theme.bg1};\n  color: black;\n\n  &:focus {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    box-shadow: 0 0 0 1pt ${darken(0.05, '#edeef2')};\n  }\n  &:hover {\n    box-shadow: 0 0 0 1pt ${darken(0.1, '#edeef2')};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${darken(0.1, '#edeef2')};\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nconst ButtonConfirmedStyle = styled(Base)`\n  background-color: ${({ theme }) => lighten(0.5, theme.green1)};\n  color: ${({ theme }) => theme.green1};\n  border: 1px solid ${({ theme }) => theme.green1};\n\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nconst ButtonErrorStyle = styled(Base)`\n  background-color: ${({ theme }) => theme.red1};\n  border: 1px solid ${({ theme }) => theme.red1};\n\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.05, theme.red1)};\n    background-color: ${({ theme }) => darken(0.05, theme.red1)};\n  }\n  &:hover {\n    background-color: ${({ theme }) => darken(0.05, theme.red1)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.1, theme.red1)};\n    background-color: ${({ theme }) => darken(0.1, theme.red1)};\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n    box-shadow: none;\n    background-color: ${({ theme }) => theme.red1};\n    border: 1px solid ${({ theme }) => theme.red1};\n  }\n`\n\nexport function ButtonConfirmed({\n  confirmed,\n  altDisabledStyle,\n  ...rest\n}: { confirmed?: boolean; altDisabledStyle?: boolean } & ButtonProps) {\n  if (confirmed) {\n    return <ButtonConfirmedStyle {...rest} />\n  } else {\n    return <ButtonPrimary {...rest} altDisabledStyle={altDisabledStyle} />\n  }\n}\n\nexport function ButtonError({ error, ...rest }: { error?: boolean } & ButtonProps) {\n  if (error) {\n    return <ButtonErrorStyle {...rest} />\n  } else {\n    return <ButtonPrimary {...rest} />\n  }\n}\n\nexport function ButtonDropdown({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\n  return (\n    <ButtonPrimary {...rest} disabled={disabled}>\n      <RowBetween>\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n        <ChevronDown size={24} />\n      </RowBetween>\n    </ButtonPrimary>\n  )\n}\n\nexport function ButtonDropdownGrey({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\n  return (\n    <ButtonGray {...rest} disabled={disabled} style={{ borderRadius: '20px' }}>\n      <RowBetween>\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n        <ChevronDown size={24} />\n      </RowBetween>\n    </ButtonGray>\n  )\n}\n\nexport function ButtonDropdownLight({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\n  return (\n    <ButtonOutlined {...rest} disabled={disabled}>\n      <RowBetween>\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n        <ChevronDown size={24} />\n      </RowBetween>\n    </ButtonOutlined>\n  )\n}\n\nexport function ButtonRadio({ active, ...rest }: { active?: boolean } & ButtonProps) {\n  if (!active) {\n    return <ButtonWhite {...rest} />\n  } else {\n    return <ButtonPrimary {...rest} />\n  }\n}\n\nconst ActiveOutlined = styled(ButtonOutlined)`\n  border: 1px solid;\n  border-color: ${({ theme }) => theme.primary1};\n`\n\nconst Circle = styled.div`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.primary1};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst CheckboxWrapper = styled.div`\n  width: 30px;\n  padding: 0 10px;\n`\n\nexport function ButtonRadioChecked({ active = false, children, ...rest }: { active?: boolean } & ButtonProps) {\n  if (!active) {\n    return (\n      <ButtonOutlined borderRadius=\"12px\" padding=\"12px 8px\" {...rest}>\n        {<RowBetween>{children}</RowBetween>}\n      </ButtonOutlined>\n    )\n  } else {\n    return (\n      <ActiveOutlined {...rest} padding=\"12px 8px\" borderRadius=\"12px\">\n        {\n          <RowBetween>\n            {children}\n            <CheckboxWrapper>\n              <Circle>\n                <Check size={13} />\n              </Circle>\n            </CheckboxWrapper>\n          </RowBetween>\n        }\n      </ActiveOutlined>\n    )\n  }\n}\n\nconst HoverIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nexport const SavedIcon = ({\n  fill = false,\n  size = '20px',\n  ...rest\n}: { fill: boolean; size?: string } & HTMLAttributes<HTMLDivElement>) => {\n  const theme = useTheme()\n  return (\n    <HoverIcon {...rest}>\n      <Star stroke={theme.text2} fill={fill ? theme.text2 : 'transparent'} size={size} />\n    </HoverIcon>\n  )\n}\n","import { Placement } from '@popperjs/core'\nimport { transparentize } from 'polished'\nimport React, { useCallback, useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport useInterval from '../../hooks/useInterval'\nimport Portal from '@reach/portal'\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 9999;\n\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({ theme }) => theme.bg2};\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\n  color: ${({ theme }) => theme.text2};\n  border-radius: 8px;\n`\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nconst Arrow = styled.div`\n  width: 8px;\n  height: 8px;\n  z-index: 9998;\n\n  ::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    z-index: 9998;\n\n    content: '';\n    border: 1px solid ${({ theme }) => theme.bg3};\n    transform: rotate(45deg);\n    background: ${({ theme }) => theme.bg2};\n  }\n\n  &.arrow-top {\n    bottom: -5px;\n    ::before {\n      border-top: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-bottom {\n    top: -5px;\n    ::before {\n      border-bottom: none;\n      border-right: none;\n    }\n  }\n\n  &.arrow-left {\n    right: -5px;\n\n    ::before {\n      border-bottom: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-right {\n    left: -5px;\n    ::before {\n      border-right: none;\n      border-top: none;\n    }\n  }\n`\n\nexport interface PopoverProps {\n  content: React.ReactNode\n  show: boolean\n  children: React.ReactNode\n  placement?: Placement\n}\n\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [8, 8] } },\n      { name: 'arrow', options: { element: arrowElement } },\n    ],\n  })\n  const updateCallback = useCallback(() => {\n    update && update()\n  }, [update])\n  useInterval(updateCallback, show ? 100 : null)\n\n  return (\n    <>\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\n      <Portal>\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\n          {content}\n          <Arrow\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n            ref={setArrowElement as any}\n            style={styles.arrow}\n            {...attributes.arrow}\n          />\n        </PopoverContainer>\n      </Portal>\n    </>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const current = savedCallback.current\n      current && current()\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport Popover, { PopoverProps } from '../Popover'\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n`\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string\n}\n\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\n  const [show, setShow] = useState(false)\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n  return (\n    <Tooltip {...rest} show={show}>\n      <div onMouseEnter={open} onMouseLeave={close}>\n        {children}\n      </div>\n    </Tooltip>\n  )\n}\n","import Tooltip from 'components/Tooltip'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst TextWrapper = styled.div<{ margin: boolean; link: boolean; fontSize?: string; adjustSize?: boolean }>`\n  position: relative;\n  margin-left: ${({ margin }) => margin && '4px'};\n  color: ${({ theme, link }) => (link ? theme.blue1 : theme.text1)};\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\n\n  :hover {\n    cursor: pointer;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\n  }\n`\n\nconst HoverInlineText = ({\n  text,\n  maxCharacters = 20,\n  margin = false,\n  adjustSize = false,\n  fontSize,\n  link,\n  ...rest\n}: {\n  text: string\n  maxCharacters?: number\n  margin?: boolean\n  adjustSize?: boolean\n  fontSize?: string\n  link?: boolean\n}) => {\n  const [showHover, setShowHover] = useState(false)\n\n  if (!text) {\n    return <span></span>\n  }\n\n  if (text.length > maxCharacters) {\n    return (\n      <Tooltip text={text} show={showHover}>\n        <TextWrapper\n          onMouseEnter={() => setShowHover(true)}\n          onMouseLeave={() => setShowHover(false)}\n          margin={margin}\n          adjustSize={adjustSize}\n          link={!!link}\n          fontSize={fontSize}\n          {...rest}\n        >\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\n        </TextWrapper>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <TextWrapper margin={margin} adjustSize={adjustSize} link={!!link} fontSize={fontSize} {...rest}>\n      {text}\n    </TextWrapper>\n  )\n}\n\nexport default HoverInlineText\n","import React, { useRef, useCallback, useState, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport Row, { RowFixed } from 'components/Row'\nimport { HideSmall, TYPE } from 'theme'\nimport Hotkeys from 'react-hot-keys'\nimport { useFetchSearchResults } from 'data/search'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { formatDollarAmount } from 'utils/numbers'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { GreyBadge } from 'components/Card'\nimport { feeTierPercent } from 'utils'\nimport { useSavedTokens, useSavedPools } from 'state/user/hooks'\nimport { SavedIcon } from 'components/Button'\nimport { useHistory } from 'react-router-dom'\nimport { useTokenDatas } from 'state/tokens/hooks'\nimport { usePoolDatas } from 'state/pools/hooks'\nimport HoverInlineText from 'components/HoverInlineText'\nimport { TOKEN_HIDE, POOL_HIDE } from '../../constants/index'\n\nconst Container = styled.div`\n  position: relative;\n  z-index: 30;\n  width: 100%;\n`\n\nconst Wrapper = styled(Row)`\n  background-color: ${({ theme }) => theme.black};\n  padding: 10px 16px;\n  width: 500px;\n  height: 38px;\n  border-radius: 20px;\n  positon: relative;\n  z-index: 9999;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    width: 100%;\n  `};\n`\n\nconst StyledInput = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  width: 100%;\n  font-size: 16px;\n  outline: none;\n  color: ${({ theme }) => theme.text1};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n    font-size: 16px;\n  }\n\n  @media screen and (max-width: 640px) {\n    ::placeholder {\n      font-size: 1rem;\n    }\n  }\n`\n\nconst Menu = styled.div<{ hide: boolean }>`\n  display: flex;\n  flex-direction: column;\n  z-index: 9999;\n  width: 800px;\n  top: 50px;\n  max-height: 600px;\n  overflow: auto;\n  right: 0;\n  padding: 1.5rem;\n  padding-bottom: 1.5rem;\n  position: absolute;\n  background: ${({ theme }) => theme.bg0};\n  border-radius: 8px;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.04);\n  display: ${({ hide }) => hide && 'none'};\n  border: 1px solid ${({ theme }) => theme.pink1};\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    position: absolute;\n    margin-top: 4px;\n    z-index: 9999;\n    width: 100%;\n    max-height: 400px;\n  `};\n`\n\nconst Blackout = styled.div`\n  position: absolute;\n  min-height: 100vh;\n  width: 100vw;\n  z-index: -40;\n  background-color: black;\n  opacity: 0.7;\n  left: 0;\n  top: 0;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 1.5fr repeat(3, 1fr);\n  align-items: center;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    grid-template-columns: 1fr;\n  `};\n`\n\nconst Break = styled.div`\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg1};\n  width: 100%;\n`\n\nconst HoverText = styled.div<{ hide?: boolean | undefined }>`\n  color: ${({ theme }) => theme.blue1}\n  display: ${({ hide = false }) => hide && 'none'};\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst HoverRowLink = styled.div`\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst OptionButton = styled.div<{ enabled: boolean }>`\n  width: fit-content;\n  padding: 4px 8px;\n  border-radius: 8px;\n  display: flex;\n  font-size: 12px;\n  font-weight: 600;\n  margin-right: 10px;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme, enabled }) => (enabled ? theme.pink1 : 'transparent')};\n  color: ${({ theme, enabled }) => (enabled ? theme.white : theme.pink1)};\n  :hover {\n    opacity: 0.6;\n    cursor: pointer;\n  }\n`\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  hideTokens?: boolean\n  hidePools?: boolean\n}\n\nconst SearchSmall = ({ hideTokens = false, hidePools = false, ...rest }: Props) => {\n  const history = useHistory()\n\n  const ref = useRef<HTMLInputElement>(null)\n  const menuRef = useRef<HTMLDivElement>(null)\n  const textRef = useRef<HTMLDivElement>(null)\n\n  const handleDown = useCallback(() => {\n    if (ref != null && ref.current !== null) {\n      ref.current.focus()\n    }\n  }, [])\n\n  const [focused, setFocused] = useState<boolean>(false)\n  const [showMenu, setShowMenu] = useState(false)\n  const [value, setValue] = useState('')\n\n  const { tokens, pools } = useFetchSearchResults(value)\n\n  useEffect(() => {\n    if (value !== '') {\n      setFocused(true)\n    } else {\n      setFocused(false)\n    }\n  }, [value])\n\n  const [tokensShown, setTokensShown] = useState(3)\n  const [poolsShown, setPoolsShown] = useState(3)\n\n  const handleClick = (e: any) => {\n    if (!(menuRef.current && menuRef.current.contains(e.target)) && !(ref.current && ref.current.contains(e.target))) {\n      setPoolsShown(3)\n      setTokensShown(3)\n      setShowMenu(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick)\n    return () => {\n      document.removeEventListener('click', handleClick)\n    }\n  })\n\n  // watchlist\n  const [savedTokens, addSavedToken] = useSavedTokens()\n  const [savedPools, addSavedPool] = useSavedPools()\n\n  const handleNav = (to: string) => {\n    setShowMenu(false)\n    setPoolsShown(3)\n    setTokensShown(3)\n    history.push(to)\n  }\n\n  // get date for watchlist\n  const watchListTokenData = useTokenDatas(savedTokens)\n  const watchListPoolData = usePoolDatas(savedPools)\n\n  // filter on view\n  const [showWatchlist, setShowWatchlist] = useState(false)\n  const tokensForList = useMemo(() => (showWatchlist ? watchListTokenData ?? [] : tokens), [\n    showWatchlist,\n    tokens,\n    watchListTokenData,\n  ])\n  const poolForList = useMemo(() => (showWatchlist ? watchListPoolData ?? [] : pools), [\n    pools,\n    showWatchlist,\n    watchListPoolData,\n  ])\n\n  return (\n    <Hotkeys keyName=\"command+/\" onKeyDown={handleDown}>\n      {showMenu ? <Blackout /> : null}\n      <Container>\n        <Wrapper {...rest}>\n          <StyledInput\n            type=\"text\"\n            value={value}\n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n            placeholder=\"Search pools or tokens\"\n            ref={ref}\n            onFocus={() => {\n              setFocused(true)\n              setShowMenu(true)\n            }}\n            onBlur={() => setFocused(false)}\n          />\n          {!focused && <TYPE.gray pl=\"2px\">⌘/</TYPE.gray>}\n        </Wrapper>\n        <Menu hide={!showMenu} ref={menuRef}>\n          <AutoColumn gap=\"lg\">\n            <AutoColumn gap=\"sm\">\n              <RowFixed>\n                <OptionButton enabled={!showWatchlist} onClick={() => setShowWatchlist(false)}>\n                  Search\n                </OptionButton>\n                <OptionButton enabled={showWatchlist} onClick={() => setShowWatchlist(true)}>\n                  Watchlist\n                </OptionButton>\n              </RowFixed>\n            </AutoColumn>\n            {!hideTokens && (\n              <>\n                <ResponsiveGrid>\n                  <TYPE.main>Tokens</TYPE.main>\n                  <HideSmall>\n                    <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                      Volume 24H\n                    </TYPE.main>\n                  </HideSmall>\n                  <HideSmall>\n                    <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                      TVL\n                    </TYPE.main>\n                  </HideSmall>\n                  <HideSmall>\n                    <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                      Price\n                    </TYPE.main>\n                  </HideSmall>\n                </ResponsiveGrid>\n                {tokensForList\n                  .filter((t) => !TOKEN_HIDE.includes(t.address))\n                  .slice(0, tokensShown)\n                  .map((t, i) => {\n                    return (\n                      <HoverRowLink onClick={() => handleNav('/tokens/' + t.address)} key={i}>\n                        <ResponsiveGrid>\n                          <RowFixed>\n                            <CurrencyLogo address={t.address} />\n                            <TYPE.label ml=\"10px\">\n                              <HoverInlineText text={`${t.name} (${t.symbol})`} />{' '}\n                            </TYPE.label>\n                            <SavedIcon\n                              id=\"watchlist-icon\"\n                              size={'16px'}\n                              style={{ marginLeft: '8px' }}\n                              fill={savedTokens.includes(t.address)}\n                              onClick={(e) => {\n                                e.stopPropagation()\n                                addSavedToken(t.address)\n                              }}\n                            />\n                          </RowFixed>\n                          <HideSmall>\n                            <TYPE.label textAlign=\"end\">{formatDollarAmount(t.volumeUSD)}</TYPE.label>\n                          </HideSmall>\n                          <HideSmall>\n                            <TYPE.label textAlign=\"end\">{formatDollarAmount(t.tvlUSD)}</TYPE.label>\n                          </HideSmall>\n                          <HideSmall>\n                            <TYPE.label textAlign=\"end\">{formatDollarAmount(t.priceUSD)}</TYPE.label>\n                          </HideSmall>\n                        </ResponsiveGrid>\n                      </HoverRowLink>\n                    )\n                  })}\n                {tokensForList.length === 0 ? (\n                  <TYPE.main>{showWatchlist ? 'Saved tokens will appear here' : 'No results'}</TYPE.main>\n                ) : null}\n                <HoverText\n                  onClick={() => {\n                    setTokensShown(tokensShown + 5)\n                  }}\n                  hide={!(tokensForList.length > 3 && tokensForList.length >= tokensShown)}\n                  ref={textRef}\n                >\n                  See more...\n                </HoverText>\n                <Break />\n              </>\n            )}\n\n            {!hidePools && (\n              <>\n                <ResponsiveGrid>\n                  <TYPE.main>Pools</TYPE.main>\n                  <HideSmall>\n                    <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                      Volume 24H\n                    </TYPE.main>\n                  </HideSmall>\n                  <HideSmall>\n                    <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                      TVL\n                    </TYPE.main>\n                  </HideSmall>\n                  <HideSmall>\n                    <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                      Price\n                    </TYPE.main>\n                  </HideSmall>\n                </ResponsiveGrid>\n                {poolForList\n                  .filter((p) => !POOL_HIDE.includes(p.address))\n                  .slice(0, poolsShown)\n                  .map((p, i) => {\n                    return (\n                      <HoverRowLink onClick={() => handleNav('/pools/' + p.address)} key={i}>\n                        <ResponsiveGrid key={i}>\n                          <RowFixed>\n                            <DoubleCurrencyLogo address0={p.token0.address} address1={p.token1.address} />\n                            <TYPE.label ml=\"10px\" style={{ whiteSpace: 'nowrap' }}>\n                              <HoverInlineText maxCharacters={12} text={`${p.token0.symbol} / ${p.token1.symbol}`} />\n                            </TYPE.label>\n                            <GreyBadge ml=\"10px\">{feeTierPercent(p.feeTier)}</GreyBadge>\n                            <SavedIcon\n                              id=\"watchlist-icon\"\n                              size={'16px'}\n                              style={{ marginLeft: '10px' }}\n                              fill={savedPools.includes(p.address)}\n                              onClick={(e) => {\n                                e.stopPropagation()\n                                addSavedPool(p.address)\n                              }}\n                            />\n                          </RowFixed>\n                          <HideSmall>\n                            <TYPE.label textAlign=\"end\">{formatDollarAmount(p.volumeUSD)}</TYPE.label>\n                          </HideSmall>\n                          <HideSmall>\n                            <TYPE.label textAlign=\"end\">{formatDollarAmount(p.tvlUSD)}</TYPE.label>\n                          </HideSmall>\n                          <HideSmall>\n                            <TYPE.label textAlign=\"end\">{formatDollarAmount(p.token0Price)}</TYPE.label>\n                          </HideSmall>\n                        </ResponsiveGrid>\n                      </HoverRowLink>\n                    )\n                  })}\n                {poolForList.length === 0 ? (\n                  <TYPE.main>{showWatchlist ? 'Saved pools will appear here' : 'No results'}</TYPE.main>\n                ) : null}\n                <HoverText\n                  onClick={() => {\n                    setPoolsShown(poolsShown + 5)\n                  }}\n                  hide={!(poolForList.length > 3 && poolForList.length >= poolsShown)}\n                  ref={textRef}\n                >\n                  See more...\n                </HoverText>\n              </>\n            )}\n          </AutoColumn>\n        </Menu>\n        {/* <BelowMedium>\n          <MobileMenu>hey</MobileMenu>\n        </BelowMedium> */}\n      </Container>\n    </Hotkeys>\n  )\n}\n\nexport default SearchSmall\n","/* eslint-disable @typescript-eslint/no-var-requires */\n// import { ChainId } from '@uniswap/sdk'\nimport React from 'react'\n// import { Text } from 'rebass'\nimport { NavLink } from 'react-router-dom'\nimport { darken } from 'polished'\n\nimport styled from 'styled-components'\n\n// import Logo from '../../assets/svg/logo.svg'\nimport LogoDark from '../../assets/svg/logo_white.svg'\n// import { useActiveWeb3React } from '../../hooks'\n// import { useDarkModeManager } from '../../state/user/hooks'\n// import { useETHBalances } from '../../state/wallet/hooks'\n\n// import { YellowCard } from '../Card'\n// import { Moon, Sun } from 'react-feather'\nimport Menu from '../Menu'\n\nimport Row, { RowFixed } from '../Row'\n// import Web3Status from '../Web3Status'\nimport SearchSmall from 'components/Search'\nimport { HideMedium } from 'theme'\n\nconst HeaderFrame = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 120px;\n  align-items: center;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  top: 0;\n  position: relative;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 1rem;\n  z-index: 2;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n\n  background-color: ${({ theme }) => theme.bg0};\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n    width: calc(100%);\n    position: relative;\n  `};\n\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n        padding: 0.5rem 1rem;\n  `}\n`\n\nconst HeaderControls = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-self: flex-end;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n      padding-bottom: 1rem;\n      width: 100%;\n  `};\n`\n\n// const HeaderElement = styled.div`\n//   display: flex;\n//   align-items: center;\n\n//   /* addresses safari's lack of support for \"gap\" */\n//   & > *:not(:first-child) {\n//     margin-left: 8px;\n//   }\n\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\n//    flex-direction: row-reverse;\n//     align-items: center;\n//   `};\n// `\n\nconst HeaderElementWrap = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst HeaderRow = styled(RowFixed)`\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n   width: 100%;\n  `};\n`\n\nconst HeaderLinks = styled(Row)`\n  justify-content: center;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem 0 1rem 1rem;\n    justify-content: flex-end;\n`};\n`\n\n// const AccountElement = styled.div<{ active: boolean }>`\n//   display: flex;\n//   flex-direction: row;\n//   align-items: center;\n//   background-color: ${({ theme, active }) => (!active ? theme.bg0 : theme.bg1)};\n//   border-radius: 12px;\n//   white-space: nowrap;\n//   width: 100%;\n//   cursor: pointer;\n\n//   :focus {\n//     border: 1px solid blue;\n//   }\n// `\n\n// const HideSmall = styled.span`\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//     display: none;\n//   `};\n// `\n\n// const NetworkCard = styled(YellowCard)`\n//   border-radius: 12px;\n//   padding: 8px 12px;\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//     margin: 0;\n//     margin-right: 0.5rem;\n//     width: initial;\n//     overflow: hidden;\n//     text-overflow: ellipsis;\n//     flex-shrink: 1;\n//   `};\n// `\n\n// const BalanceText = styled(Text)`\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n//     display: none;\n//   `};\n// `\n\nconst Title = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  pointer-events: auto;\n  justify-self: flex-start;\n  margin-right: 12px;\n  :hover {\n    cursor: pointer;\n  }\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    justify-self: center;\n  `};\n`\n\nconst UniIcon = styled.div`\n  transition: transform 0.3s ease;\n  :hover {\n    transform: rotate(-5deg);\n  }\n`\n\nconst activeClassName = 'ACTIVE'\n\nconst StyledNavLink = styled(NavLink).attrs({\n  activeClassName,\n})`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: left;\n  border-radius: 3rem;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${({ theme }) => theme.text3};\n  font-size: 1rem;\n  width: fit-content;\n  margin: 0 6px;\n  padding: 8px 12px;\n  font-weight: 500;\n\n  &.${activeClassName} {\n    border-radius: 12px;\n    background-color: ${({ theme }) => theme.bg2};\n    color: ${({ theme }) => theme.text1};\n  }\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => darken(0.1, theme.text1)};\n  }\n`\n\nexport const StyledMenuButton = styled.button`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n  background-color: ${({ theme }) => theme.bg3};\n  margin-left: 8px;\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    background-color: ${({ theme }) => theme.bg4};\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n  > * {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\n// const NETWORK_LABELS: { [chainId in ChainId]?: string } = {\n//   [ChainId.RINKEBY]: 'Rinkeby',\n//   [ChainId.ROPSTEN]: 'Ropsten',\n//   [ChainId.GÖRLI]: 'Görli',\n//   [ChainId.KOVAN]: 'Kovan',\n// }\n\nexport default function Header() {\n  // const { account, chainId } = useActiveWeb3React()\n\n  // const userEthBalance = useETHBalances(account ? [account] : [])?.[account ?? '']\n  // const [isDark] = useDarkModeManager()\n  // const [darkMode, toggleDarkMode] = useDarkModeManager()\n\n  return (\n    <HeaderFrame>\n      <HeaderRow>\n        <Title to=\"/\">\n          <UniIcon>\n            <img width={'24px'} src={LogoDark} alt=\"logo\" />\n          </UniIcon>\n        </Title>\n        <HeaderLinks>\n          <StyledNavLink id={`pool-nav-link`} to={'/'} isActive={(match, { pathname }) => pathname === '/'}>\n            Overview\n          </StyledNavLink>\n          {/* <StyledNavLink id={`swap-nav-link`} to={'/protocol'}>\n            Protocol\n          </StyledNavLink> */}\n          <StyledNavLink id={`stake-nav-link`} to={'/pools'}>\n            Pools\n          </StyledNavLink>\n          <StyledNavLink id={`stake-nav-link`} to={'/tokens'}>\n            Tokens\n          </StyledNavLink>\n          <StyledNavLink id={`stake-nav-link`} to={'/simulator'}>\n            Simulator\n          </StyledNavLink>\n          {/* <StyledNavLink id={`stake-nav-link`} to={'/wallet'}>\n            Wallet\n          </StyledNavLink> */}\n        </HeaderLinks>\n      </HeaderRow>\n      <HeaderControls>\n        <SearchSmall />\n        {/* <HeaderElement>\n          <HideSmall>\n            {chainId && NETWORK_LABELS[chainId] && (\n              <NetworkCard title={NETWORK_LABELS[chainId]}>{NETWORK_LABELS[chainId]}</NetworkCard>\n            )}\n          </HideSmall>\n          <AccountElement active={!!account} style={{ pointerEvents: 'auto' }}>\n            {account && userEthBalance ? (\n              <BalanceText style={{ flexShrink: 0 }} pl=\"0.75rem\" pr=\"0.5rem\" fontWeight={500}>\n                {userEthBalance?.toSignificant(4)} ETH\n              </BalanceText>\n            ) : null}\n            <Web3Status />\n          </AccountElement>\n        </HeaderElement> */}\n        <HideMedium>\n          <HeaderElementWrap>\n            {/* <StyledMenuButton onClick={() => toggleDarkMode()}>\n            {darkMode ? <Moon size={20} /> : <Sun size={20} />}\n          </StyledMenuButton> */}\n            <Menu />\n          </HeaderElementWrap>\n        </HideMedium>\n      </HeaderControls>\n    </HeaderFrame>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { AlertTriangle, X } from 'react-feather'\nimport { useURLWarningToggle, useURLWarningVisible } from '../../state/user/hooks'\nimport { isMobile } from 'react-device-detect'\n\nconst PhishAlert = styled.div<{ isActive: any }>`\n  width: 100%;\n  padding: 6px 6px;\n  background-color: ${({ theme }) => theme.blue1};\n  color: white;\n  font-size: 11px;\n  justify-content: space-between;\n  align-items: center;\n  display: ${({ isActive }) => (isActive ? 'flex' : 'none')};\n`\n\nexport const StyledClose = styled(X)`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport default function URLWarning() {\n  const toggleURLWarning = useURLWarningToggle()\n  const showURLWarning = useURLWarningVisible()\n\n  return isMobile ? (\n    <PhishAlert isActive={showURLWarning}>\n      <div style={{ display: 'flex' }}>\n        <AlertTriangle style={{ marginRight: 6 }} size={12} /> Make sure the URL is\n        <code style={{ padding: '0 4px', display: 'inline', fontWeight: 'bold' }}>app.uniswap.org</code>\n      </div>\n      <StyledClose size={12} onClick={toggleURLWarning} />\n    </PhishAlert>\n  ) : window.location.hostname === 'app.uniswap.org' ? (\n    <PhishAlert isActive={showURLWarning}>\n      <div style={{ display: 'flex' }}>\n        <AlertTriangle style={{ marginRight: 6 }} size={12} /> Always make sure the URL is\n        <code style={{ padding: '0 4px', display: 'inline', fontWeight: 'bold' }}>app.uniswap.org</code> - bookmark it\n        to be safe.\n      </div>\n      <StyledClose size={12} onClick={toggleURLWarning} />\n    </PhishAlert>\n  ) : null\n}\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { Version } from '@uniswap/token-lists'\n\nexport default function listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n","import { diffTokenLists, TokenList } from '@uniswap/token-lists'\nimport React, { useCallback, useMemo } from 'react'\nimport ReactGA from 'react-ga'\nimport { useDispatch } from 'react-redux'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport { AppDispatch } from '../../state'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport { acceptListUpdate } from '../../state/lists/actions'\nimport { TYPE } from '../../theme'\nimport listVersionLabel from '../../utils/listVersionLabel'\nimport { ButtonSecondary } from '../Button'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nexport const ChangesList = styled.ul`\n  max-height: 400px;\n  overflow: auto;\n`\n\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto,\n}: {\n  popKey: string\n  listUrl: string\n  oldList: TokenList\n  newList: TokenList\n  auto: boolean\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  const dispatch = useDispatch<AppDispatch>()\n\n  const handleAcceptUpdate = useCallback(() => {\n    if (auto) return\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Update List from Popup',\n      label: listUrl,\n    })\n    dispatch(acceptListUpdate(listUrl))\n    removeThisPopup()\n  }, [auto, dispatch, listUrl, removeThisPopup])\n\n  const { added: tokensAdded, changed: tokensChanged, removed: tokensRemoved } = useMemo(() => {\n    return diffTokenLists(oldList.tokens, newList.tokens)\n  }, [newList.tokens, oldList.tokens])\n  const numTokensChanged = useMemo(\n    () =>\n      Object.keys(tokensChanged).reduce((memo, chainId: any) => memo + Object.keys(tokensChanged[chainId]).length, 0),\n    [tokensChanged]\n  )\n\n  return (\n    <AutoRow>\n      <AutoColumn style={{ flex: '1' }} gap=\"8px\">\n        {auto ? (\n          <TYPE.body fontWeight={500}>\n            The token list &quot;{oldList.name}&quot; has been updated to{' '}\n            <strong>{listVersionLabel(newList.version)}</strong>.\n          </TYPE.body>\n        ) : (\n          <>\n            <div>\n              <Text>\n                An update is available for the token list &quot;{oldList.name}&quot; (\n                {listVersionLabel(oldList.version)} to {listVersionLabel(newList.version)}).\n              </Text>\n              <ChangesList>\n                {tokensAdded.length > 0 ? (\n                  <li>\n                    {tokensAdded.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensAdded.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    added\n                  </li>\n                ) : null}\n                {tokensRemoved.length > 0 ? (\n                  <li>\n                    {tokensRemoved.map((token, i) => (\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\n                        <strong title={token.address}>{token.symbol}</strong>\n                        {i === tokensRemoved.length - 1 ? null : ', '}\n                      </React.Fragment>\n                    ))}{' '}\n                    removed\n                  </li>\n                ) : null}\n                {numTokensChanged > 0 ? <li>{numTokensChanged} tokens updated</li> : null}\n              </ChangesList>\n            </div>\n            <AutoRow>\n              <div style={{ flexGrow: 1, marginRight: 12 }}>\n                <ButtonSecondary onClick={handleAcceptUpdate}>Accept update</ButtonSecondary>\n              </div>\n              <div style={{ flexGrow: 1 }}>\n                <ButtonSecondary onClick={removeThisPopup}>Dismiss</ButtonSecondary>\n              </div>\n            </AutoRow>\n          </>\n        )}\n      </AutoColumn>\n    </AutoRow>\n  )\n}\n","import React, { useContext } from 'react'\nimport { AlertCircle, CheckCircle } from 'react-feather'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { TYPE } from '../../theme'\nimport { ExternalLink } from '../../theme/components'\nimport { getEtherscanLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`\n\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary,\n}: {\n  hash: string\n  success?: boolean\n  summary?: string\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const theme = useContext(ThemeContext)\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? <CheckCircle color={theme.green1} size={24} /> : <AlertCircle color={theme.red1} size={24} />}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <TYPE.body fontWeight={500}>{summary ?? 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)}</TYPE.body>\n        {chainId && (\n          <ExternalLink href={getEtherscanLink(chainId, hash, 'transaction')}>View on Etherscan</ExternalLink>\n        )}\n      </AutoColumn>\n    </RowNoFlex>\n  )\n}\n","import React, { useCallback, useContext, useEffect } from 'react'\nimport { X } from 'react-feather'\nimport { useSpring } from 'react-spring/web'\nimport styled, { ThemeContext } from 'styled-components'\nimport { animated } from 'react-spring'\nimport { PopupContent } from '../../state/application/actions'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport ListUpdatePopup from './ListUpdatePopup'\nimport TransactionPopup from './TransactionPopup'\n\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${({ theme }) => theme.bg1};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  overflow: hidden;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    min-width: 290px;\n    &:not(:last-of-type) {\n      margin-right: 20px;\n    }\n  `}\n`\nconst Fader = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 2px;\n  background-color: ${({ theme }) => theme.bg3};\n`\n\nconst AnimatedFader = animated(Fader)\n\nexport default function PopupItem({\n  removeAfterMs,\n  content,\n  popKey,\n}: {\n  removeAfterMs: number | null\n  content: PopupContent\n  popKey: string\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  useEffect(() => {\n    if (removeAfterMs === null) return undefined\n\n    const timeout = setTimeout(() => {\n      removeThisPopup()\n    }, removeAfterMs)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [removeAfterMs, removeThisPopup])\n\n  const theme = useContext(ThemeContext)\n\n  let popupContent\n  if ('txn' in content) {\n    const {\n      txn: { hash, success, summary },\n    } = content\n    popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />\n  } else if ('listUpdate' in content) {\n    const {\n      listUpdate: { listUrl, oldList, newList, auto },\n    } = content\n    popupContent = <ListUpdatePopup popKey={popKey} listUrl={listUrl} oldList={oldList} newList={newList} auto={auto} />\n  }\n\n  const faderStyle = useSpring({\n    from: { width: '100%' },\n    to: { width: '0%' },\n    config: { duration: removeAfterMs ?? undefined },\n  })\n\n  return (\n    <Popup>\n      <StyledClose color={theme.text2} onClick={removeThisPopup} />\n      {popupContent}\n      {removeAfterMs !== null ? <AnimatedFader style={faderStyle} /> : null}\n    </Popup>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useActivePopups } from '../../state/application/hooks'\nimport { AutoColumn } from '../Column'\nimport PopupItem from './PopupItem'\nimport { useURLWarningVisible } from '../../state/user/hooks'\n\nconst MobilePopupWrapper = styled.div<{ height: string | number }>`\n  position: relative;\n  max-width: 100%;\n  height: ${({ height }) => height};\n  margin: ${({ height }) => (height ? '0 auto;' : 0)};\n  margin-bottom: ${({ height }) => (height ? '20px' : 0)}};\n\n  display: none;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: block;\n  `};\n`\n\nconst MobilePopupInner = styled.div`\n  height: 99%;\n  overflow-x: auto;\n  overflow-y: hidden;\n  display: flex;\n  flex-direction: row;\n  -webkit-overflow-scrolling: touch;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst FixedPopupColumn = styled(AutoColumn)<{ extraPadding: boolean }>`\n  position: fixed;\n  top: ${({ extraPadding }) => (extraPadding ? '108px' : '88px')};\n  right: 1rem;\n  max-width: 355px !important;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `};\n`\n\nexport default function Popups() {\n  // get all popups\n  const activePopups = useActivePopups()\n\n  const urlWarningActive = useURLWarningVisible()\n\n  return (\n    <>\n      <FixedPopupColumn gap=\"20px\" extraPadding={urlWarningActive}>\n        {activePopups.map((item) => (\n          <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\n        ))}\n      </FixedPopupColumn>\n      <MobilePopupWrapper height={activePopups?.length > 0 ? 'fit-content' : 0}>\n        <MobilePopupInner>\n          {activePopups // reverse so new items up front\n            .slice(0)\n            .reverse()\n            .map((item) => (\n              <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\n            ))}\n        </MobilePopupInner>\n      </MobilePopupWrapper>\n    </>\n  )\n}\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { parse } from 'qs'\nimport { AppDispatch } from '../state'\nimport { updateUserDarkMode } from '../state/user/actions'\n\nexport default function DarkModeQueryParamReader({ location: { search } }: RouteComponentProps): null {\n  const dispatch = useDispatch<AppDispatch>()\n\n  useEffect(() => {\n    if (!search) return\n    if (search.length < 2) return\n\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true,\n    })\n\n    const theme = parsed.theme\n\n    if (typeof theme !== 'string') return\n\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({ userDarkMode: false }))\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({ userDarkMode: true }))\n    }\n  }, [dispatch, search])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\n// modified from https://usehooks.com/usePrevious/\nexport default function usePrevious<T>(value: T) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef<T>()\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value\n  }, [value]) // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n}\n","import React, { useRef, useState, useEffect, useCallback, Dispatch, SetStateAction, ReactNode } from 'react'\nimport { createChart, IChartApi } from 'lightweight-charts'\nimport { darken } from 'polished'\nimport { RowBetween } from 'components/Row'\nimport Card from '../Card'\nimport styled from 'styled-components'\nimport useTheme from 'hooks/useTheme'\nimport usePrevious from 'hooks/usePrevious'\nimport { formatDollarAmount } from 'utils/numbers'\n\nconst Wrapper = styled(Card)`\n  width: 100%;\n  padding: 1rem;\n  display: flex;\n  background-color: ${({ theme }) => theme.bg0}\n  flex-direction: column;\n  > * {\n    font-size: 1rem;\n  }\n`\n\nconst DEFAULT_HEIGHT = 300\n\nexport type LineChartProps = {\n  data: any[]\n  color?: string | undefined\n  height?: number | undefined\n  minHeight?: number\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  topLeft?: ReactNode | undefined\n  topRight?: ReactNode | undefined\n  bottomLeft?: ReactNode | undefined\n  bottomRight?: ReactNode | undefined\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst LineChart = ({\n  data,\n  color = '#56B2A4',\n  setValue,\n  topLeft,\n  topRight,\n  bottomLeft,\n  bottomRight,\n  height = DEFAULT_HEIGHT,\n  minHeight = DEFAULT_HEIGHT,\n  ...rest\n}: LineChartProps) => {\n  // theming\n  const theme = useTheme()\n  const textColor = theme.text2\n\n  // chart pointer\n  const chartRef = useRef<HTMLDivElement>(null)\n  const [chartCreated, setChart] = useState<IChartApi | undefined>()\n  const dataPrev = usePrevious(data)\n\n  // reset on new data\n  useEffect(() => {\n    if (dataPrev !== data && chartCreated) {\n      chartCreated.resize(0, 0)\n      setChart(undefined)\n    }\n  }, [data, dataPrev, chartCreated])\n\n  // for reseting value on hover exit\n  const currentValue = data[data.length - 1]?.value\n\n  const handleResize = useCallback(() => {\n    if (chartCreated && chartRef?.current?.parentElement) {\n      chartCreated.resize(chartRef.current.parentElement.clientWidth - 32, height)\n      chartCreated.timeScale().fitContent()\n      chartCreated.timeScale().scrollToPosition(0, false)\n    }\n  }, [chartCreated, chartRef, height])\n\n  // add event listener for resize\n  const isClient = typeof window === 'object'\n  useEffect(() => {\n    if (!isClient) {\n      return\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, chartRef, handleResize]) // Empty array ensures that effect is only run on mount and unmount\n\n  // if chart not instantiated in canvas, create it\n  useEffect(() => {\n    if (!chartCreated && data && !!chartRef?.current?.parentElement) {\n      const chart = createChart(chartRef.current, {\n        height: height,\n        width: chartRef.current.parentElement.clientWidth - 32,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: textColor,\n          fontFamily: 'Inter var',\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: 0.1,\n            bottom: 0.1,\n          },\n          drawTicks: false,\n          borderVisible: false,\n        },\n        timeScale: {\n          borderVisible: false,\n        },\n        watermark: {\n          color: 'rgba(0, 0, 0, 0)',\n        },\n        grid: {\n          horzLines: {\n            visible: false,\n          },\n          vertLines: {\n            visible: false,\n          },\n        },\n        crosshair: {\n          horzLine: {\n            visible: true,\n            style: 3,\n            width: 1,\n            color: '#505050',\n            labelBackgroundColor: color,\n          },\n          vertLine: {\n            visible: true,\n            style: 3,\n            width: 1,\n            color: '#505050',\n            labelBackgroundColor: color,\n          },\n        },\n      })\n      chart.timeScale().fitContent()\n      setChart(chart)\n    }\n  }, [color, chartCreated, currentValue, data, height, setValue, textColor, theme])\n\n  useEffect(() => {\n    if (chartCreated && data) {\n      const series = chartCreated.addAreaSeries({\n        lineColor: color,\n        topColor: darken(0.3, color),\n        bottomColor: theme.bg0,\n        lineWidth: 2,\n        priceLineVisible: false,\n      })\n      series.setData(data)\n      chartCreated.timeScale().fitContent()\n      chartCreated.timeScale().scrollToRealTime()\n\n      series.applyOptions({\n        priceFormat: {\n          type: 'custom',\n          minMove: 0.02,\n          formatter: (price: any) => formatDollarAmount(price),\n        },\n      })\n\n      // update the title when hovering on the chart\n      chartCreated.subscribeCrosshairMove(function (param) {\n        if (\n          chartRef?.current &&\n          (param === undefined ||\n            param.time === undefined ||\n            (param && param.point && param.point.x < 0) ||\n            (param && param.point && param.point.x > chartRef.current.clientWidth) ||\n            (param && param.point && param.point.y < 0) ||\n            (param && param.point && param.point.y > height))\n        ) {\n          setValue && setValue(undefined)\n        } else if (series && param) {\n          const price = parseFloat(param?.seriesPrices?.get(series)?.toString() ?? currentValue)\n          setValue && setValue(price)\n        }\n      })\n    }\n  }, [chartCreated, color, currentValue, data, height, setValue, theme.bg0])\n\n  return (\n    <Wrapper minHeight={minHeight}>\n      <RowBetween>\n        {topLeft ?? null}\n        {topRight ?? null}\n      </RowBetween>\n      <div ref={chartRef} id={'line-chart'} {...rest} />\n      <RowBetween>\n        {bottomLeft ?? null}\n        {bottomRight ?? null}\n      </RowBetween>\n    </Wrapper>\n  )\n}\n\nexport default LineChart\n","import { ProtocolData } from './reducer'\nimport { createAction } from '@reduxjs/toolkit'\nimport { ChartDayData, Transaction } from 'types'\n\n// protocol wide info\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('protocol/updateProtocolData')\nexport const updateChartData = createAction<{ chartData: ChartDayData[] }>('protocol/updateChartData')\nexport const updateTransactions = createAction<{ transactions: Transaction[] }>('protocol/updateTransactions')\n","import { updateProtocolData, updateChartData, updateTransactions } from './actions'\nimport { AppState, AppDispatch } from './../index'\nimport { ProtocolData } from './reducer'\nimport { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ChartDayData, Transaction } from 'types'\n\nexport function useProtocolData(): [ProtocolData | undefined, (protocolData: ProtocolData) => void] {\n  const protocolData: ProtocolData | undefined = useSelector((state: AppState) => state.protocol.data)\n\n  const dispatch = useDispatch<AppDispatch>()\n  const setProtocolData: (protocolData: ProtocolData) => void = useCallback(\n    (protocolData: ProtocolData) => dispatch(updateProtocolData({ protocolData })),\n    [dispatch]\n  )\n\n  return [protocolData, setProtocolData]\n}\n\nexport function useProtocolChartData(): [ChartDayData[] | undefined, (chartData: ChartDayData[]) => void] {\n  const chartData: ChartDayData[] | undefined = useSelector((state: AppState) => state.protocol.chartData)\n  const dispatch = useDispatch<AppDispatch>()\n  const setChartData: (chartData: ChartDayData[]) => void = useCallback(\n    (chartData: ChartDayData[]) => dispatch(updateChartData({ chartData })),\n    [dispatch]\n  )\n  return [chartData, setChartData]\n}\n\nexport function useProtocolTransactions(): [Transaction[] | undefined, (transactions: Transaction[]) => void] {\n  const transactions: Transaction[] | undefined = useSelector((state: AppState) => state.protocol.transactions)\n  const dispatch = useDispatch<AppDispatch>()\n  const setTransactions: (transactions: Transaction[]) => void = useCallback(\n    (transactions: Transaction[]) => dispatch(updateTransactions({ transactions })),\n    [dispatch]\n  )\n  return [transactions, setTransactions]\n}\n","import React from 'react'\nimport { TYPE } from 'theme'\nimport styled from 'styled-components'\n\nconst Wrapper = styled(TYPE.main)<{ fontWeight: number; fontSize: string; negative: boolean; neutral: boolean }>`\n  font-size: ${({ fontSize }) => fontSize};\n  font-weight: ${({ fontWeight }) => fontWeight};\n  color: ${({ theme, negative, neutral }) => (negative ? theme.red1 : neutral ? theme.text1 : theme.green1)};\n`\n\nexport interface LogoProps {\n  value: number | undefined\n  decimals?: number\n  fontSize?: string\n  fontWeight?: number\n  wrap?: boolean\n  simple?: boolean\n}\n\nexport default function Percent({\n  value,\n  decimals = 2,\n  fontSize = '16px',\n  fontWeight = 500,\n  wrap = false,\n  simple = false,\n  ...rest\n}: LogoProps) {\n  if (value === undefined || value === null) {\n    return (\n      <TYPE.main fontWeight={fontWeight} fontSize={fontSize}>\n        -\n      </TYPE.main>\n    )\n  }\n\n  const truncated = parseFloat(value.toFixed(decimals))\n\n  if (simple) {\n    return (\n      <Wrapper {...rest} fontWeight={fontWeight} fontSize={fontSize} negative={false} neutral={true}>\n        {Math.abs(value).toFixed(decimals)}%\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper {...rest} fontWeight={fontWeight} fontSize={fontSize} negative={truncated < 0} neutral={truncated === 0}>\n      {wrap && '('}\n      {truncated < 0 && '↓'}\n      {truncated > 0 && '↑'}\n      {Math.abs(value).toFixed(decimals)}%{wrap && ')'}\n    </Wrapper>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/whitev3.a18e403e.svg\";","import React from 'react'\nimport v3 from '../../assets/images/whitev3.svg'\nimport styled, { keyframes, css } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.primary1};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function Loader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  60% { transform: scale(1.1); }\n  100% { transform: scale(1); }\n`\n\nconst Wrapper = styled.div<{ fill: number; height?: string }>`\n  pointer-events: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, fill }) => (fill ? 'black' : theme.bg0)};\n  height: 100%;\n  width: 100%;\n  ${(props) =>\n    props.fill && !props.height\n      ? css`\n          height: 100vh;\n        `\n      : css`\n          height: 180px;\n        `}\n`\n\nconst AnimatedImg = styled.div`\n  animation: ${pulse} 800ms linear infinite;\n  & > * {\n    width: 72px;\n  }\n`\n\nexport const LocalLoader = ({ fill }: { fill: boolean }) => {\n  return (\n    <Wrapper fill={fill ? 1 : 0}>\n      <AnimatedImg>\n        <img src={v3} alt=\"loading-icon\" />\n      </AnimatedImg>\n    </Wrapper>\n  )\n}\n\nconst loadingAnimation = keyframes`\n  0% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nexport const LoadingRows = styled.div`\n  display: grid;\n  min-width: 75%;\n  max-width: 100%;\n  grid-column-gap: 0.5em;\n  grid-row-gap: 0.8em;\n  grid-template-columns: repeat(3, 1fr);\n  & > div {\n    animation: ${loadingAnimation} 1.5s infinite;\n    animation-fill-mode: both;\n    background: linear-gradient(\n      to left,\n      ${({ theme }) => theme.bg1} 25%,\n      ${({ theme }) => theme.bg2} 50%,\n      ${({ theme }) => theme.bg1} 75%\n    );\n    background-size: 400%;\n    border-radius: 12px;\n    height: 2.4em;\n    will-change: background-position;\n  }\n  & > div:nth-child(4n + 1) {\n    grid-column: 1 / 3;\n  }\n  & > div:nth-child(4n) {\n    grid-column: 3 / 4;\n    margin-bottom: 2em;\n  }\n`\n","import styled from 'styled-components'\nimport { TYPE } from 'theme'\n\n// responsive text\nexport const Label = styled(TYPE.label)<{ end?: number }>`\n  display: flex;\n  font-size: 16px;\n  font-weight: 400;\n  justify-content: ${({ end }) => (end ? 'flex-end' : 'flex-start')};\n  align-items: center;\n  @media screen and (max-width: 640px) {\n    font-size: 14px;\n  }\n`\n\nexport const ClickableText = styled(Label)`\n  text-align: end;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  user-select: none;\n  @media screen and (max-width: 640px) {\n    font-size: 12px;\n  }\n`\n","import styled from 'styled-components'\n\nexport const PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0.2em;\n  margin-bottom: 0.5em;\n`\n\nexport const Arrow = styled.div<{ faded: boolean }>`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const Break = styled.div`\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg1};\n  width: 100%;\n`\n","import React, { useState, useMemo, useCallback, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ExtraSmallOnly, HideExtraSmall, TYPE } from 'theme'\nimport { DarkGreyCard } from 'components/Card'\nimport { TokenData } from '../../state/tokens/reducer'\nimport Loader, { LoadingRows } from 'components/Loader'\nimport { Link } from 'react-router-dom'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { RowFixed } from 'components/Row'\nimport { formatDollarAmount } from 'utils/numbers'\nimport Percent from 'components/Percent'\nimport { Label, ClickableText } from '../Text'\nimport { PageButtons, Arrow, Break } from 'components/shared'\nimport HoverInlineText from '../HoverInlineText'\nimport useTheme from 'hooks/useTheme'\nimport { TOKEN_HIDE } from '../../constants/index'\n\nconst Wrapper = styled(DarkGreyCard)`\n  width: 100%;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n\n  grid-template-columns: 20px 3fr repeat(4, 1fr);\n\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 1.5fr repeat(3, 1fr);\n    & :nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 20px 1.5fr repeat(2, 1fr);\n    & :nth-child(6) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 670px) {\n    grid-template-columns: repeat(2, 1fr);\n    > *:first-child {\n      display: none;\n    }\n    > *:nth-child(3) {\n      display: none;\n    }\n  }\n`\n\nconst LinkWrapper = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst ResponsiveLogo = styled(CurrencyLogo)`\n  @media screen and (max-width: 670px) {\n    width: 16px;\n    height: 16px;\n  }\n`\n\nconst DataRow = ({ tokenData, index }: { tokenData: TokenData; index: number }) => {\n  const theme = useTheme()\n  return (\n    <LinkWrapper to={'tokens/' + tokenData.address}>\n      <ResponsiveGrid>\n        <Label>{index + 1}</Label>\n        <Label>\n          <RowFixed>\n            <ResponsiveLogo address={tokenData.address} />\n          </RowFixed>\n          <ExtraSmallOnly style={{ marginLeft: '6px' }}>\n            <Label ml=\"8px\">{tokenData.symbol}</Label>\n          </ExtraSmallOnly>\n          <HideExtraSmall style={{ marginLeft: '10px' }}>\n            <RowFixed>\n              <HoverInlineText text={tokenData.name} />\n              <Label ml=\"8px\" color={theme.text3}>\n                ({tokenData.symbol})\n              </Label>\n            </RowFixed>\n          </HideExtraSmall>\n        </Label>\n        <Label end={1} fontWeight={400}>\n          {formatDollarAmount(tokenData.priceUSD)}\n        </Label>\n        <Label end={1} fontWeight={400}>\n          <Percent value={tokenData.priceUSDChange} fontWeight={400} />\n        </Label>\n        {/* <Label end={1} fontWeight={400}>\n          <Percent value={tokenData.priceUSDChangeWeek} fontWeight={400} />\n        </Label> */}\n        <Label end={1} fontWeight={400}>\n          {formatDollarAmount(tokenData.volumeUSD)}\n        </Label>\n        <Label end={1} fontWeight={400}>\n          {formatDollarAmount(tokenData.tvlUSD)}\n        </Label>\n      </ResponsiveGrid>\n    </LinkWrapper>\n  )\n}\n\nconst SORT_FIELD = {\n  name: 'name',\n  volumeUSD: 'volumeUSD',\n  tvlUSD: 'tvlUSD',\n  priceUSD: 'priceUSD',\n  priceUSDChange: 'priceUSDChange',\n  priceUSDChangeWeek: 'priceUSDChangeWeek',\n}\n\nconst MAX_ITEMS = 10\n\nexport default function TokenTable({\n  tokenDatas,\n  maxItems = MAX_ITEMS,\n}: {\n  tokenDatas: TokenData[] | undefined\n  maxItems?: number\n}) {\n  // theming\n  const theme = useTheme()\n\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.tvlUSD)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  useEffect(() => {\n    let extraPages = 1\n    if (tokenDatas) {\n      if (tokenDatas.length % maxItems === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(tokenDatas.length / maxItems) + extraPages)\n    }\n  }, [maxItems, tokenDatas])\n\n  const sortedTokens = useMemo(() => {\n    return tokenDatas\n      ? tokenDatas\n          .filter((x) => !!x && !TOKEN_HIDE.includes(x.address))\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof TokenData] > b[sortField as keyof TokenData]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            } else {\n              return -1\n            }\n          })\n          .slice(maxItems * (page - 1), page * maxItems)\n      : []\n  }, [tokenDatas, maxItems, page, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField]\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      return sortField === field ? (!sortDirection ? '↑' : '↓') : ''\n    },\n    [sortDirection, sortField]\n  )\n\n  if (!tokenDatas) {\n    return <Loader />\n  }\n\n  return (\n    <Wrapper>\n      {sortedTokens.length > 0 ? (\n        <AutoColumn gap=\"16px\">\n          <ResponsiveGrid>\n            <Label color={theme.text2}>#</Label>\n            <ClickableText color={theme.text2} onClick={() => handleSort(SORT_FIELD.name)}>\n              Name {arrow(SORT_FIELD.name)}\n            </ClickableText>\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.priceUSD)}>\n              Price {arrow(SORT_FIELD.priceUSD)}\n            </ClickableText>\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.priceUSDChange)}>\n              Price Change {arrow(SORT_FIELD.priceUSDChange)}\n            </ClickableText>\n            {/* <ClickableText end={1} onClick={() => handleSort(SORT_FIELD.priceUSDChangeWeek)}>\n            7d {arrow(SORT_FIELD.priceUSDChangeWeek)}\n          </ClickableText> */}\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.volumeUSD)}>\n              Volume 24H {arrow(SORT_FIELD.volumeUSD)}\n            </ClickableText>\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.tvlUSD)}>\n              TVL {arrow(SORT_FIELD.tvlUSD)}\n            </ClickableText>\n          </ResponsiveGrid>\n\n          <Break />\n          {sortedTokens.map((data, i) => {\n            if (data) {\n              return (\n                <React.Fragment key={i}>\n                  <DataRow index={(page - 1) * MAX_ITEMS + i} tokenData={data} />\n                  <Break />\n                </React.Fragment>\n              )\n            }\n            return null\n          })}\n          <PageButtons>\n            <div\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <Arrow faded={page === 1 ? true : false}>←</Arrow>\n            </div>\n            <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n            <div\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n            </div>\n          </PageButtons>\n        </AutoColumn>\n      ) : (\n        <LoadingRows>\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </LoadingRows>\n      )}\n    </Wrapper>\n  )\n}\n","import React, { useCallback, useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { TYPE } from 'theme'\nimport { DarkGreyCard, GreyBadge } from 'components/Card'\nimport Loader, { LoadingRows } from 'components/Loader'\nimport { AutoColumn } from 'components/Column'\nimport { RowFixed } from 'components/Row'\nimport { formatDollarAmount } from 'utils/numbers'\nimport { PoolData } from 'state/pools/reducer'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { feeTierPercent } from 'utils'\nimport { Label, ClickableText } from 'components/Text'\nimport { PageButtons, Arrow, Break } from 'components/shared'\nimport { POOL_HIDE } from '../../constants/index'\nimport useTheme from 'hooks/useTheme'\n\nconst Wrapper = styled(DarkGreyCard)`\n  width: 100%;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n\n  grid-template-columns: 20px 3.5fr repeat(3, 1fr);\n\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 1.5fr repeat(2, 1fr);\n    & :nth-child(3) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 20px 1.5fr repeat(1, 1fr);\n    & :nth-child(5) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 480px) {\n    grid-template-columns: 2.5fr repeat(1, 1fr);\n    > *:nth-child(1) {\n      display: none;\n    }\n  }\n`\n\nconst LinkWrapper = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst SORT_FIELD = {\n  feeTier: 'feeTier',\n  volumeUSD: 'volumeUSD',\n  tvlUSD: 'tvlUSD',\n  volumeUSDWeek: 'volumeUSDWeek',\n}\n\nconst DataRow = ({ poolData, index }: { poolData: PoolData; index: number }) => {\n  return (\n    <LinkWrapper to={'/pools/' + poolData.address}>\n      <ResponsiveGrid>\n        <Label fontWeight={400}>{index + 1}</Label>\n        <Label fontWeight={400}>\n          <RowFixed>\n            <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} />\n            <TYPE.label ml=\"8px\">\n              {poolData.token0.symbol}/{poolData.token1.symbol}\n            </TYPE.label>\n            <GreyBadge ml=\"10px\">{feeTierPercent(poolData.feeTier)}</GreyBadge>\n          </RowFixed>\n        </Label>\n        <Label end={1} fontWeight={400}>\n          {formatDollarAmount(poolData.volumeUSDWeek)}\n        </Label>\n        <Label end={1} fontWeight={400}>\n          {formatDollarAmount(poolData.volumeUSD)}\n        </Label>\n        <Label end={1} fontWeight={400}>\n          {formatDollarAmount(poolData.tvlUSD)}\n        </Label>\n      </ResponsiveGrid>\n    </LinkWrapper>\n  )\n}\n\nconst MAX_ITEMS = 10\n\nexport default function PoolTable({ poolDatas, maxItems = MAX_ITEMS }: { poolDatas: PoolData[]; maxItems?: number }) {\n  // theming\n  const theme = useTheme()\n\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.tvlUSD)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  useEffect(() => {\n    let extraPages = 1\n    if (poolDatas.length % maxItems === 0) {\n      extraPages = 0\n    }\n    setMaxPage(Math.floor(poolDatas.length / maxItems) + extraPages)\n  }, [maxItems, poolDatas])\n\n  const sortedPools = useMemo(() => {\n    return poolDatas\n      ? poolDatas\n          .filter((x) => !!x && !POOL_HIDE.includes(x.address))\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof PoolData] > b[sortField as keyof PoolData]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            } else {\n              return -1\n            }\n          })\n          .slice(maxItems * (page - 1), page * maxItems)\n      : []\n  }, [maxItems, page, poolDatas, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField]\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      return sortField === field ? (!sortDirection ? '↑' : '↓') : ''\n    },\n    [sortDirection, sortField]\n  )\n\n  if (!poolDatas) {\n    return <Loader />\n  }\n\n  return (\n    <Wrapper>\n      {sortedPools.length > 0 ? (\n        <AutoColumn gap=\"16px\">\n          <ResponsiveGrid>\n            <Label color={theme.text2}>#</Label>\n            <ClickableText color={theme.text2} onClick={() => handleSort(SORT_FIELD.feeTier)}>\n              Pool {arrow(SORT_FIELD.feeTier)}\n            </ClickableText>\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.volumeUSDWeek)}>\n              Volume 7D {arrow(SORT_FIELD.volumeUSDWeek)}\n            </ClickableText>\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.volumeUSD)}>\n              Volume 24H {arrow(SORT_FIELD.volumeUSD)}\n            </ClickableText>\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.tvlUSD)}>\n              TVL {arrow(SORT_FIELD.tvlUSD)}\n            </ClickableText>\n          </ResponsiveGrid>\n          <Break />\n          {sortedPools.map((poolData, i) => {\n            if (poolData) {\n              return (\n                <React.Fragment key={i}>\n                  <DataRow index={(page - 1) * MAX_ITEMS + i} poolData={poolData} />\n                  <Break />\n                </React.Fragment>\n              )\n            }\n            return null\n          })}\n          <PageButtons>\n            <div\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <Arrow faded={page === 1 ? true : false}>←</Arrow>\n            </div>\n            <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n            <div\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n            </div>\n          </PageButtons>\n        </AutoColumn>\n      ) : (\n        <LoadingRows>\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </LoadingRows>\n      )}\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components'\n\nexport const PageWrapper = styled.div`\n  width: 90%;\n`\n\nexport const ThemedBackground = styled.div<{ backgroundColor: string }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n  max-width: 100vw !important;\n  height: 200vh;\n  mix-blend-mode: color;\n  background: ${({ backgroundColor }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${backgroundColor} 0%, rgba(255, 255, 255, 0) 100%)`};\n  transform: translateY(-140vh);\n`\n\nexport const ThemedBackgroundGlobal = styled.div<{ backgroundColor: string }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n  max-width: 100vw !important;\n  height: 200vh;\n  mix-blend-mode: color;\n  background: ${({ backgroundColor }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${backgroundColor} 0%, rgba(255, 255, 255, 0) 100%)`};\n  transform: translateY(-150vh);\n`\n","import dayjs from 'dayjs'\n\nexport function unixToDate(unix: number, format = 'YYYY-MM-DD'): string {\n  return dayjs.unix(unix).format(format)\n}\n\nexport const formatTime = (unix: string) => {\n  const now = dayjs()\n  const timestamp = dayjs.unix(parseInt(unix))\n\n  const inSeconds = now.diff(timestamp, 'second')\n  const inMinutes = now.diff(timestamp, 'minute')\n  const inHours = now.diff(timestamp, 'hour')\n  const inDays = now.diff(timestamp, 'day')\n\n  if (inHours >= 24) {\n    return `${inDays} ${inDays === 1 ? 'day' : 'days'} ago`\n  } else if (inMinutes >= 60) {\n    return `${inHours} ${inHours === 1 ? 'hour' : 'hours'} ago`\n  } else if (inSeconds >= 60) {\n    return `${inMinutes} ${inMinutes === 1 ? 'minute' : 'minutes'} ago`\n  } else {\n    return `${inSeconds} ${inSeconds === 1 ? 'second' : 'seconds'} ago`\n  }\n}\n","import React, { useRef, useState, useEffect, useCallback, Dispatch, SetStateAction, ReactNode } from 'react'\nimport { createChart, IChartApi } from 'lightweight-charts'\nimport { RowBetween } from 'components/Row'\nimport Card from '../Card'\nimport styled from 'styled-components'\nimport useTheme from 'hooks/useTheme'\nimport usePrevious from 'hooks/usePrevious'\nimport { formatDollarAmount } from 'utils/numbers'\n\nconst Wrapper = styled(Card)`\n  width: 100%;\n  padding: 1rem;\n  display: flex;\n  background-color: ${({ theme }) => theme.bg0}\n  flex-direction: column;\n  > * {\n    font-size: 1rem;\n  }\n`\n\nconst DEFAULT_HEIGHT = 300\n\nexport type LineChartProps = {\n  data: any[]\n  color?: string | undefined\n  height?: number | undefined\n  minHeight?: number\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  topLeft?: ReactNode | undefined\n  topRight?: ReactNode | undefined\n  bottomLeft?: ReactNode | undefined\n  bottomRight?: ReactNode | undefined\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst BarChart = ({\n  data,\n  color = '#56B2A4',\n  setValue,\n  topLeft,\n  topRight,\n  bottomLeft,\n  bottomRight,\n  height = DEFAULT_HEIGHT,\n  minHeight = DEFAULT_HEIGHT,\n  ...rest\n}: LineChartProps) => {\n  const theme = useTheme()\n  const textColor = theme.text2\n  const chartRef = useRef<HTMLDivElement>(null)\n  const [chartCreated, setChart] = useState<IChartApi | undefined>()\n\n  const dataPrev = usePrevious(data)\n\n  // reset on new data\n  useEffect(() => {\n    if (dataPrev !== data && chartCreated) {\n      chartCreated.resize(0, 0)\n      setChart(undefined)\n    }\n  }, [data, dataPrev, chartCreated])\n\n  // for reseting value on hover exit\n  const currentValue = data[data.length - 1]?.value\n\n  const handleResize = useCallback(() => {\n    if (chartCreated && chartRef?.current?.parentElement) {\n      chartCreated.resize(chartRef.current.parentElement.clientWidth - 32, height)\n      chartCreated.timeScale().fitContent()\n      chartCreated.timeScale().scrollToPosition(0, false)\n    }\n  }, [chartCreated, chartRef, height])\n\n  // add event listener for resize\n  const isClient = typeof window === 'object'\n  useEffect(() => {\n    if (!isClient) {\n      return\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, chartRef, handleResize]) // Empty array ensures that effect is only run on mount and unmount\n\n  // // reset chart if data changed\n  // const prevData = usePrevious(data)\n  // useEffect(() => {\n  //   if (prevData !== undefined && data !== undefined && prevData !== data) {\n  //     setChart(undefined)\n  //   }\n  // }, [data, prevData])\n\n  // if chart not instantiated in canvas, create it\n  useEffect(() => {\n    if (!chartCreated && data && !!chartRef?.current?.parentElement) {\n      const chart = createChart(chartRef.current, {\n        height: height,\n        width: chartRef.current.parentElement.clientWidth - 32,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: textColor,\n          fontFamily: 'Inter var',\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: 0.1,\n            bottom: 0.1,\n          },\n          drawTicks: false,\n          borderVisible: false,\n        },\n        timeScale: {\n          borderVisible: false,\n        },\n        watermark: {\n          color: 'rgba(0, 0, 0, 0)',\n        },\n        grid: {\n          horzLines: {\n            visible: false,\n          },\n          vertLines: {\n            visible: false,\n          },\n        },\n        crosshair: {\n          horzLine: {\n            visible: true,\n            style: 3,\n            width: 1,\n            color: '#505050',\n            labelBackgroundColor: color,\n          },\n          vertLine: {\n            visible: true,\n            style: 3,\n            width: 1,\n            color: '#505050',\n            labelBackgroundColor: color,\n          },\n        },\n      })\n\n      chart.timeScale().fitContent()\n      setChart(chart)\n    }\n  }, [color, chartCreated, currentValue, data, height, setValue, textColor, theme])\n\n  useEffect(() => {\n    if (chartCreated && data) {\n      const series = chartCreated.addHistogramSeries({\n        color: color,\n      })\n\n      series.setData(data)\n      chartCreated.timeScale().fitContent()\n\n      series.applyOptions({\n        priceFormat: {\n          type: 'custom',\n          minMove: 0.02,\n          formatter: (price: any) => formatDollarAmount(price),\n        },\n      })\n\n      // update the title when hovering on the chart\n      chartCreated.subscribeCrosshairMove(function (param) {\n        if (\n          chartRef?.current &&\n          (param === undefined ||\n            param.time === undefined ||\n            (param && param.point && param.point.x < 0) ||\n            (param && param.point && param.point.x > chartRef.current.clientWidth) ||\n            (param && param.point && param.point.y < 0) ||\n            (param && param.point && param.point.y > height))\n        ) {\n          setValue && setValue(undefined)\n        } else if (series && param) {\n          const price = parseFloat(param?.seriesPrices?.get(series)?.toString() ?? currentValue)\n          setValue && setValue(price)\n        }\n      })\n    }\n  }, [chartCreated, color, currentValue, data, height, setValue, theme.bg0])\n\n  return (\n    <Wrapper minHeight={minHeight}>\n      <RowBetween>\n        {topLeft ?? null}\n        {topRight ?? null}\n      </RowBetween>\n      <div ref={chartRef} id={'line-chart'} {...rest} />\n      <RowBetween>\n        {bottomLeft ?? null}\n        {bottomRight ?? null}\n      </RowBetween>\n    </Wrapper>\n  )\n}\n\nexport default BarChart\n","import React, { useCallback, useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { DarkGreyCard } from 'components/Card'\nimport Loader from 'components/Loader'\nimport { AutoColumn } from 'components/Column'\nimport { formatDollarAmount, formatAmount } from 'utils/numbers'\nimport { shortenAddress, getEtherscanLink } from 'utils'\nimport { Label, ClickableText } from 'components/Text'\nimport { Transaction, TransactionType } from 'types'\nimport { formatTime } from 'utils/date'\nimport { RowFixed } from 'components/Row'\nimport { ExternalLink, TYPE } from 'theme'\nimport { PageButtons, Arrow, Break } from 'components/shared'\nimport useTheme from 'hooks/useTheme'\nimport HoverInlineText from 'components/HoverInlineText'\n\nconst Wrapper = styled(DarkGreyCard)`\n  width: 100%;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n\n  grid-template-columns: 1.5fr repeat(5, 1fr);\n\n  @media screen and (max-width: 940px) {\n    grid-template-columns: 1.5fr repeat(4, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1.5fr repeat(2, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n    & > *:nth-child(3) {\n      display: none;\n    }\n    & > *:nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1.5fr repeat(1, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n    & > *:nth-child(3) {\n      display: none;\n    }\n    & > *:nth-child(4) {\n      display: none;\n    }\n    & > *:nth-child(2) {\n      display: none;\n    }\n  }\n`\n\nconst SortText = styled.button<{ active: boolean }>`\n  cursor: pointer;\n  font-weight: ${({ active }) => (active ? 500 : 400)};\n  margin-right: 0.75rem !important;\n  border: none;\n  background-color: transparent;\n  font-size: 1rem;\n  padding: 0px;\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text3)};\n  outline: none;\n  @media screen and (max-width: 600px) {\n    font-size: 14px;\n  }\n`\n\nconst SORT_FIELD = {\n  amountUSD: 'amountUSD',\n  timestamp: 'timestamp',\n  sender: 'sender',\n  amountToken0: 'amountToken0',\n  amountToken1: 'amountToken1',\n}\n\nconst DataRow = ({ transaction, color }: { transaction: Transaction; color?: string }) => {\n  const abs0 = Math.abs(transaction.amountToken0)\n  const abs1 = Math.abs(transaction.amountToken1)\n  const outputTokenSymbol = transaction.amountToken0 < 0 ? transaction.token0Symbol : transaction.token1Symbol\n  const inputTokenSymbol = transaction.amountToken1 < 0 ? transaction.token0Symbol : transaction.token1Symbol\n\n  const theme = useTheme()\n\n  return (\n    <ResponsiveGrid>\n      <ExternalLink href={getEtherscanLink(1, transaction.hash, 'transaction')}>\n        <Label color={color ?? theme.blue1} fontWeight={400}>\n          {transaction.type === TransactionType.MINT\n            ? `Add ${transaction.token0Symbol} and ${transaction.token1Symbol}`\n            : transaction.type === TransactionType.SWAP\n            ? `Swap ${inputTokenSymbol} for ${outputTokenSymbol}`\n            : `Remove ${transaction.token0Symbol} and ${transaction.token1Symbol}`}\n        </Label>\n      </ExternalLink>\n      <Label end={1} fontWeight={400}>\n        {formatDollarAmount(transaction.amountUSD)}\n      </Label>\n      <Label end={1} fontWeight={400}>\n        <HoverInlineText text={`${formatAmount(abs0)}  ${transaction.token0Symbol}`} maxCharacters={16} />\n      </Label>\n      <Label end={1} fontWeight={400}>\n        <HoverInlineText text={`${formatAmount(abs1)}  ${transaction.token1Symbol}`} maxCharacters={16} />\n      </Label>\n      <Label end={1} fontWeight={400}>\n        <ExternalLink href={getEtherscanLink(1, transaction.sender, 'address')} style={{ color: color ?? theme.blue1 }}>\n          {shortenAddress(transaction.sender)}\n        </ExternalLink>\n      </Label>\n      <Label end={1} fontWeight={400}>\n        {formatTime(transaction.timestamp)}\n      </Label>\n    </ResponsiveGrid>\n  )\n}\n\nexport default function TransactionTable({\n  transactions,\n  maxItems = 10,\n  color,\n}: {\n  transactions: Transaction[]\n  maxItems?: number\n  color?: string\n}) {\n  // theming\n  const theme = useTheme()\n\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.timestamp)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  useEffect(() => {\n    let extraPages = 1\n    if (transactions.length % maxItems === 0) {\n      extraPages = 0\n    }\n    setMaxPage(Math.floor(transactions.length / maxItems) + extraPages)\n  }, [maxItems, transactions])\n\n  // filter on txn type\n  const [txFilter, setTxFilter] = useState<TransactionType | undefined>(undefined)\n\n  const sortedTransactions = useMemo(() => {\n    return transactions\n      ? transactions\n          .slice()\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof Transaction] > b[sortField as keyof Transaction]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            } else {\n              return -1\n            }\n          })\n          .filter((x) => {\n            return txFilter === undefined || x.type === txFilter\n          })\n          .slice(maxItems * (page - 1), page * maxItems)\n      : []\n  }, [transactions, maxItems, page, sortField, sortDirection, txFilter])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField]\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      return sortField === field ? (!sortDirection ? '↑' : '↓') : ''\n    },\n    [sortDirection, sortField]\n  )\n\n  if (!transactions) {\n    return <Loader />\n  }\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"16px\">\n        <ResponsiveGrid>\n          <RowFixed>\n            <SortText\n              onClick={() => {\n                setTxFilter(undefined)\n              }}\n              active={txFilter === undefined}\n            >\n              All\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TransactionType.SWAP)\n              }}\n              active={txFilter === TransactionType.SWAP}\n            >\n              Swaps\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TransactionType.MINT)\n              }}\n              active={txFilter === TransactionType.MINT}\n            >\n              Adds\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TransactionType.BURN)\n              }}\n              active={txFilter === TransactionType.BURN}\n            >\n              Removes\n            </SortText>\n          </RowFixed>\n          <ClickableText color={theme.text2} onClick={() => handleSort(SORT_FIELD.amountUSD)} end={1}>\n            Total Value {arrow(SORT_FIELD.amountUSD)}\n          </ClickableText>\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.amountToken0)}>\n            Token Amount {arrow(SORT_FIELD.amountToken0)}\n          </ClickableText>\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.amountToken1)}>\n            Token Amount {arrow(SORT_FIELD.amountToken1)}\n          </ClickableText>\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.sender)}>\n            Account {arrow(SORT_FIELD.sender)}\n          </ClickableText>\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.timestamp)}>\n            Time {arrow(SORT_FIELD.timestamp)}\n          </ClickableText>\n        </ResponsiveGrid>\n        <Break />\n\n        {sortedTransactions.map((t, i) => {\n          if (t) {\n            return (\n              <React.Fragment key={i}>\n                <DataRow transaction={t} color={color} />\n                <Break />\n              </React.Fragment>\n            )\n          }\n          return null\n        })}\n        {sortedTransactions.length === 0 ? <TYPE.main>No Transactions</TYPE.main> : undefined}\n        <PageButtons>\n          <div\n            onClick={() => {\n              setPage(page === 1 ? page : page - 1)\n            }}\n          >\n            <Arrow faded={page === 1 ? true : false}>←</Arrow>\n          </div>\n          <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n          <div\n            onClick={() => {\n              setPage(page === maxPage ? page : page + 1)\n            }}\n          >\n            <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n          </div>\n        </PageButtons>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { AutoColumn } from 'components/Column'\nimport { TYPE } from 'theme'\nimport { ResponsiveRow, RowBetween, RowFixed } from 'components/Row'\nimport LineChart from 'components/LineChart'\nimport useTheme from 'hooks/useTheme'\nimport { useProtocolData, useProtocolChartData, useProtocolTransactions } from 'state/protocol/hooks'\nimport { DarkGreyCard } from 'components/Card'\nimport { formatDollarAmount } from 'utils/numbers'\nimport Percent from 'components/Percent'\nimport { HideMedium, HideSmall, StyledInternalLink } from '../../theme/components'\nimport TokenTable from 'components/tokens/TokenTable'\nimport PoolTable from 'components/pools/PoolTable'\nimport { PageWrapper, ThemedBackgroundGlobal } from 'pages/styled'\nimport { unixToDate } from 'utils/date'\nimport BarChart from 'components/BarChart'\nimport { useAllPoolData } from 'state/pools/hooks'\nimport { notEmpty } from 'utils'\nimport TransactionsTable from '../../components/TransactionsTable'\nimport { useAllTokenData } from 'state/tokens/hooks'\n\nconst ChartWrapper = styled.div`\n  width: 49%;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 100%;\n  `};\n`\n\nexport default function Home() {\n  const theme = useTheme()\n\n  const [protocolData] = useProtocolData()\n  const [chartData] = useProtocolChartData()\n  const [transactions] = useProtocolTransactions()\n\n  const [volumeHover, setVolumeHover] = useState<number | undefined>()\n  const [liquidityHover, setLiquidityHover] = useState<number | undefined>()\n\n  // get all the pool datas that exist\n  const allPoolData = useAllPoolData()\n  const poolDatas = useMemo(() => {\n    return Object.values(allPoolData)\n      .map((p) => p.data)\n      .filter(notEmpty)\n  }, [allPoolData])\n\n  // if hover value undefined, reset to current day value\n  useEffect(() => {\n    if (!volumeHover && protocolData) {\n      setVolumeHover(protocolData.volumeUSD)\n    }\n  }, [protocolData, volumeHover])\n  useEffect(() => {\n    if (!liquidityHover && protocolData) {\n      setLiquidityHover(protocolData.tvlUSD)\n    }\n  }, [liquidityHover, protocolData])\n\n  const formattedTvlData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: unixToDate(day.date),\n          value: day.tvlUSD,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [chartData])\n\n  const formattedVolumeData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: unixToDate(day.date),\n          value: day.volumeUSD,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [chartData])\n\n  const allTokens = useAllTokenData()\n\n  const formattedTokens = useMemo(() => {\n    return Object.values(allTokens)\n      .map((t) => t.data)\n      .filter(notEmpty)\n  }, [allTokens])\n\n  return (\n    <PageWrapper>\n      <ThemedBackgroundGlobal backgroundColor={'#fc077d'} />\n      <AutoColumn gap=\"16px\">\n        <TYPE.main>Uniswap Overview</TYPE.main>\n        <ResponsiveRow>\n          <ChartWrapper>\n            <LineChart\n              data={formattedTvlData}\n              height={220}\n              minHeight={332}\n              color={theme.pink1}\n              setValue={setLiquidityHover}\n              topLeft={\n                <AutoColumn gap=\"md\">\n                  <TYPE.mediumHeader fontSize=\"16px\">TVL</TYPE.mediumHeader>\n                  <TYPE.largeHeader fontSize=\"32px\">{formatDollarAmount(liquidityHover, 2, true)}</TYPE.largeHeader>\n                </AutoColumn>\n              }\n            />\n          </ChartWrapper>\n          <ChartWrapper>\n            <BarChart\n              height={220}\n              minHeight={332}\n              data={formattedVolumeData}\n              color={theme.blue1}\n              setValue={setVolumeHover}\n              topLeft={\n                <AutoColumn gap=\"md\">\n                  <TYPE.mediumHeader fontSize=\"16px\">Volume 24H</TYPE.mediumHeader>\n                  <TYPE.largeHeader fontSize=\"32px\">{formatDollarAmount(volumeHover, 2, true)}</TYPE.largeHeader>\n                </AutoColumn>\n              }\n            />\n          </ChartWrapper>\n        </ResponsiveRow>\n        <HideSmall>\n          <DarkGreyCard>\n            <RowBetween>\n              <RowFixed>\n                <RowFixed mr=\"20px\">\n                  <TYPE.main mr=\"4px\">Volume 24H: </TYPE.main>\n                  <TYPE.label mr=\"4px\">{formatDollarAmount(protocolData?.volumeUSD)}</TYPE.label>\n                  <Percent value={protocolData?.volumeUSDChange} wrap={true} />\n                </RowFixed>\n                <RowFixed mr=\"20px\">\n                  <TYPE.main mr=\"4px\">Transactions 24H: </TYPE.main>\n                  <TYPE.label mr=\"4px\">{protocolData?.txCount?.toLocaleString()}</TYPE.label>\n                  <Percent value={protocolData?.txCountChange} wrap={true} />\n                </RowFixed>\n                <HideMedium>\n                  <RowFixed mr=\"20px\">\n                    <TYPE.main mr=\"4px\">TVL: </TYPE.main>\n                    <TYPE.label mr=\"4px\">{formatDollarAmount(protocolData?.tvlUSD)}</TYPE.label>\n                    <Percent value={protocolData?.tvlUSDChange} wrap={true} />\n                  </RowFixed>\n                </HideMedium>\n              </RowFixed>\n            </RowBetween>\n          </DarkGreyCard>\n        </HideSmall>\n        <RowBetween>\n          <TYPE.main>Top Tokens</TYPE.main>\n          <StyledInternalLink to=\"/tokens\">Explore</StyledInternalLink>\n        </RowBetween>\n        {/* <OutlineCard>\n          <AutoColumn gap=\"lg\">\n            <TYPE.mediumHeader>Top Movers</TYPE.mediumHeader>\n            <TopTokenMovers />\n          </AutoColumn>\n        </OutlineCard> */}\n        <TokenTable tokenDatas={formattedTokens} />\n        <RowBetween>\n          <TYPE.main>Top Pools</TYPE.main>\n          <StyledInternalLink to=\"/pools\">Explore</StyledInternalLink>\n        </RowBetween>\n        {/* <OutlineCard>\n          <AutoColumn gap=\"lg\">\n            <TYPE.mediumHeader>Top Movers</TYPE.mediumHeader>\n            <TopPoolMovers />\n          </AutoColumn>\n        </OutlineCard> */}\n        <PoolTable poolDatas={poolDatas} />\n        <RowBetween>\n          <TYPE.main>Transactions</TYPE.main>\n        </RowBetween>\n        {transactions ? <TransactionsTable transactions={transactions} /> : null}\n      </AutoColumn>\n    </PageWrapper>\n  )\n}\n","import React from 'react'\n\nexport default function Protocol() {\n  return <div></div>\n}\n","import React, { useMemo } from 'react'\nimport { PageWrapper } from 'pages/styled'\nimport { AutoColumn } from 'components/Column'\nimport { TYPE } from 'theme'\nimport PoolTable from 'components/pools/PoolTable'\nimport { useAllPoolData, usePoolDatas } from 'state/pools/hooks'\nimport { notEmpty } from 'utils'\nimport { useSavedPools } from 'state/user/hooks'\nimport { DarkGreyCard } from 'components/Card'\n\nexport default function PoolPage() {\n  // get all the pool datas that exist\n  const allPoolData = useAllPoolData()\n  const poolDatas = useMemo(() => {\n    return Object.values(allPoolData)\n      .map((p) => p.data)\n      .filter(notEmpty)\n  }, [allPoolData])\n\n  const [savedPools] = useSavedPools()\n  const watchlistPools = usePoolDatas(savedPools)\n\n  return (\n    <PageWrapper>\n      <AutoColumn gap=\"lg\">\n        <TYPE.main>Your Watchlist</TYPE.main>\n        {watchlistPools.length > 0 ? (\n          <PoolTable poolDatas={watchlistPools} />\n        ) : (\n          <DarkGreyCard>\n            <TYPE.main>Saved pools will appear here</TYPE.main>\n          </DarkGreyCard>\n        )}\n        <TYPE.main>All Pools</TYPE.main>\n        <PoolTable poolDatas={poolDatas} />\n      </AutoColumn>\n    </PageWrapper>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { PageWrapper } from 'pages/styled'\nimport { AutoColumn } from 'components/Column'\nimport { TYPE } from 'theme'\nimport TokenTable from 'components/tokens/TokenTable'\nimport { useAllTokenData, useTokenDatas } from 'state/tokens/hooks'\nimport { notEmpty } from 'utils'\nimport { useSavedTokens } from 'state/user/hooks'\nimport { DarkGreyCard } from 'components/Card'\n\nexport default function TokensOverview() {\n  const allTokens = useAllTokenData()\n\n  const formattedTokens = useMemo(() => {\n    return Object.values(allTokens)\n      .map((t) => t.data)\n      .filter(notEmpty)\n  }, [allTokens])\n\n  const [savedTokens] = useSavedTokens()\n  const watchListTokens = useTokenDatas(savedTokens)\n\n  console.log('formattedTokens', formattedTokens)\n\n  return (\n    <PageWrapper>\n      <AutoColumn gap=\"lg\">\n        <TYPE.main>Your Watchlist</TYPE.main>\n        {savedTokens.length > 0 ? (\n          <TokenTable tokenDatas={watchListTokens} />\n        ) : (\n          <DarkGreyCard>\n            <TYPE.main>Saved tokens will appear here</TYPE.main>\n          </DarkGreyCard>\n        )}\n        <TYPE.main>All Tokens</TYPE.main>\n        <TokenTable tokenDatas={formattedTokens} />\n      </AutoColumn>\n    </PageWrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween, RowFixed, AutoRow } from 'components/Row'\nimport { TYPE, ExternalLink } from 'theme'\nimport { useEthPrices } from 'hooks/useEthPrices'\nimport { formatDollarAmount } from 'utils/numbers'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.black};\n  padding: 10px 20px;\n`\n\nconst Item = styled(TYPE.main)`\n  font-size: 12px;\n`\n\nconst StyledLink = styled(ExternalLink)`\n  font-size: 12px;\n  color: ${({ theme }) => theme.text1};\n`\n\nconst TopBar = () => {\n  const ethPrices = useEthPrices()\n  return (\n    <Wrapper>\n      <RowBetween>\n        <AutoRow gap=\"6px\">\n          <RowFixed>\n            <Item>ETH Price:</Item>\n            <Item fontWeight=\"700\" ml=\"4px\">\n              {formatDollarAmount(ethPrices?.current)}\n            </Item>\n          </RowFixed>\n        </AutoRow>\n        <AutoRow gap=\"6px\" style={{ justifyContent: 'flex-end' }}>\n          <StyledLink href=\"https://v2.info.uniswap.org/#/\">V2 Analytics</StyledLink>\n          <StyledLink href=\"https://docs.uniswap.org/\">Docs</StyledLink>\n          <StyledLink href=\"https://app.uniswap.org/#/swap\">App</StyledLink>\n        </AutoRow>\n      </RowBetween>\n    </Wrapper>\n  )\n}\n\nexport default TopBar\n","import React, { useState } from 'react'\nimport { UnmountClosed } from 'react-collapse'\nimport styled from 'styled-components'\nimport './index.css'\n\nconst Header = styled.div<{ roundedBottom: boolean }>`\n  cursor: pointer;\n`\n\nconst Content = styled.div``\n\ninterface Props {\n  isOpenedDefault?: boolean\n  header: React.ReactNode\n  collapseBody: React.ReactNode\n  onChange?: any\n}\n\nexport default function CollapsibleContainer({ isOpenedDefault = false, collapseBody, header, onChange }: Props) {\n  const [isOpened, setIsOpened] = useState(isOpenedDefault)\n  return (\n    <div>\n      <Header\n        className=\"config\"\n        roundedBottom={!isOpened}\n        onClick={() => {\n          setIsOpened(!isOpened)\n          onChange(!isOpened)\n        }}\n      >\n        {header}\n      </Header>\n\n      <UnmountClosed isOpened={isOpened}>\n        <Content className=\"text\">{collapseBody}</Content>\n      </UnmountClosed>\n    </div>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Circle = styled.div<Props>`\n  display: inline-flex;\n  margin-left: ${(props) => props.marginLeft}px;\n  margin-right: ${(props) => props.marginRight}px;\n  color: ${(props) => props.color};\n  font-size: ${(props) => props.size}px;\n`\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  size?: number\n  color?: string\n  marginLeft?: number\n  marginRight?: number\n}\n\nexport default function InlineCircle({ size = 16, color = 'black', marginLeft = 0, marginRight = 0 }: Props) {\n  return (\n    <Circle size={size} color={color} marginLeft={marginLeft} marginRight={marginRight}>\n      &bull;\n    </Circle>\n  )\n}\n","export function getFirstTwoNonZeroDecimals(value: number) {\n  const log10 = value ? Math.floor(Math.log10(value)) : 0\n  const div = log10 < 0 ? 10 ** (1 - log10) : 100\n\n  return Math.round(value * div) / div\n}\n\nexport function roundToNDecimals(value: number, nDecimals: number) {\n  const coeff = 10 ** nDecimals\n  return Math.round(value * coeff) / coeff\n}\n\nexport function getAverageDailyRewards(timeStampStartMillis: number, timeStampEndMillis: number, totalReward: number) {\n  if (totalReward === 0) return 0\n  const differenceMillis = timeStampEndMillis - timeStampStartMillis\n  const differenceDays = differenceMillis / (3600 * 24 * 1000)\n  return totalReward / differenceDays\n}\n\nexport function getTokenArrayValue(tokenBalances: number[], tokenPrices: number[]) {\n  if (tokenBalances.length !== tokenPrices.length) {\n    throw new Error('Arrays have to have the same length')\n  }\n\n  let sum = 0\n  for (let i = 0; i < tokenBalances.length; i++) {\n    sum += tokenBalances[i] * tokenPrices[i]\n  }\n  return sum\n}\n\nexport function sumArr(arr: number[]): number {\n  // default value is 0\n  return arr.reduce((a, b) => a + b, 0)\n}\n\nexport function multiplyArraysElementWise(arr1: number[], arr2: number[]): number[] {\n  // TODO make sure both arrays are the same length\n  const result: number[] = new Array(arr1.length)\n\n  arr1.forEach((num, i) => {\n    result[i] = arr1[i] * arr2[i]\n  })\n\n  return result\n}\n\nexport function getArrayAverage(arr: number[]): number {\n  const arraySum = sumArr(arr)\n\n  return arraySum / arr.length\n}\n\nexport function divideArraysElementWise(arr1: number[], arr2: number[]): number[] {\n  if (arr1.length !== arr2.length) {\n    throw new Error('Arrays have to have the same length')\n  }\n\n  const result = new Array(arr1.length)\n\n  arr1.forEach((num, i) => {\n    if (arr2[i] === 0) {\n      result[i] = Infinity\n    } else {\n      result[i] = arr1[i] / arr2[i]\n    }\n  })\n\n  return result\n}\n\nexport function sumArraysElementWise(arr1: number[], arr2: number[]): number[] {\n  if (arr1.length !== arr2.length) {\n    throw new Error('Arrays have to have the same length')\n  }\n  const result: number[] = new Array(arr1.length)\n\n  arr1.forEach((num, i) => {\n    result[i] = arr1[i] + arr2[i]\n  })\n\n  return result\n}\n\nexport function subtractArraysElementWise(arr1: number[], arr2: number[]): number[] {\n  if (arr1.length !== arr2.length) {\n    throw new Error('Arrays have to have the same length')\n  }\n  const result: number[] = new Array(arr1.length)\n\n  arr1.forEach((num, i) => {\n    result[i] = arr1[i] - arr2[i]\n  })\n\n  return result\n}\n\nexport function divideEachArrayElementByValue(arr: number[], value: number) {\n  const modifiedArr = new Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    modifiedArr[i] = arr[i] / value\n  }\n\n  return modifiedArr\n}\n\nexport function multiplyEachArrayElementByValue(arr: number[], value: number) {\n  const modifiedArr = new Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    modifiedArr[i] = arr[i] * value\n  }\n\n  return modifiedArr\n}\n\nexport function sumArrayOfTokenArrays(tokenArr: Array<Array<number>>) {\n  const tokenCount = tokenArr[0].length\n  let tokenAmountsSum = new Array(tokenCount).fill(0)\n\n  tokenArr.forEach((arr) => {\n    tokenAmountsSum = sumArraysElementWise(tokenAmountsSum, arr)\n  })\n\n  return tokenAmountsSum\n}\n\nexport function arraysContainEqualElements(_arr1: string[], _arr2: string[]) {\n  if (!Array.isArray(_arr1) || !Array.isArray(_arr2) || _arr1.length !== _arr2.length) {\n    return false\n  }\n\n  const arr1 = _arr1.concat().sort()\n  const arr2 = _arr2.concat().sort()\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n","import { formatAmount } from 'utils/numbers'\nimport { roundToNDecimals } from 'utils/math'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst rightAlignedStyles = css`\n  text-align: right;\n  justify-self: flex-end;\n`\n\nconst leftAlignedStyles = css`\n  text-align: left;\n  align-items: baseline;\n`\n\nconst Wrapper = styled.div<{\n  textAlign: 'left' | 'right'\n  maxHeight: number\n  reversedOrder: boolean\n}>`\n  display: flex;\n  flex-direction: ${(props) => (props.reversedOrder ? 'column-reverse' : 'column')};\n  font-size: 12px;\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n  color: ${({ theme }) => theme.text3};\n  letter-spacing: 0.3px;\n  overflow-y: auto;\n  max-height: ${(props) => props.maxHeight}px;\n\n  /* content alignment styles */\n  ${(props) => (props.textAlign === 'left' ? leftAlignedStyles : rightAlignedStyles)}/* justify-content: center; */\n`\n\nconst Row = styled.div`\n  margin: 2px 0;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`\n\nconst Amount = styled.div``\n\nconst Symbol = styled.div<{ maxWidth: number }>`\n  max-width: ${(props) => props.maxWidth}px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-left: 5px;\n`\n\ninterface Props {\n  tokenSymbols: Array<string>\n  tokenAmounts: Array<number>\n  textAlign?: 'left' | 'right'\n  usePlusSymbol?: boolean\n  maxWidth?: number\n  maxHeight?: number\n  reversedOrder?: boolean\n  roundToDecimals?: number\n}\n\nexport default function VerticalCryptoAmounts({\n  tokenSymbols,\n  tokenAmounts,\n  textAlign = 'right',\n  usePlusSymbol = false,\n  maxWidth = 100,\n  maxHeight = 160,\n  reversedOrder = false,\n  roundToDecimals = 2,\n}: Props) {\n  const tokenSymbolsRendered = tokenSymbols\n\n  // if the user passed just one symbol/amount, convert that number to array so that I can loop through it\n  // if (!Array.isArray(props.tokenSymbols)) {\n  //     tokenSymbolsRendered = [props.tokenSymbols];\n  // } else {\n  //     tokenSymbolsRendered = props.tokenSymbols;\n  // }\n\n  // if (!Array.isArray(props.tokenAmounts)) {\n  //     tokenAmountsRendered = [props.tokenAmounts];\n  // } else {\n  //     tokenAmountsRendered = props.tokenAmounts;\n  // }\n\n  return (\n    <Wrapper textAlign={textAlign} maxHeight={maxHeight} reversedOrder={reversedOrder}>\n      {tokenSymbolsRendered.map((symbol, i) => (\n        <Row key={symbol}>\n          <Amount>\n            {roundToNDecimals(tokenAmounts[i], roundToDecimals) > 0 && usePlusSymbol ? '+' : null}\n            {formatAmount(tokenAmounts[i], 2, true)}\n          </Amount>{' '}\n          <Symbol maxWidth={maxWidth}>{symbol}</Symbol>\n        </Row>\n      ))}\n    </Wrapper>\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { SimulatorState } from './reducer'\n\ntype SetNewDataType = Pick<\n  SimulatorState,\n  | 'poolId'\n  | 'tokenSymbols'\n  | 'tokenAddresses'\n  | 'tokenWeights'\n  | 'currentTokenPricesUsd'\n  | 'poolTokenReserves'\n  | 'swapFee'\n  | 'volume24Usd'\n>\n\nexport const setNewSimulationPoolData = createAction<SetNewDataType>('simulator/setNewSimulationPoolData')\nexport const resetSimulationCoefficients = createAction('simulator/resetSimulationCoefficients')\nexport const setSimulatedPriceCoefficients = createAction<{ newValue: number; index: number }>(\n  'simulator/setSimulatedPriceCoefficients'\n)\nexport const setDefaultSliderPriceCoefficient = createAction<{ newValue: number; index: number }>(\n  'simulator/setDefaultSliderPriceCoefficient'\n)\nexport const setPositionMinPrice = createAction<{ price: number; positionIndex: number }>(\n  'simulator/setPositionMinPrice'\n)\nexport const setPositionMaxPrice = createAction<{ price: number; positionIndex: number }>(\n  'simulator/setPositionMaxPrice'\n)\nexport const switchPriceRatioOrder = createAction('simulator/switchPriceRatioOrder')\nexport const toggleInfiniteRange = createAction<{ positionIndex: number }>('simulator/toggleInfiniteRange')\nexport const setPositionInvestedAmount = createAction<{ value: number; positionIndex: number }>(\n  'simulator/setPositionInvestedAmount'\n)\nexport const addPosition = createAction('simulator/addPosition')\nexport const removePosition = createAction<{ positionIndex: number }>('simulator/removePosition')\n","import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppDispatch, AppState } from './../index'\nimport { switchPriceRatioOrder, toggleInfiniteRange } from './actions'\nimport { SimulatorState } from './reducer'\n\nexport function useAllSimulatorData(): SimulatorState {\n  return useSelector((state: AppState) => state.simulator)\n}\n\nexport function useSwitchPriceRatioOrder() {\n  console.log('useSwitchPriceRatioOrder')\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(switchPriceRatioOrder()), [dispatch])\n}\n\nexport function useToggleInfiniteRange(positionIndex: number) {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(toggleInfiniteRange({ positionIndex })), [dispatch])\n}\n","import { getTokenArrayValue } from 'utils/math'\nimport { Position } from 'state/simulator/reducer'\n\n// compute relative impermanent loss from known current and HOLD value\nfunction getRelativeImpLoss(poolValue: number, holdValue: number) {\n  return 1 - poolValue / holdValue\n}\n\n// compute impermanent loss in relative and absolute terms\nfunction getRelativeAndAbsoluteImpLoss(\n  tokenReservesCurrentPrice: number[],\n  tokenReservesSimulatedPrice: number[],\n  simulatedTokenPricesUsd: number[]\n) {\n  const holdValue = getTokenArrayValue(tokenReservesCurrentPrice, simulatedTokenPricesUsd)\n  const poolValue = getTokenArrayValue(tokenReservesSimulatedPrice, simulatedTokenPricesUsd)\n  const ilAbsolute = holdValue - poolValue\n  const ilRelative = getRelativeImpLoss(poolValue, holdValue)\n\n  return { ilAbsolute, ilRelative }\n}\n\n// Amount of tokens deposited to infinite range based on investment amount and token prices\nexport function getReservesInvestedToInfiniteRange(investment: number, tokenPrices: number[]) {\n  // 50% of the investment goes to token_0 and 50% to token_1\n  const tokenReserves = new Array(2)\n  tokenReserves[0] = investment / 2 / tokenPrices[0]\n  tokenReserves[1] = investment / 2 / tokenPrices[1]\n\n  return tokenReserves\n}\n\nexport function getRealReservesAtLimitPrices(k: number, priceMin: number, priceMax: number) {\n  const realTokenReservesAtLimitPriceMin = new Array(2)\n  const commonPart = 1 - Math.sqrt(priceMin / priceMax)\n  realTokenReservesAtLimitPriceMin[0] = Math.sqrt(k / priceMin) * commonPart // x axis token\n  realTokenReservesAtLimitPriceMin[1] = 0\n\n  const realTokenReservesAtLimitPriceMax = new Array(2)\n  realTokenReservesAtLimitPriceMax[0] = 0\n  realTokenReservesAtLimitPriceMax[1] = Math.sqrt(k * priceMax) * commonPart // y axis token\n\n  return { realTokenReservesAtLimitPriceMin, realTokenReservesAtLimitPriceMax }\n}\n\nexport function getSimulatedStatsForRange(\n  currentTokenPricesUsd: number[],\n  simulatedTokenPricesUsd: number[],\n  priceMin: number,\n  priceMax: number,\n  investmentUsd: number\n) {\n  // NOTE: This function ignores ticks\n  // virtual reserves: reserves on infinite interval\n  // real reserves: reserves on specified range <priceMin, priceMax>\n\n  // compute price ratio\n  const currentPriceRatio = currentTokenPricesUsd[0] / currentTokenPricesUsd[1]\n  const simulatedPriceRatio = simulatedTokenPricesUsd[0] / simulatedTokenPricesUsd[1]\n\n  // virtual reserves for current price\n  const virtualTokenReservesCurrentPrice = getReservesInvestedToInfiniteRange(investmentUsd, currentTokenPricesUsd)\n\n  // compute constant product\n  const k = virtualTokenReservesCurrentPrice[0] * virtualTokenReservesCurrentPrice[1]\n\n  // virtual reserves at range limit prices\n  const virtualTokenReservesAtLimitPriceMin = new Array(2)\n  virtualTokenReservesAtLimitPriceMin[0] = Math.sqrt(k / priceMin)\n  virtualTokenReservesAtLimitPriceMin[1] = Math.sqrt(k * priceMin)\n\n  const virtualTokenReservesAtLimitPriceMax = new Array(2)\n  virtualTokenReservesAtLimitPriceMax[0] = Math.sqrt(k / priceMax)\n  virtualTokenReservesAtLimitPriceMax[1] = Math.sqrt(k * priceMax)\n\n  // range computations\n  // limit amounts\n  const realTokenReservesAtLimitPriceMin = new Array(2)\n  const commonPart = 1 - Math.sqrt(priceMin / priceMax)\n  realTokenReservesAtLimitPriceMin[0] = Math.sqrt(k / priceMin) * commonPart // x axis token\n  realTokenReservesAtLimitPriceMin[1] = 0\n\n  const realTokenReservesAtLimitPriceMax = new Array(2)\n  realTokenReservesAtLimitPriceMax[0] = 0\n  realTokenReservesAtLimitPriceMax[1] = Math.sqrt(k * priceMax) * commonPart // y axis token\n\n  // current amounts (according to the current price)\n  const realTokenReservesCurrentPrice = new Array(2)\n  realTokenReservesCurrentPrice[0] = virtualTokenReservesCurrentPrice[0] - Math.sqrt(k / priceMax)\n  realTokenReservesCurrentPrice[1] = virtualTokenReservesCurrentPrice[1] - Math.sqrt(k * priceMin)\n\n  // compute token balances for simulated price\n  const virtualReservesSimulatedPrice = new Array(2)\n  virtualReservesSimulatedPrice[0] = Math.sqrt(k / simulatedPriceRatio)\n  virtualReservesSimulatedPrice[1] = Math.sqrt(k * simulatedPriceRatio)\n\n  const realTokenReservesSimulatedPrice = new Array(2)\n  realTokenReservesSimulatedPrice[0] = virtualReservesSimulatedPrice[0] - Math.sqrt(k / priceMax)\n  realTokenReservesSimulatedPrice[1] = virtualReservesSimulatedPrice[1] - Math.sqrt(k * priceMin)\n\n  // if the simulated price is above/below the price range threshold (we don't want to show negative balances)\n  if (simulatedPriceRatio > priceMax) {\n    realTokenReservesSimulatedPrice[0] = 0\n    // eslint-disable-next-line prefer-destructuring\n    realTokenReservesSimulatedPrice[1] = realTokenReservesAtLimitPriceMax[1]\n  } else if (simulatedPriceRatio < priceMin) {\n    // eslint-disable-next-line prefer-destructuring\n    realTokenReservesSimulatedPrice[0] = realTokenReservesAtLimitPriceMin[0]\n    realTokenReservesSimulatedPrice[1] = 0\n  }\n\n  // do the same for current price ratio\n  if (currentPriceRatio > priceMax) {\n    realTokenReservesCurrentPrice[0] = 0\n    // eslint-disable-next-line prefer-destructuring\n    realTokenReservesCurrentPrice[1] = realTokenReservesAtLimitPriceMax[1]\n  } else if (currentPriceRatio < priceMin) {\n    // eslint-disable-next-line prefer-destructuring\n    realTokenReservesCurrentPrice[0] = realTokenReservesAtLimitPriceMin[0]\n    realTokenReservesCurrentPrice[1] = 0\n  }\n\n  // impermanent loss in relative and absolute terms\n  const { ilAbsolute, ilRelative } = getRelativeAndAbsoluteImpLoss(\n    realTokenReservesCurrentPrice,\n    realTokenReservesSimulatedPrice,\n    simulatedTokenPricesUsd\n  )\n\n  return {\n    realTokenReservesCurrentPrice,\n    realTokenReservesSimulatedPrice,\n    realTokenReservesAtLimitPriceMin,\n    realTokenReservesAtLimitPriceMax,\n    ilAbsolute,\n    ilRelative,\n  }\n}\n\nexport function getNearestTick(targetPrice: number, roundOption: 'bottom' | 'nearest' | 'top' = 'nearest') {\n  // there is a tick at every price 𝑝 that is an integer power of 1.0001\n  // the equation: 1.0001^tickInteger = targetPrice;\n  // the solution (first get float value and then round it to the nearest integer):\n  const tickFloat = Math.log(targetPrice) / Math.log(1.0001)\n  // return integer tick\n  if (roundOption === 'bottom') return Math.floor(tickFloat)\n  if (roundOption === 'top') return Math.ceil(tickFloat)\n  return Math.round(tickFloat)\n}\n\nexport function getCapitalEfficiencyCoefficient(priceMin: number, priceMax: number) {\n  return 1 / (1 - (priceMin / priceMax) ** (1 / 4))\n}\n\nexport const getInvestmentIncreaseCoefficient = (currentTokenPrices: number[], priceMin: number, priceMax: number) => {\n  const currentPriceRatio = currentTokenPrices[0] / currentTokenPrices[1]\n  // the absolute investment amount doesn't matter. The only important thing are current token price\n  // TODO there should probably be an equation how to compute this without the need to provide invested amount\n  const fakeInvestment = 1000000\n\n  // virtual reserves for current price\n  const virtualTokenReservesCurrentPrice = getReservesInvestedToInfiniteRange(fakeInvestment, currentTokenPrices)\n\n  // compute constant product\n  const k = virtualTokenReservesCurrentPrice[0] * virtualTokenReservesCurrentPrice[1]\n  console.log('k', k)\n\n  // reserves at limit prices\n  const { realTokenReservesAtLimitPriceMin, realTokenReservesAtLimitPriceMax } = getRealReservesAtLimitPrices(\n    k,\n    priceMin,\n    priceMax\n  )\n\n  // reserves for current price\n  // TODO move this computation to reducer as it will not change that often\n  const realTokenReservesCurrentPrice = new Array(2)\n  realTokenReservesCurrentPrice[0] = virtualTokenReservesCurrentPrice[0] - Math.sqrt(k / priceMax)\n  realTokenReservesCurrentPrice[1] = virtualTokenReservesCurrentPrice[1] - Math.sqrt(k * priceMin)\n\n  // do the same for current price ratio\n  if (currentPriceRatio > priceMax) {\n    realTokenReservesCurrentPrice[0] = 0\n    // eslint-disable-next-line prefer-destructuring\n    realTokenReservesCurrentPrice[1] = realTokenReservesAtLimitPriceMax[1]\n  } else if (currentPriceRatio < priceMin) {\n    // eslint-disable-next-line prefer-destructuring\n    realTokenReservesCurrentPrice[0] = realTokenReservesAtLimitPriceMin[0]\n    realTokenReservesCurrentPrice[1] = 0\n  }\n\n  // investment increase coefficient (independent on simulated price)\n  const tokenXVirtualValue = fakeInvestment / currentTokenPrices[0]\n  const tokenXRealValue = realTokenReservesCurrentPrice[0] + realTokenReservesCurrentPrice[1] / currentPriceRatio\n\n  return tokenXVirtualValue / tokenXRealValue\n}\n\nexport const getDataForSimulatedDensityChart = (positions: Position[]) => {\n  // TODO 1. sort positions from lowest priceMin\n\n  // 3. get the value of highest investment, lowest priceMin and highest priceMax\n  let maxInvestment = 0\n  let minPriceBottom = Infinity\n  let maxPriceTop = 0\n  positions.forEach((position) => {\n    // TODO what data add if infinite range is selected?\n    if (position.investmentUsd > maxInvestment) maxInvestment = position.investmentUsd\n    if (position.priceMin < minPriceBottom) minPriceBottom = position.priceMin\n    if (position.priceMax > maxPriceTop) maxPriceTop = position.priceMax\n  })\n\n  const middlePriceRange = (maxPriceTop + minPriceBottom) / 2\n  const xAxisOffset = middlePriceRange - minPriceBottom\n\n  // create data format\n  const dataPointsCount = 2 * positions.length + 2\n  const liquidityValuesArrLength = 2 * positions.length + 1\n  const chartData: ChartDataItem[] = []\n\n  // Get first element of graph data. The rest will be computed using loop\n  const initialLiquidityValues = new Array(liquidityValuesArrLength).fill(undefined)\n\n  // initialPoolValues[0] = intervalStats[0].poolValueUsd;\n  initialLiquidityValues[0] = 0\n\n  chartData.push({\n    price: minPriceBottom - xAxisOffset,\n    liquidityValues: initialLiquidityValues,\n  })\n\n  // add the data point between\n  for (let i = 0; i < positions.length; i++) {\n    const position = positions[i]\n\n    const liquidityValuesBottom = new Array(liquidityValuesArrLength).fill(undefined)\n    const liquidityValuesTop = new Array(liquidityValuesArrLength).fill(undefined)\n\n    // get end value of pool\n    const bottomIndex = 2 * i\n    liquidityValuesBottom[bottomIndex] = 0\n    liquidityValuesBottom[bottomIndex + 1] = position.investmentUsd\n\n    liquidityValuesTop[bottomIndex + 1] = position.investmentUsd\n    liquidityValuesTop[bottomIndex + 2] = 0\n\n    chartData.push({\n      price: position.priceMin,\n      liquidityValues: liquidityValuesBottom,\n    })\n\n    chartData.push({\n      price: position.priceMax,\n      liquidityValues: liquidityValuesTop,\n    })\n  }\n\n  // add the last data point\n  const lastLiquidityValues = new Array(liquidityValuesArrLength).fill(undefined)\n  lastLiquidityValues[liquidityValuesArrLength - 1] = 0\n  chartData.push({\n    price: maxPriceTop + xAxisOffset,\n    liquidityValues: lastLiquidityValues,\n  })\n\n  return { chartData, maxInvestment }\n}\n\ninterface ChartDataItem {\n  price: number\n  liquidityValues: Array<number | undefined>\n}\n\n// should be ordered by price from lowest to highest\n// take into account the price ranges can cover each other\nconst exampleData: ChartDataItem[] = [\n  {\n    price: 0,\n    liquidityValues: [0, undefined, undefined, undefined, undefined, undefined, undefined],\n  },\n  {\n    price: 10,\n    liquidityValues: [0, 1000, undefined, undefined, undefined, undefined, undefined],\n    // position index: 0; indexBottom = 0\n  },\n  {\n    price: 20,\n    liquidityValues: [undefined, 1000, 0, undefined, undefined, undefined, undefined],\n    // position index: 0; indexTop = 1\n  },\n  {\n    price: 30,\n    liquidityValues: [undefined, undefined, 0, 2000, undefined, undefined, undefined],\n    // position index: 1; indexBottom = 2\n  },\n  {\n    price: 40,\n    liquidityValues: [undefined, undefined, undefined, 2000, 0],\n    // position index: 1; indexTop = 3\n  },\n  {\n    price: 50,\n    liquidityValues: [undefined, undefined, undefined, undefined, 0, 5000, undefined],\n    // position index: 2; indexBottom = 4\n  },\n  {\n    price: 60,\n    liquidityValues: [undefined, undefined, undefined, undefined, undefined, 5000, 0],\n    // position index: 2; indexTop = 5\n  },\n  {\n    price: 70,\n    liquidityValues: [undefined, undefined, undefined, undefined, undefined, undefined, 0],\n  },\n]\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst rightAlignedStyles = css`\n  text-align: right;\n  justify-self: flex-end; /* text-align is not enough if you want to align for example button */\n`\n\nconst leftAlignedStyles = css`\n  text-align: left;\n  justify-self: flex-start;\n`\n\ninterface RowContentProps {\n  color?: 'light' | 'medium' | 'dark'\n  textAlign?: 'left' | 'right'\n  customColor?: string\n}\n\n// this wrapper sets the text color of the item based on the  color: 'light' | 'dark' prop\nconst Col = styled.div<RowContentProps>`\n  display: flex;\n  align-items: center;\n\n  ${(props) => {\n    // custom color is first so it return and overrides following styles\n    if (props.customColor) {\n      return css`\n        color: ${props.customColor};\n      `\n    }\n\n    switch (props.color) {\n      case 'medium':\n        return css`\n          color: ${props.theme.text2};\n        `\n      case 'dark':\n        return css`\n          color: ${props.theme.text1};\n        `\n      // no default\n      default:\n        return css`\n          color: ${props.theme.text3};\n        `\n    }\n  }}\n\n  /* content alignment styles */\n    ${(props) => (props.textAlign === 'left' ? leftAlignedStyles : rightAlignedStyles)} /* justify-content: center; */\n`\n\ninterface Props {\n  firstColumn?: React.ReactNode\n  secondColumn?: React.ReactNode\n  thirdColumn?: React.ReactNode\n  fourthColumn?: React.ReactNode\n  showThreeCols?: boolean\n  columnColors?: Array<'light' | 'medium' | 'dark'>\n  columnAlignment?: Array<'left' | 'right'>\n  customColor?: string\n}\n\nexport default function GridRow({\n  // set default values\n  firstColumn,\n  secondColumn,\n  thirdColumn,\n  fourthColumn,\n  columnColors = ['medium', 'medium', 'medium', 'medium'],\n  columnAlignment = ['left', 'right', 'right', 'left'],\n  customColor,\n}: Props) {\n  return (\n    <>\n      <Col textAlign={columnAlignment[0]} color={columnColors[0]} customColor={customColor}>\n        {firstColumn}\n      </Col>\n      {secondColumn ? (\n        <Col textAlign={columnAlignment[1]} color={columnColors[1]} customColor={customColor}>\n          {secondColumn}\n        </Col>\n      ) : null}\n\n      {thirdColumn ? (\n        <Col textAlign={columnAlignment[2]} color={columnColors[2]} customColor={customColor}>\n          {thirdColumn}\n        </Col>\n      ) : null}\n      {fourthColumn ? (\n        <Col textAlign={columnAlignment[3]} color={columnColors[3]} customColor={customColor}>\n          {fourthColumn}\n        </Col>\n      ) : null}\n    </>\n  )\n}\n","import { ButtonOutlined } from 'components/Button'\nimport InlineCircle from 'components/InlineCircle'\nimport VerticalCryptoAmounts from 'components/VerticalCryptoAmounts'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { removePosition } from 'state/simulator/actions'\nimport { useAllSimulatorData } from 'state/simulator/hooks'\nimport { Position } from 'state/simulator/reducer'\nimport styled, { css } from 'styled-components'\nimport { getTokenArrayValue, multiplyArraysElementWise, subtractArraysElementWise } from 'utils/math'\nimport { formatDollarAmount, formatPercentageValue, getNumberSign, roundToNDecimals } from 'utils/numbers'\nimport {\n  getCapitalEfficiencyCoefficient,\n  getInvestmentIncreaseCoefficient,\n  getSimulatedStatsForRange,\n} from 'utils/simulator'\nimport GridRow from './GridRow'\nimport useTheme from 'hooks/useTheme'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction column;\n  color: ${({ theme }) => theme.text1};\n  width: 100%;\n`\n\nconst GridWrapper = styled.div`\n  flex-grow: 1;\n  display: grid;\n  gap: 10px;\n  grid-template-columns: minmax(100px, auto) minmax(110px, auto) minmax(120px, auto) 125px;\n  grid-auto-rows: auto;\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n  align-items: center;\n  /* allow x-axis scrolling: useful on small screens when fiat amount is displayed */\n  /* overflow-x: auto; */\n  word-break: break-word;\n  align-items: baseline;\n  width: 100%;\n  min-width: fit-content;\n\n  //   @media (max-width: 500px) {\n  //     font-size: ${({ theme }) => theme.fontSize.small};;\n  //     gap: 18px 5px;\n  //     /* grid-template-columns: 140px minmax(90px, auto) minmax(90px, auto); */\n  //   }\n`\n\nconst RightPaddingWrapper = styled.div`\n  padding-right: 10px;\n`\n\nconst PoolValueCryptoFiatWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst PoolValueCryptoFiatWrapperBorder = styled(PoolValueCryptoFiatWrapper)`\n  padding-right: 10px;\n`\n\nconst AdditionalInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  padding-top: 10px;\n  margin-top: 20px;\n`\n\nconst AddRow = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 40px;\n  color: ${({ theme }) => theme.text2};\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n`\n\nconst AddTitle = styled.div`\n  display: flex;\n  flex-grow: 1;\n  color: ${({ theme }) => theme.text2};\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n  margin-top: 10px;\n`\n\nconst IlValuesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst IlRelative = styled.div`\n  color: ${({ theme }) => theme.text3};\n  padding-right: 20px;\n  margin-right: 20px;\n`\nconst IlAbsolute = styled.div`\n  color: ${({ theme }) => theme.text2};\n  min-width: 120px;\n  text-align: right;\n`\n\nconst PositionStatus = styled.div`\n  color: ${({ theme }) => theme.text3};\n`\n\nconst RemovePositionWrapper = styled.div`\n  display: flex;\n  height: 40px;\n  width: 200px;\n  align-self: flex-end;\n  margin-top: 20px;\n`\n\nconst FiatDifference = styled.div<{ sign: '+' | '-' | '' }>`\n  ${(props) => {\n    if (props.sign === '+')\n      return css`\n        color: ${props.theme.green1};\n      `\n\n    if (props.sign === '-')\n      return css`\n        color: ${props.theme.red1};\n      `\n\n    return css`\n      color: ${props.theme.text2};\n    `\n  }}\n`\n\ninterface Props {\n  positionIndex: number\n  investmentUsd: Position['investmentUsd']\n  priceMin: Position['priceMin']\n  priceMax: Position['priceMax']\n  infiniteRangeSelected: Position['infiniteRangeSelected']\n}\n\nexport default function PositionOverview({\n  positionIndex,\n  investmentUsd,\n  priceMin,\n  priceMax,\n  infiniteRangeSelected,\n}: Props) {\n  const theme = useTheme()\n  const dispatch = useDispatch()\n  const { simulatedPriceCoefficients, tokenSymbols, currentTokenPricesUsd, priceRatioOrder } = useAllSimulatorData()\n\n  // get simulated token price\n  const simulatedTokenPricesUsd = multiplyArraysElementWise(currentTokenPricesUsd, simulatedPriceCoefficients)\n\n  // get capital efficiency coeff\n  const capitalEfficiencyCoefficient = infiniteRangeSelected ? 1 : getCapitalEfficiencyCoefficient(priceMin, priceMax)\n  // check is infinite range is selected. If not, compute capital efficiency coeff. and increase virtual investment\n  // get simulated stats based on if infinite range is selected\n  const simulationStats = getSimulatedStatsForRange(\n    currentTokenPricesUsd,\n    simulatedTokenPricesUsd,\n    infiniteRangeSelected ? 0 : priceMin,\n    infiniteRangeSelected ? Infinity : priceMax,\n    // investmentUsd,\n    infiniteRangeSelected\n      ? investmentUsd\n      : investmentUsd * getInvestmentIncreaseCoefficient(currentTokenPricesUsd, priceMin, priceMax)\n  )\n\n  const { realTokenReservesCurrentPrice, realTokenReservesSimulatedPrice, ilAbsolute, ilRelative } = simulationStats\n\n  const tokenBalancesDiff = subtractArraysElementWise(realTokenReservesSimulatedPrice, realTokenReservesCurrentPrice)\n  // position value for current and simulated prices\n  const positionValueCurrentPrices = getTokenArrayValue(realTokenReservesCurrentPrice, currentTokenPricesUsd)\n  console.log('positionValueCurrentPrices', positionValueCurrentPrices)\n\n  const positionValueSimulatedPrices = getTokenArrayValue(realTokenReservesSimulatedPrice, simulatedTokenPricesUsd)\n\n  // TODO this shows different values when I switch price ratio order\n  // maybe it's right, but is confusing\n  // TODO show somewhere in the interface current token0/token1 price ratio so it's obvious.\n  const getPositionStatus = (currentPrice: number, priceMin: number, priceMax: number) => {\n    if (currentPrice < priceMin) {\n      return (\n        <PositionStatus>\n          <InlineCircle color={theme.red1} size={22} marginRight={8} />\n          Position is not gaining fees (price is below price range)\n        </PositionStatus>\n      )\n    }\n    if (currentPrice > priceMax) {\n      return (\n        <PositionStatus>\n          <InlineCircle color={theme.red1} size={22} marginRight={8} />\n          Position is not gaining fees (price is above price range)\n        </PositionStatus>\n      )\n    }\n    return (\n      <PositionStatus>\n        <InlineCircle color={theme.green1} size={22} marginRight={8} />\n        Position is gaining fees\n      </PositionStatus>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <GridWrapper>\n        <GridRow\n          firstColumn=\"\"\n          secondColumn=\"Today\"\n          thirdColumn={<RightPaddingWrapper>Simulated</RightPaddingWrapper>}\n          fourthColumn=\"Difference\"\n          columnColors={['light', 'light', 'light', 'light']}\n          columnAlignment={['left', 'right', 'right', 'left']}\n        />\n        <GridRow\n          columnAlignment={['left', 'right', 'right', 'left']}\n          firstColumn=\"Position assets\"\n          secondColumn={\n            <PoolValueCryptoFiatWrapper>\n              {formatDollarAmount(positionValueCurrentPrices)}\n              <VerticalCryptoAmounts\n                reversedOrder={priceRatioOrder === 'reversed'}\n                maxWidth={70}\n                tokenSymbols={tokenSymbols}\n                tokenAmounts={realTokenReservesCurrentPrice}\n              />\n            </PoolValueCryptoFiatWrapper>\n          }\n          // simulation values\n          thirdColumn={\n            <PoolValueCryptoFiatWrapperBorder>\n              {formatDollarAmount(positionValueSimulatedPrices)}\n              <VerticalCryptoAmounts\n                reversedOrder={priceRatioOrder === 'reversed'}\n                maxWidth={70}\n                tokenSymbols={tokenSymbols}\n                tokenAmounts={realTokenReservesSimulatedPrice}\n              />\n            </PoolValueCryptoFiatWrapperBorder>\n          }\n          // difference values\n          fourthColumn={\n            <PoolValueCryptoFiatWrapper>\n              <FiatDifference sign={getNumberSign(positionValueSimulatedPrices - positionValueCurrentPrices)}>\n                {formatDollarAmount(positionValueSimulatedPrices - positionValueCurrentPrices, 2, true, true)}\n              </FiatDifference>\n              <VerticalCryptoAmounts\n                reversedOrder={priceRatioOrder === 'reversed'}\n                maxWidth={40}\n                tokenSymbols={tokenSymbols}\n                tokenAmounts={tokenBalancesDiff}\n                textAlign=\"left\"\n                usePlusSymbol\n              />\n            </PoolValueCryptoFiatWrapper>\n          }\n        />\n      </GridWrapper>\n      <AdditionalInfoWrapper>\n        <AddRow>\n          {/* TODO add tooltip that it's compared to Uniswap v2 */}\n          <AddTitle>Capital efficiency coefficient</AddTitle>\n          <div>{capitalEfficiencyCoefficient.toFixed(2)}</div>\n        </AddRow>\n        <AddRow>\n          <AddTitle>Simulated price</AddTitle>\n          <div>{roundToNDecimals(simulatedTokenPricesUsd[0] / simulatedTokenPricesUsd[1], 5)}</div>\n        </AddRow>\n        <AddRow>\n          <AddTitle>Impermanent loss:</AddTitle>\n          <IlValuesWrapper>\n            <IlRelative>\n              {!ilAbsolute ? '0%' : formatPercentageValue(Math.abs(ilRelative) < 0.00001 ? 0 : ilRelative)}\n            </IlRelative>\n            <IlAbsolute>{formatDollarAmount(-ilAbsolute)}</IlAbsolute>\n          </IlValuesWrapper>\n        </AddRow>\n        <AddRow>\n          {getPositionStatus(\n            simulatedTokenPricesUsd[0] / simulatedTokenPricesUsd[1],\n            infiniteRangeSelected ? 0 : priceMin,\n            infiniteRangeSelected ? Infinity : priceMax\n          )}\n        </AddRow>\n      </AdditionalInfoWrapper>\n      <RemovePositionWrapper>\n        <ButtonOutlined\n          onClick={() => {\n            dispatch(removePosition({ positionIndex }))\n          }}\n        >\n          Remove Position\n        </ButtonOutlined>\n      </RemovePositionWrapper>\n    </Wrapper>\n  )\n}\n","/* eslint-disable global-require */\nexport const ICONS = {\n  // social icons\n  GITHUB: require('../../assets/images/icons/github.svg'),\n  TWITTER: require('../../assets/images/icons/twitter.svg'),\n  TELEGRAM: require('../../assets/images/icons/telegram.svg'),\n  DISCORD: require('../../assets/images/icons/discord.svg'),\n  DISCORD_FULL: require('../../assets/images/icons/discord-full.svg'),\n  PORTIS: require('../../assets/images/icons/portis.svg'),\n\n  // UI\n  ARROW_DOWN: require('../../assets/images/icons/arrow_down.svg'),\n  ARROW_UP: require('../../assets/images/icons/arrow_up.svg'),\n  ARROW_LEFT: require('../../assets/images/icons/arrow_left.svg'),\n  ARROW_RIGHT: require('../../assets/images/icons/arrow_right.svg'),\n  CHECK: require('../../assets/images/icons/check.svg'),\n  CHECK_ACTIVE: require('../../assets/images/icons/check_active.svg'),\n  EDIT: require('../../assets/images/icons/edit.svg'),\n  INFO: require('../../assets/images/icons/info.svg'),\n  INFO_ACTIVE: require('../../assets/images/icons/info_active.svg'),\n  WARNING: require('../../assets/images/icons/warning.svg'),\n  WARNING_ACTIVE: require('../../assets/images/icons/warning_active.svg'),\n  QUESTION: require('../../assets/images/icons/question.svg'),\n  QUESTION_ACTIVE: require('../../assets/images/icons/question_active.svg'),\n  EXTERNAL_LINK: require('../../assets/images/icons/external_link.svg'),\n  FEEDBACK: require('../../assets/images/icons/feedback.svg'),\n  REFRESH: require('../../assets/images/icons/refresh.svg'),\n  SUPPORT: require('../../assets/images/icons/support.svg'),\n  CLOSE: require('../../assets/images/icons/close.svg'),\n  COPY: require('../../assets/images/icons/copy.svg'),\n  SETTINGS: require('../../assets/images/icons/settings.svg'),\n  CROCO_EMOJI: require('../../assets/images/icons/croco_emoji.svg'),\n  CROCO_LOGO: require('../../assets/images/icons/croco_logo.svg'),\n  HEART: require('../../assets/images/icons/heart.svg'),\n  FILTER: require('../../assets/images/icons/filter.svg'),\n  POOLS: require('../../assets/images/icons/pools.svg'),\n  DASHBOARD: require('../../assets/images/icons/dashboard.svg'),\n  HAMBURGER_MENU: require('../../assets/images/icons/hamburger_menu.svg'),\n  UNKNOWN_TOKEN: require('../../assets/images/icons/unknown_token.svg'),\n  PLUS: require('../../assets/images/icons/plus.svg'),\n\n  // themes\n  LIGHT_MODE: require('../../assets/images/icons/light-mode.svg'),\n  DARK_MODE: require('../../assets/images/icons/dark-mode.svg'),\n}\n\nexport type IconType = keyof typeof ICONS\n","import React from 'react'\nimport { ReactSVG } from 'react-svg'\nimport styled, { css } from 'styled-components'\nimport { ICONS, IconType } from './icons'\n\nconst SvgWrapper = styled.div<{ size: number; color?: string; hoverColor?: string }>`\n  display: inline-block;\n  height: ${(props) => props.size}px;\n\n  div {\n    height: ${(props) => props.size}px;\n    line-height: ${(props) => props.size}px;\n  }\n\n  & > div > svg {\n    ${(props) =>\n      props.color\n        ? css`\n            fill: ${props.color} !important;\n          `\n        : null}\n  }\n\n  & > div > svg > path {\n    ${(props) =>\n      props.color\n        ? css`\n            fill: ${props.color} !important;\n          `\n        : null}\n  }\n\n  &:hover > div > svg {\n    ${(props) =>\n      props.hoverColor\n        ? css`\n            transition: 0.2s;\n            fill: ${props.hoverColor} !important;\n          `\n        : null}\n  }\n\n  &:hover > div > svg > path {\n    ${(props) =>\n      props.hoverColor\n        ? css`\n            transition: 0.2s;\n            fill: ${props.hoverColor} !important;\n          `\n        : null}\n  }\n`\n\ninterface Props extends React.ImgHTMLAttributes<HTMLImageElement> {\n  icon: IconType\n  size?: number\n  color?: string\n  hoverColor?: string\n}\n\nexport default function Icon({ icon, className, size = 32, color, hoverColor, ...rest }: Props) {\n  return (\n    <SvgWrapper className={className} size={size} color={color} hoverColor={hoverColor} {...rest}>\n      <ReactSVG\n        src={ICONS[icon].default}\n        fill=\"#00ff00\"\n        beforeInjection={(svg: any) => {\n          svg.setAttribute('width', `${size}px`)\n          svg.setAttribute('height', `${size}px`)\n        }}\n        loading={() => <span className=\"loading\" />}\n      />\n    </SvgWrapper>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport Icon from 'components/Icon'\n\nconst Wrapper = styled.div`\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    > div:first-child {\n      border: 1px solid ${(props) => props.theme.text3};\n    }\n  }\n`\n\nconst IconWrapper = styled.div<IconWrapperProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 19px;\n  min-width: 19px;\n  max-width: 19px;\n  height: 19px;\n  border-radius: 3px;\n  box-shadow: ${(props) => (!props.isChecked ? `inset 0 3px 6px 0 #f8fafd` : `none`)};\n  background: ${(props) => (props.isChecked ? props.theme.green1 : props.theme.white)};\n  border: 1px solid ${(props) => (props.isChecked ? props.theme.green1 : props.theme.bg0)};\n\n  &:hover,\n  &:focus {\n    ${(props) =>\n      !props.isChecked &&\n      css`\n        border: 1px solid ${props.theme.text3};\n      `}\n  }\n`\n\nconst Label = styled.div<IconWrapperProps>`\n  display: flex;\n  padding-left: 10px;\n  padding-top: 2px;\n  justify-content: center;\n`\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  onClick: (event: React.KeyboardEvent<HTMLElement> | React.MouseEvent<HTMLElement> | null) => any\n  isChecked?: boolean\n}\n\ntype IconWrapperProps = Omit<Props, 'onClick'>\n\nconst handleKeyboard = (event: React.KeyboardEvent<HTMLElement>, onClick: Props['onClick']) => {\n  if (event.keyCode === 32) {\n    onClick(event)\n  }\n}\n\nexport default function Checkbox({ isChecked, children, onClick, ...rest }: Props) {\n  return (\n    <Wrapper onClick={onClick} onKeyUp={(event) => handleKeyboard(event, onClick)} tabIndex={0} {...rest}>\n      <IconWrapper isChecked={isChecked}>{isChecked && <Icon size={16} color={'#ffffff'} icon=\"CHECK\" />}</IconWrapper>\n      <Label isChecked={isChecked}>{children}</Label>\n    </Wrapper>\n  )\n}\n","import * as React from 'react'\nimport { createRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\n\ninterface InputProps extends Props {\n  inputAddonWidth?: number\n}\n\nconst StyledInput = styled.input<InputProps>`\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n  text-align: ${(props) => props.textAlign};\n  padding: 1px ${(props) => (props.textIndent ? `${props.textIndent[1] + 16}px` : '16px')} 0\n    ${(props) => (props.textIndent ? `${props.textIndent[0] + 16}px` : '16px')};\n\n  border-radius: 5px;\n  border: ${(props) => (props.noBorder ? 'none' : '2px solid')};\n  border-color: ${(props) => (props.useDarkBorder ? props.theme.white : props.theme.text4)};\n  outline: none;\n  box-sizing: border-box;\n  width: 100%;\n  height: ${(props) => (props.variant === 'small' ? '38px' : '48px')};\n  transition: border 150ms ease-out;\n  -moz-appearance: textfield;\n  text-overflow: ellipsis;\n  ${(props) =>\n    props.height\n      ? css`\n          height: ${props.height}px;\n        `\n      : 'auto'};\n\n  &:focus {\n    border-color: ${({ theme }) => theme.blue1};\n  }\n\n  &::placeholder {\n    color: ${({ theme }) => theme.text3};\n    font-weight: ${({ theme }) => theme.fontWeight.medium};\n  }\n\n  // styles for disabled input\n  background-color: ${(props) => (props.disabled ? props.theme.bg1 : props.theme.black1)};\n\n  color: ${(props) => (props.disabled ? props.theme.text3 : props.theme.text1)};\n  cursor: ${(props) => (props.disabled ? 'not-allowed' : 'auto')};\n`\n\nconst InputWrapper = styled.div`\n  display: flex;\n  position: relative;\n  // hide arrows when input type = number\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`\n\nconst InputAddon = styled.div<{ align: 'left' | 'right' }>`\n  position: absolute;\n  top: 1px;\n  bottom: 1px;\n  display: flex;\n  align-items: center;\n\n  ${(props) =>\n    props.align === 'right' &&\n    css`\n      right: 10px;\n    `}\n\n  ${(props) =>\n    props.align === 'left' &&\n    css`\n      left: 10px;\n    `}\n`\n\ninterface Props extends React.InputHTMLAttributes<HTMLInputElement> {\n  value?: string\n  innerRef?: React.Ref<HTMLInputElement>\n  variant?: 'small' | 'large'\n  label?: React.ReactElement | string\n  labelAddon?: React.ReactElement\n  labelRight?: React.ReactElement\n  innerAddon?: React.ReactNode\n  isDisabled?: boolean\n  isLoading?: boolean\n  type?: string\n  addonAlign?: 'left' | 'right'\n  noError?: boolean\n  labelAddonIsVisible?: boolean\n  textIndent?: [number, number] // [left, right]\n  clearButton?: boolean\n  noBorder?: boolean\n  onClear?: () => void\n  useWhiteBackground?: boolean\n  useDarkBorder?: boolean\n  height?: number\n  textAlign?: 'left' | 'right'\n}\n\nexport default function Input({\n  value,\n  type = 'text',\n  innerRef,\n  variant = 'large',\n  width,\n  height,\n  label,\n  labelAddon,\n  labelRight,\n  innerAddon,\n  isDisabled,\n  labelAddonIsVisible,\n  clearButton,\n  onClear,\n  addonAlign = 'right',\n  noError = false,\n  textIndent = [0, 0],\n  noBorder = false,\n  useWhiteBackground = false,\n  useDarkBorder = false,\n  textAlign = 'right',\n  ...rest\n}: Props) {\n  const inputAddonRef = createRef<HTMLDivElement>()\n  const [inputAddonWidth, setInputAddonWidth] = React.useState(0)\n\n  useEffect(() => {\n    if (inputAddonRef.current) {\n      const rect = inputAddonRef.current.getBoundingClientRect()\n      setInputAddonWidth(rect.width + 10) // addon ha absolute pos with 10px offset\n    } else {\n      setInputAddonWidth(0)\n    }\n  }, [inputAddonRef])\n\n  return (\n    <InputWrapper>\n      {innerAddon && addonAlign === 'left' && (\n        <InputAddon align=\"left\" ref={inputAddonRef}>\n          {innerAddon}\n        </InputAddon>\n      )}\n      {((innerAddon && addonAlign === 'right') || clearButton) && (\n        <InputAddon align=\"right\" ref={inputAddonRef}>\n          {addonAlign === 'right' && innerAddon}\n        </InputAddon>\n      )}\n\n      <StyledInput\n        value={value}\n        textIndent={textIndent}\n        type={type}\n        spellCheck={false}\n        variant={variant}\n        disabled={isDisabled}\n        width={width}\n        ref={innerRef}\n        inputAddonWidth={inputAddonWidth}\n        noBorder={noBorder}\n        useWhiteBackground={useWhiteBackground}\n        useDarkBorder={useDarkBorder}\n        textAlign={textAlign}\n        {...rest}\n      />\n    </InputWrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  color: ${({ theme }) => theme.text3};\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: center;\n`\n\nconst Title = styled.div`\n  margin-right: 10px;\n`\n\nconst Button = styled.button<{ selected: boolean }>`\n  padding: 6px;\n  border-radius: 4px;\n  margin: 0 4px;\n  border: none;\n  background: ${(props) => (props.selected ? props.theme.bg3 : 'inherit')};\n  cursor: pointer;\n  color: ${(props) => (props.selected ? props.theme.white : props.theme.text3)};\n`\n\nexport type RangeTypes = 'absolute' | 'relative'\n\ninterface Props {\n  typeSelected: RangeTypes\n  onTypeChange: (type: RangeTypes) => void\n}\n\n// eslint-disable-next-line no-empty-pattern\nexport default function RangeTypeSelect({ typeSelected, onTypeChange }: Props) {\n  return (\n    <Wrapper>\n      <Title>Range type:</Title>\n      <Button\n        selected={typeSelected === 'absolute'}\n        onClick={() => {\n          onTypeChange('absolute')\n        }}\n      >\n        Absolute\n      </Button>\n      <Button\n        selected={typeSelected === 'relative'}\n        onClick={() => {\n          onTypeChange('relative')\n        }}\n      >\n        Relative\n      </Button>\n    </Wrapper>\n  )\n}\n","import Slider from '@material-ui/core/Slider'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { useIsDarkMode } from 'state/user/hooks'\nimport { colors as getColors } from 'theme'\n\nconst Wrapper = styled.div<{ width: number }>`\n  width: ${(props) => props.width}px;\n`\n\n// style options described here: https://material-ui.com/api/slider/#css\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      color: '#2172E5',\n      height: 0,\n    },\n    thumb: (props: any) => ({\n      height: 20,\n      width: 20,\n      marginTop: -8,\n      marginLeft: -8,\n      backgroundColor: props.blue1,\n      '&:focus, &:hover, &$active': {\n        boxShadow: 'inherit',\n      },\n    }),\n    thumbDisabled: (props: any) => ({\n      backgroundColor: props.text2,\n    }),\n    valueLabel: {\n      // left: 'calc(-50% + 4px)',\n    },\n    track: (props: any) => ({\n      height: 6,\n      borderRadius: 6,\n      backgroundColor: props.blue1,\n    }),\n    trackDisabled: (props: any) => ({\n      height: 6,\n      borderRadius: 6,\n      backgroundColor: props.text3,\n    }),\n    rail: (props: any) => ({\n      height: 6,\n      borderRadius: 6,\n      backgroundColor: props.bg3,\n      opacity: 1,\n    }),\n    margin: {\n      // height: '50px',\n      '& .MuiSlider-thumb': {\n        // disabled styles for thumb\n        marginTop: -8,\n        marginLeft: -8,\n        height: 20,\n        width: 20,\n      },\n    },\n    mark: (props: any) => ({\n      backgroundColor: props.text2,\n      height: 22,\n      // width: 2,\n      marginTop: -8,\n    }),\n    markLabel: (props: any) => ({\n      marginTop: 14,\n      color: props.text2,\n    }),\n  }\n})\n\ninterface Mark {\n  value: number\n  label: string\n}\ninterface Props extends React.ImgHTMLAttributes<HTMLDivElement> {\n  min: number\n  max: number\n  step?: number\n  defaultValue?: number\n  size?: number\n  width?: number\n  onChange?: any\n  value?: number[]\n  defaultValues?: number[]\n  marks?: Mark[]\n  disabled?: boolean\n}\n\nfunction valuetext(value: number) {\n  return `${value}`\n}\n\nexport default function RangeSelector({\n  min,\n  max,\n  step,\n  width = 100,\n  defaultValues = [0, 0],\n  onChange,\n  value,\n  marks = [],\n  disabled,\n  ...rest\n}: Props) {\n  const isDarkMode = useIsDarkMode()\n  const colors = getColors(isDarkMode)\n  const classes = useStyles(colors)\n\n  return (\n    <Wrapper width={width}>\n      <Slider\n        min={min}\n        max={max}\n        valueLabelFormat={(value) => value.toFixed(4)}\n        value={value}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider-small-steps\"\n        step={step}\n        marks={marks}\n        // valueLabelDisplay=\"off\"\n        onChange={onChange}\n        disabled={disabled}\n        classes={{\n          root: classes.root, // class name, e.g. `classes-nesting-root-x`\n          track: disabled ? classes.trackDisabled : classes.track, // class name, e.g. `classes-nesting-label-x`\n          thumb: disabled ? classes.thumbDisabled : classes.thumb,\n          rail: classes.rail,\n          mark: classes.mark,\n          markLabel: classes.markLabel,\n        }}\n      />\n    </Wrapper>\n  )\n}\n","import RangeSelector from 'components/RangeSelector'\nimport Input from 'components/Input'\nimport { useAllSimulatorData } from 'state/simulator/hooks'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { toTwoNonZeroDecimals, roundToNDecimals } from 'utils/numbers'\n\nconst Wrapper = styled.div`\n  color: ${({ theme }) => theme.text2};\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: center;\n`\n\nconst InputWrapper = styled.div`\n  width: 110px;\n  margin: 0 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 26px;\n`\n\nconst InputLabel = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.text2};\n  margin-bottom: 6px;\n`\n\nconst SliderWrapper = styled.div`\n  padding-top: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n`\n\ninterface Props {\n  positionIndex: number\n  onPriceLimitChange: (value: number, limit: 'min' | 'max') => void\n  disabled: boolean\n  // investmentUsd: Position['investmentUsd'];\n  // priceMin: Position['priceMin'];\n  // priceMax: Position['priceMax'];\n  // infiniteRangeSelected: Position['infiniteRangeSelected'];\n}\n\n// eslint-disable-next-line no-empty-pattern\nexport default function PriceRangeSelector({\n  onPriceLimitChange,\n  disabled,\n}: // positionIndex,\n// investmentUsd,\n// priceMin,\n// priceMax,\n// infiniteRangeSelected,\nProps) {\n  // const dispatch = useDispatch();\n  const { tokenSymbols, currentTokenPricesUsd } = useAllSimulatorData()\n  const [sliderValues, setSliderValues] = useState([\n    0,\n    toTwoNonZeroDecimals((2 * currentTokenPricesUsd[0]) / currentTokenPricesUsd[1]),\n  ])\n\n  const currentPriceRatio = currentTokenPricesUsd[0] / currentTokenPricesUsd[1]\n\n  // TODO there is some bug. The input values do not change when I change the priceRatioOrder\n  const [sliderMinPrice, setSliderMinPrice] = useState(0)\n  const [sliderMaxPrice, setSliderMaxPrice] = useState(toTwoNonZeroDecimals(2 * currentPriceRatio))\n\n  const handleSliderLimitPriceChange = (value: string, price: 'min' | 'max') => {\n    const typedValueFloat = parseFloat(value)\n    if (price === 'min') {\n      setSliderMinPrice(typedValueFloat)\n      setSliderValues([typedValueFloat, sliderValues[1]])\n    }\n    if (price === 'max') {\n      setSliderMaxPrice(typedValueFloat)\n      setSliderValues([sliderValues[0], typedValueFloat])\n    }\n\n    // call function that saves changes to redux\n    onPriceLimitChange(typedValueFloat, price)\n  }\n\n  const handleSliderMoveChange = (newValue: number[]) => {\n    setSliderValues(newValue)\n    // call function that saves changes to redux\n    onPriceLimitChange(newValue[0], 'min')\n    onPriceLimitChange(newValue[1], 'max')\n  }\n  // todo check if current price is out of range selector range and set the mark value properly so it does not\n  // appear out of the range viewbox\n\n  const getSliderMarkValue = (currentPrice: number, sliderMinPrice: number, sliderMaxPrice: number) => {\n    if (currentPrice < sliderMinPrice) {\n      return sliderMinPrice\n    }\n\n    if (currentPrice > sliderMaxPrice) {\n      return sliderMaxPrice\n    }\n\n    return currentPrice\n  }\n\n  const marks = [\n    {\n      value: getSliderMarkValue(currentPriceRatio, sliderMinPrice, sliderMaxPrice),\n      label: '',\n    },\n  ]\n\n  return (\n    <Wrapper>\n      <InputWrapper>\n        <InputLabel>Min</InputLabel>\n        <Input\n          disabled={disabled}\n          value={sliderValues[0].toString()}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            handleSliderLimitPriceChange(event.target.value.trim(), 'min')\n          }}\n          useWhiteBackground\n          variant=\"small\"\n          type=\"number\"\n        />\n      </InputWrapper>\n\n      <SliderWrapper>\n        <RangeSelector\n          disabled={disabled}\n          min={sliderMinPrice}\n          max={sliderMaxPrice}\n          step={0.00001}\n          width={240}\n          marks={marks}\n          value={sliderValues}\n          onChange={(_: any, newValue: number[]) => handleSliderMoveChange(newValue)}\n        />\n      </SliderWrapper>\n      <InputWrapper>\n        <InputLabel>Max</InputLabel>\n        <Input\n          disabled={disabled}\n          value={sliderValues[1].toString()}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            handleSliderLimitPriceChange(event.target.value.trim(), 'max')\n          }}\n          useWhiteBackground\n          variant=\"small\"\n          type=\"number\"\n        />\n      </InputWrapper>\n    </Wrapper>\n  )\n}\n","import RangeSelector from 'components/RangeSelector'\nimport Input from 'components/Input'\nimport { useAllSimulatorData } from 'state/simulator/hooks'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { roundToNDecimals, toTwoNonZeroDecimals } from 'utils/numbers'\n\nconst Wrapper = styled.div`\n  color: ${({ theme }) => theme.text2};\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: center;\n`\n\nconst InputWrapper = styled.div`\n  width: 110px;\n  margin: 0 12px;\n  // padding-top: 32px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst InputWrapper2 = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst PercentageLabel = styled.div`\n  margin-left: 6px;\n`\n\nconst AbsValueWrapper = styled.div`\n  margin-top: 6px;\n  padding-right: 16px;\n`\n\nconst InputLabel = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.text2};\n  margin-bottom: 6px;\n  padding-right: 16px;\n`\n\nconst SliderWrapper = styled.div`\n  padding-top: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n`\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface Props {\n  initialMinRatio?: number\n  initialMaxRatio?: number\n  positionIndex: number\n  onPriceLimitChange: (value: number, limit: 'min' | 'max') => void\n  disabled: boolean\n  // priceMin: Position['priceMin'];\n  // priceMax: Position['priceMax'];\n  // infiniteRangeSelected: Position['infiniteRangeSelected'];\n}\n\n// eslint-disable-next-line no-empty-pattern\nexport default function RelativeRangeSelector({\n  initialMinRatio = -100,\n  initialMaxRatio = 100,\n  positionIndex,\n  onPriceLimitChange,\n  disabled,\n}: // positionIndex,\n// priceMin,\n// priceMax,\n// infiniteRangeSelected,\nProps) {\n  // const dispatch = useDispatch();\n  const { tokenSymbols, currentTokenPricesUsd } = useAllSimulatorData()\n  const [sliderValues, setSliderValues] = useState([initialMinRatio, initialMaxRatio])\n\n  const currentPriceRatio = currentTokenPricesUsd[0] / currentTokenPricesUsd[1]\n\n  // TODO there is some bug. The input values do not change when I change the priceRatioOrder\n  const [sliderMinPrice, setSliderMinPrice] = useState(initialMinRatio)\n  const [sliderMaxPrice, setSliderMaxPrice] = useState(initialMaxRatio)\n  const handleSliderLimitPriceChange = (value: string, price: 'min' | 'max') => {\n    const typedValueFloat = parseFloat(value)\n    if (price === 'min') {\n      setSliderMinPrice(typedValueFloat)\n      setSliderValues([typedValueFloat, sliderValues[1]])\n    }\n    if (price === 'max') {\n      setSliderMaxPrice(typedValueFloat)\n      setSliderValues([sliderValues[0], typedValueFloat])\n    }\n  }\n\n  const getAbsolutePriceRatio = (currentPriceRatio: number, percentageDifference: number) =>\n    toTwoNonZeroDecimals(currentPriceRatio + (percentageDifference / 100) * currentPriceRatio)\n\n  const handleSliderMoveChange = (newValue: number[]) => {\n    setSliderValues(newValue)\n    // call function that saves changes to redux\n    // newValue is percentage difference which the user selected. Compute price from that and save that value to redux.\n    onPriceLimitChange(getAbsolutePriceRatio(currentPriceRatio, newValue[0]), 'min')\n    onPriceLimitChange(getAbsolutePriceRatio(currentPriceRatio, newValue[1]), 'max')\n  }\n\n  // TODO if mark out of range, do not show\n  const marks = [\n    {\n      value: 0,\n      label: '',\n    },\n  ]\n\n  return (\n    <Wrapper>\n      <InputWrapper>\n        <InputLabel>Min</InputLabel>\n        <InputWrapper2>\n          <Input\n            disabled={disabled}\n            value={sliderValues[0].toString()}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              handleSliderLimitPriceChange(event.target.value.trim(), 'min')\n            }}\n            useWhiteBackground\n            variant=\"small\"\n            type=\"number\"\n          />\n          <PercentageLabel>%</PercentageLabel>\n        </InputWrapper2>\n        <AbsValueWrapper>{getAbsolutePriceRatio(currentPriceRatio, sliderValues[0])}</AbsValueWrapper>\n      </InputWrapper>\n\n      <SliderWrapper>\n        <RangeSelector\n          disabled={disabled}\n          min={sliderMinPrice}\n          max={sliderMaxPrice}\n          step={0.01}\n          width={240}\n          marks={marks}\n          value={sliderValues}\n          onChange={(_: any, newValue: number[]) => handleSliderMoveChange(newValue)}\n        />\n      </SliderWrapper>\n      <InputWrapper>\n        <InputLabel>Max</InputLabel>\n        <InputWrapper2>\n          <Input\n            disabled={disabled}\n            value={sliderValues[1].toString()}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              handleSliderLimitPriceChange(event.target.value.trim(), 'max')\n            }}\n            useWhiteBackground\n            variant=\"small\"\n            type=\"number\"\n          />\n          <PercentageLabel>%</PercentageLabel>\n        </InputWrapper2>\n        <AbsValueWrapper>{getAbsolutePriceRatio(currentPriceRatio, sliderValues[1])}</AbsValueWrapper>\n      </InputWrapper>\n    </Wrapper>\n  )\n}\n","import Checkbox from 'components/Checkbox'\nimport Input from 'components/Input'\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPositionInvestedAmount, toggleInfiniteRange } from 'state/simulator/actions'\nimport { Position } from 'state/simulator/reducer'\nimport styled from 'styled-components'\nimport { AppDispatch } from '../../../../state'\nimport RangeSelector from './RangeSelector'\nimport RangeTypeSelect, { RangeTypes } from './RangeTypeSelect'\nimport { useAllSimulatorData } from 'state/simulator/hooks'\nimport AbsoluteSelector from './RangeSelector/AbsoluteSelector'\nimport RelativeSelector from './RangeSelector/RelativeSelector'\nimport { setPositionMinPrice, setPositionMaxPrice } from 'state/simulator/actions'\nimport { roundToNDecimals } from 'utils/numbers'\n\nconst Wrapper = styled.div`\n  color: ${({ theme }) => theme.text3};\n`\n\nconst Headline = styled.div`\n  color: ${({ theme }) => theme.text3};\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n  margin-bottom: 20px;\n`\n\nconst RangeInputsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst RangeTypeSelectWrapper = styled.div`\n  margin-top: 50px;\n`\n\nconst RangeSelectorWrapper = styled.div`\n  height: 120px;\n  display: flex;\n  align-items: center;\n`\n\nconst InfiniteRangeWrapper = styled.div`\n  margin-bottom: 20px;\n  color: ${({ theme }) => theme.text3};\n`\n\nconst InvestmentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 20px;\n  margin-top: 20px;\n`\n\nconst InvestmentTitle = styled.div`\n  margin-right: 20px;\n`\n\nconst InvestmentInputWrapper = styled.div`\n  width: 120px;\n  margin-right: 10px;\n`\n\nconst CurrentPriceLabel = styled.div`\n  width: 100%;\n  text-align: center;\n`\n\ninterface Props {\n  positionIndex: number\n  investmentUsd: Position['investmentUsd']\n  priceMin: Position['priceMin']\n  priceMax: Position['priceMax']\n  infiniteRangeSelected: Position['infiniteRangeSelected']\n}\n\nexport default function PositionSelector({ positionIndex, investmentUsd, infiniteRangeSelected }: Props) {\n  const dispatch = useDispatch<AppDispatch>()\n  const [rangeSelectorType, setRangeSelectorType] = useState<RangeTypes>('relative')\n  const { priceRatioOrder, tokenSymbols, currentTokenPricesUsd } = useAllSimulatorData()\n  const currentPriceRatio = currentTokenPricesUsd[0] / currentTokenPricesUsd[1]\n\n  const handleInvestmentChange = (inputValue: string) => {\n    const inputValueFloat = parseFloat(inputValue)\n    dispatch(setPositionInvestedAmount({ value: inputValueFloat, positionIndex }))\n  }\n\n  const handlePriceLimitChange = (price: number, priceLimit: 'min' | 'max') => {\n    if (priceLimit === 'min') dispatch(setPositionMinPrice({ price, positionIndex }))\n    if (priceLimit === 'max') dispatch(setPositionMaxPrice({ price, positionIndex }))\n  }\n\n  const getPriceRangeSelector = (selectorType: RangeTypes, priceOrder: string, disabled: boolean) => {\n    if (selectorType === 'relative') {\n      if (priceOrder === 'default') {\n        return (\n          <RelativeSelector\n            key=\"RelativeSelector0\"\n            disabled={disabled}\n            positionIndex={positionIndex}\n            onPriceLimitChange={(value, limit) => handlePriceLimitChange(value, limit)}\n          />\n        )\n      } else {\n        return (\n          <RelativeSelector\n            key=\"RelativeSelector1\"\n            disabled={disabled}\n            positionIndex={positionIndex}\n            onPriceLimitChange={(value, limit) => handlePriceLimitChange(value, limit)}\n          />\n        )\n      }\n    } else {\n      if (priceOrder === 'default') {\n        return (\n          <AbsoluteSelector\n            key=\"AbsoluteSelector0\"\n            disabled={disabled}\n            positionIndex={positionIndex}\n            onPriceLimitChange={(value, limit) => handlePriceLimitChange(value, limit)}\n          />\n        )\n      } else {\n        return (\n          <AbsoluteSelector\n            key=\"AbsoluteSelector1\"\n            disabled={disabled}\n            positionIndex={positionIndex}\n            onPriceLimitChange={(value, limit) => handlePriceLimitChange(value, limit)}\n          />\n        )\n      }\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Headline>Specify price range and invested amount</Headline>\n      <RangeInputsWrapper>\n        <InfiniteRangeWrapper>\n          <Checkbox\n            isChecked={infiniteRangeSelected}\n            onClick={() => {\n              dispatch(toggleInfiniteRange({ positionIndex }))\n            }}\n          >\n            Infinite range (Uniswap v2 approach)\n          </Checkbox>\n        </InfiniteRangeWrapper>\n\n        {getPriceRangeSelector(rangeSelectorType, priceRatioOrder, infiniteRangeSelected)}\n        {/* <RangeSelectorWrapper>\n          <RangeSelector type={rangeSelectorType} positionIndex={positionIndex} disabled={infiniteRangeSelected} />\n        </RangeSelectorWrapper> */}\n\n        <CurrentPriceLabel>{`Current: 1 ${tokenSymbols[0]} = ${roundToNDecimals(currentPriceRatio, 5)} ${\n          tokenSymbols[1]\n        } `}</CurrentPriceLabel>\n\n        <RangeTypeSelectWrapper>\n          <RangeTypeSelect\n            typeSelected={rangeSelectorType}\n            onTypeChange={(type) => {\n              setRangeSelectorType(type)\n            }}\n          />\n        </RangeTypeSelectWrapper>\n      </RangeInputsWrapper>\n\n      <InvestmentWrapper>\n        <InvestmentTitle>Your investment in this position:</InvestmentTitle>\n        <InvestmentInputWrapper>\n          {/* TODO display in formatted fiat format */}\n          <Input\n            value={investmentUsd.toString()}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              handleInvestmentChange(event.target.value.trim())\n            }}\n            useWhiteBackground\n            variant=\"small\"\n            type=\"number\"\n          />\n        </InvestmentInputWrapper>\n        USD\n      </InvestmentWrapper>\n    </Wrapper>\n  )\n}\n","import CollapsibleContainer from 'components/CollapsibleContainer'\nimport React, { useState } from 'react'\nimport { Position as PositionInterface } from 'state/simulator/reducer'\nimport styled from 'styled-components'\nimport PositionOverview from './PositionOverview'\nimport PositionSelector from './PositionSelector'\n\nconst Wrapper = styled.div``\n\nconst PositionHeadline = styled.div<{ isOpened: boolean }>`\n  display: flex;\n  color: ${({ theme }) => theme.text2};\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n  padding: 12px 20px;\n  width: 100%;\n  border-radius: ${(props) => (props.isOpened ? '10px 10px 0px 0px' : '10px')};\n  background-color: ${({ theme }) => theme.black};\n`\n\nconst PositionDataWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg0};\n  border-radius: 0px 0px 10px 10px;\n  display: flex;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n  flex-direction: column;\n  `}\n`\n\nconst PositionSelectorWrapper = styled.div`\n  border-bottom: none;\n  padding: 20px;\n  min-width: 44%;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n  border-right: none;\n  padding-right: 0;\n  padding-bottom: 20px;\n  margin-right: 0;\n  margin-bottom: 20px;\n  `}\n`\n\nconst PositionOverviewWrapper = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-grow: 1;\n`\n\nconst ExpandButton = styled.div`\n  cursor: pointer;\n  border-radius: 20px;\n  width: 22px;\n  height: 22px;\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  justify-content: flex-end;\n`\n\ninterface Props {\n  positionIndex: number\n  investmentUsd: PositionInterface['investmentUsd']\n  priceMin: PositionInterface['priceMin']\n  priceMax: PositionInterface['priceMax']\n  infiniteRangeSelected: PositionInterface['infiniteRangeSelected']\n}\n\nexport default function Position({ positionIndex, investmentUsd, priceMin, priceMax, infiniteRangeSelected }: Props) {\n  //   const theme = useTheme()\n  const [isExpanded, setIsExpanded] = useState(true)\n\n  return (\n    <Wrapper>\n      {/* TODO add \"REMOVE POSITION button */}\n      <CollapsibleContainer\n        isOpenedDefault\n        onChange={(isOpened: boolean) => {\n          setIsExpanded(isOpened)\n        }}\n        header={\n          <PositionHeadline isOpened={isExpanded}>\n            Position #{positionIndex + 1}\n            {/* {getPositionStatus(\n                        simulatedTokenPricesUsd[0] / simulatedTokenPricesUsd[1],\n                        priceMin,\n                        priceMax,\n                    )} */}\n            <ExpandButton>\n              {/* <Icon icon={isExpanded ? 'ARROW_UP' : 'ARROW_DOWN'} size={16} color={theme.FONT_MEDIUM} /> */}\n            </ExpandButton>\n          </PositionHeadline>\n        }\n        collapseBody={\n          <PositionDataWrapper>\n            <PositionSelectorWrapper>\n              <PositionSelector\n                positionIndex={positionIndex}\n                investmentUsd={investmentUsd}\n                priceMin={priceMin}\n                priceMax={priceMax}\n                infiniteRangeSelected={infiniteRangeSelected}\n              />\n            </PositionSelectorWrapper>\n            <PositionOverviewWrapper>\n              {' '}\n              <PositionOverview\n                positionIndex={positionIndex}\n                investmentUsd={investmentUsd}\n                priceMin={priceMin}\n                priceMax={priceMax}\n                infiniteRangeSelected={infiniteRangeSelected}\n              />\n            </PositionOverviewWrapper>\n          </PositionDataWrapper>\n        }\n      />\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { switchPriceRatioOrder } from 'state/simulator/actions'\nimport { useAllSimulatorData } from 'state/simulator/hooks'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst SwitchPriceLabel = styled.div`\n  margin-right: 20px;\n  color: ${({ theme }) => theme.text2};\n`\nconst SwitchPriceButton = styled.button<{ selected: boolean }>`\n  padding: 8px;\n  border-radius: 5px;\n  margin: 0 4px;\n  border: none;\n\n  background: ${(props) => (props.selected ? props.theme.primary1 : 'inherit')};\n  cursor: pointer;\n  color: ${(props) => (props.selected ? props.theme.white : props.theme.text3)};\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n`\n\nconst PriceReferenceSwitch = () => {\n  const dispatch = useDispatch()\n  const { tokenSymbols, priceRatioOrder } = useAllSimulatorData()\n\n  return (\n    <Wrapper>\n      <SwitchPriceLabel>Choose price reference:</SwitchPriceLabel>\n      <SwitchPriceButton\n        selected={priceRatioOrder === 'default'}\n        // don't allow to click on it when selected\n        disabled={priceRatioOrder === 'default'}\n        onClick={() => {\n          dispatch(switchPriceRatioOrder())\n        }}\n      >\n        {priceRatioOrder === 'default'\n          ? `${tokenSymbols[0]} / ${tokenSymbols[1]}`\n          : `${tokenSymbols[1]} / ${tokenSymbols[0]}`}\n      </SwitchPriceButton>\n      <SwitchPriceButton\n        selected={priceRatioOrder === 'reversed'}\n        disabled={priceRatioOrder === 'reversed'}\n        onClick={() => {\n          dispatch(switchPriceRatioOrder())\n        }}\n      >\n        {priceRatioOrder === 'default'\n          ? `${tokenSymbols[1]} / ${tokenSymbols[0]}`\n          : `${tokenSymbols[0]} / ${tokenSymbols[1]}`}\n      </SwitchPriceButton>\n    </Wrapper>\n  )\n}\n\nexport default PriceReferenceSwitch\n","import Slider from '@material-ui/core/Slider'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useIsDarkMode } from 'state/user/hooks'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { colors as getColors } from 'theme'\n\nconst Wrapper = styled.div<{ width: number }>`\n  width: ${(props) => props.width}px;\n`\n// TODO check if the colors argument is passed and how does it work\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 0,\n  },\n  thumb: (props: any) => ({\n    height: 20,\n    width: 20,\n    marginTop: -8,\n    marginLeft: -8,\n    backgroundColor: props.blue1,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  }),\n  thumbDisabled: (props: any) => ({\n    backgroundColor: props.text2,\n  }),\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n    display: 'none',\n  },\n  track: (props: any) => ({\n    height: 6,\n    borderRadius: 6,\n    backgroundColor: props.bg3,\n    opacity: 1,\n  }),\n  rail: (props: any) => ({\n    height: 6,\n    borderRadius: 6,\n    backgroundColor: props.bg3,\n    opacity: 1,\n  }),\n  trackDisabled: (props: any) => ({\n    height: 6,\n    borderRadius: 6,\n    backgroundColor: props.text3,\n  }),\n}))\n\ninterface Props extends React.ImgHTMLAttributes<HTMLDivElement> {\n  min: number\n  max: number\n  step?: number\n  defaultValue?: number\n  size?: number\n  width?: number\n  onChange?: any\n  value?: number\n  disabled?: boolean\n}\n\nconst MaterialSlider = ({ min, max, step, width = 100, defaultValue = 0, onChange, value, disabled }: Props) => {\n  const isDarkMode = useIsDarkMode()\n  const colors = getColors(isDarkMode)\n  const classes = useStyles(colors)\n\n  return (\n    <Wrapper width={width}>\n      <Slider\n        min={min}\n        max={max}\n        step={step}\n        valueLabelDisplay=\"off\"\n        defaultValue={defaultValue}\n        onChange={onChange}\n        value={value}\n        disabled={disabled}\n        classes={{\n          root: classes.root, // class name, e.g. `classes-nesting-root-x`\n          track: disabled ? classes.trackDisabled : classes.track, // class name, e.g. `classes-nesting-label-x`\n          thumb: disabled ? classes.thumbDisabled : classes.thumb,\n          rail: classes.rail,\n        }}\n      />\n    </Wrapper>\n  )\n}\n\nexport default MaterialSlider\n","import CurrencyLogo from 'components/CurrencyLogo'\nimport { formatDollarAmount } from 'utils/numbers'\nimport Slider from 'components/Slider'\nimport Input from 'components/Input'\nimport useTheme from 'hooks/useTheme'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  height: 66px;\n`\n\nconst TokenNameWrapper = styled.div`\n  display: flex;\n  width: 100px;\n  color: ${({ theme }) => theme.text1};\n`\n\nconst TokenSymbol = styled.div`\n  text-transform: uppercase;\n  margin-left: 10px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nconst InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  max-width: 90px;\n  margin-right: 20px;\n`\n\nconst SliderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-self: flex-start;\n`\n\nconst SliderLabel = styled.div`\n  color: ${({ theme }) => theme.text3};\n`\n\nconst SliderLeftLabel = styled(SliderLabel)`\n  padding-right: 10px;\n`\n\nconst SliderRightLabel = styled(SliderLabel)`\n  padding-left: 12px;\n`\n\nconst SimulatedPrice = styled.div`\n  text-align: right;\n  flex-grow: 1;\n  color: ${({ theme }) => theme.text1};\n`\n\ninterface Props {\n  onSliderMoveChange: (value: number) => void\n  onNewDefaultSliderValue: (value: number) => void\n  tokenAddress: string\n  tokenSymbol: string\n  simulatedPrice: number\n  defaultSliderValue?: number\n  numSteps?: number\n}\n\nconst SimulatePriceRow = ({\n  tokenAddress,\n  tokenSymbol,\n  simulatedPrice,\n  onSliderMoveChange,\n  onNewDefaultSliderValue,\n  defaultSliderValue = 1,\n  numSteps = 100,\n}: Props) => {\n  const theme = useTheme()\n  const [sliderMidValue, setSliderMidValue] = useState(defaultSliderValue)\n  const [sliderValue, setSliderValue] = useState(defaultSliderValue)\n\n  const handleSliderMoveChange = (newValue: number) => {\n    setSliderValue(newValue)\n    onSliderMoveChange(newValue)\n  }\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const typedValueFloat = parseFloat(event.target.value)\n    handleSliderMoveChange(typedValueFloat)\n    setSliderMidValue(typedValueFloat)\n    onNewDefaultSliderValue(typedValueFloat)\n  }\n\n  return (\n    <Wrapper>\n      <TokenNameWrapper>\n        <CurrencyLogo address={tokenAddress} size={'22px'} />\n        <TokenSymbol>{tokenSymbol}</TokenSymbol>\n      </TokenNameWrapper>\n      <InputWrapper>\n        <Input\n          useWhiteBackground\n          variant=\"small\"\n          type=\"number\"\n          value={sliderValue.toString()}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            handleInputChange(event)\n          }}\n        />\n        <div\n          style={{\n            color: theme.text3,\n            marginLeft: '6px',\n          }}\n        >\n          x\n        </div>\n      </InputWrapper>\n      <SliderWrapper>\n        <SliderLeftLabel>0</SliderLeftLabel>\n        <Slider\n          min={0}\n          max={sliderMidValue * 2}\n          step={sliderMidValue / numSteps}\n          value={sliderValue}\n          onChange={(_: any, newValue: number) => handleSliderMoveChange(newValue)}\n        />\n        <SliderRightLabel>{sliderMidValue * 2 ? `${sliderMidValue * 2}x` : ''}</SliderRightLabel>\n      </SliderWrapper>\n      <SimulatedPrice>{formatDollarAmount(simulatedPrice)}</SimulatedPrice>\n    </Wrapper>\n  )\n}\n\nexport default SimulatePriceRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport SimulatePriceRow from './SimulatePriceRow'\nimport { useAllSimulatorData } from 'state/simulator/hooks'\nimport { SimulatorState } from 'state/simulator/reducer'\nimport { formatDollarAmount } from 'utils/numbers'\nconst Wrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg0};\n  padding: 28px;\n  border-radius: 10px;\n  width: 600px;\n  height: fit-content;\n`\n\nconst CurrentPricesWrapper = styled.div`\n  display: flex;\n  padding-top: 20px;\n  margin-top: 20px;\n`\n\nconst CurrentPricesTitle = styled.div`\n  display: flex;\n  flex-grow: 1;\n  color: ${({ theme }) => theme.text2};\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n`\n\nconst CurrentPricesValuesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`\n\nconst CurrentPricesValue = styled.div`\n  color: ${({ theme }) => theme.text2};\n  display: flex;\n  margin-left: 20px;\n  margin-bottom: 8px;\n  text-align: right;\n`\n\nconst PriceRowsWrapper = styled.div<{ priceRatioOrder: SimulatorState['priceRatioOrder'] }>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 5px;\n  min-width: fit-content;\n  word-break: break-word;\n  font-weight: ${({ theme }) => theme.fontWeight.medium};\n  // We don't want to change the order in which items are rendered if priceRatioOrder='reversed'\n  // This line of code makes sure the rendering order stays the same\n  flex-direction: ${(props) => (props.priceRatioOrder === 'default' ? 'column' : 'column-reverse')};\n`\n\nconst SubTitlesWrapper = styled.div`\n  display: flex;\n  margin-bottom: 12px;\n  ${({ theme }) => theme.fontWeight.medium};\n  color: ${({ theme }) => theme.text2};\n  align-items: center;\n`\n\nconst SubTitleLeft = styled.div`\n  flex-grow: 1;\n`\n\nconst SubTitleRight = styled.div`\n  justify-content: flex-end;\n  color: ${({ theme }) => theme.text3};\n`\n\nconst XScrollWrapper = styled.div`\n  overflow-x: auto;\n`\n\ninterface Props {\n  onSliderMoveChange: (value: number, index: number) => void\n  onNewDefaultSliderValue: (value: number, index: number) => void\n  simulatedCoefficients: number[]\n  tokenSymbols: string[]\n  tokenAddresses: string[]\n  poolId: string\n  currentTokenPrices: number[]\n}\nconst PriceSimulationBox = ({\n  onSliderMoveChange,\n  simulatedCoefficients,\n  onNewDefaultSliderValue,\n  tokenSymbols,\n  tokenAddresses,\n  poolId,\n  currentTokenPrices,\n}: Props) => {\n  const { priceRatioOrder } = useAllSimulatorData()\n\n  return (\n    <Wrapper>\n      <SubTitlesWrapper>\n        <SubTitleLeft>Set tokens relative price change</SubTitleLeft>\n        <SubTitleRight>Simulated price</SubTitleRight>\n      </SubTitlesWrapper>\n\n      <XScrollWrapper>\n        <PriceRowsWrapper priceRatioOrder={priceRatioOrder}>\n          {tokenSymbols.map((tokenSymbol, i) => (\n            <SimulatePriceRow\n              // make sure the id is unique to the pool and the token. We want the token sliders\n              // to re/render if in the new pool are the same tokens as in the previous pool\n              key={`${poolId}${tokenAddresses[i]}`}\n              onSliderMoveChange={(newValue) => {\n                onSliderMoveChange(newValue, i)\n              }}\n              onNewDefaultSliderValue={(newValue) => {\n                onNewDefaultSliderValue(newValue, i)\n              }}\n              tokenAddress={tokenAddresses[i]}\n              tokenSymbol={tokenSymbol}\n              simulatedPrice={currentTokenPrices[i] * simulatedCoefficients[i]}\n            />\n          ))}\n        </PriceRowsWrapper>\n      </XScrollWrapper>\n      <CurrentPricesWrapper>\n        <CurrentPricesTitle>Current prices:</CurrentPricesTitle>\n        <CurrentPricesValuesWrapper>\n          <CurrentPricesValue>\n            {`1 ${tokenSymbols[0]} = ${formatDollarAmount(currentTokenPrices[0])}`}\n          </CurrentPricesValue>\n          <CurrentPricesValue>\n            {`1 ${tokenSymbols[1]} = ${formatDollarAmount(currentTokenPrices[1])}`}\n          </CurrentPricesValue>\n        </CurrentPricesValuesWrapper>\n      </CurrentPricesWrapper>\n    </Wrapper>\n  )\n}\n\nexport default PriceSimulationBox\n","import React, { useRef, useCallback, useState, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport Row, { RowFixed } from 'components/Row'\nimport { HideSmall, TYPE } from 'theme'\nimport Hotkeys from 'react-hot-keys'\nimport { useFetchSearchResults } from 'data/search'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { formatDollarAmount } from 'utils/numbers'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { GreyBadge } from 'components/Card'\nimport { feeTierPercent } from 'utils'\nimport { useSavedTokens, useSavedPools } from 'state/user/hooks'\nimport { SavedIcon } from 'components/Button'\nimport { useHistory } from 'react-router-dom'\nimport { useTokenDatas } from 'state/tokens/hooks'\nimport { usePoolDatas } from 'state/pools/hooks'\nimport HoverInlineText from 'components/HoverInlineText'\nimport { TOKEN_HIDE, POOL_HIDE } from '../../../constants/index'\nimport { setNewSimulationPoolData } from 'state/simulator/actions'\n\nconst Container = styled.div`\n  position: relative;\n  z-index: 30;\n  width: 100%;\n`\n\nconst Wrapper = styled(Row)`\n  background-color: ${({ theme }) => theme.black};\n  padding: 10px 16px;\n  width: 500px;\n  height: 48px;\n  border-radius: 20px;\n  positon: relative;\n  z-index: 9999;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    width: 100%;\n  `};\n`\n\nconst StyledInput = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  width: 100%;\n  font-size: 16px;\n  outline: none;\n  color: ${({ theme }) => theme.text1};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n    font-size: 16px;\n  }\n\n  @media screen and (max-width: 640px) {\n    ::placeholder {\n      font-size: 1rem;\n    }\n  }\n`\n\nconst Menu = styled.div<{ hide: boolean }>`\n  display: flex;\n  flex-direction: column;\n  z-index: 9999;\n  width: 640px;\n  top: 50px;\n  max-height: 600px;\n  overflow: auto;\n  left: 0;\n  padding: 1.5rem;\n  padding-bottom: 1.5rem;\n  position: absolute;\n  background: ${({ theme }) => theme.bg0};\n  border-radius: 8px;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.04);\n  display: ${({ hide }) => hide && 'none'};\n  border: 1px solid ${({ theme }) => theme.pink1};\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    position: absolute;\n    margin-top: 4px;\n    z-index: 9999;\n    width: 100%;\n    max-height: 400px;\n  `};\n`\n\nconst Blackout = styled.div`\n  position: fixed;\n  z-index: 30;\n  background-color: black;\n  opacity: 0.7;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 1.5fr repeat(2, 1fr);\n  align-items: center;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    grid-template-columns: 1fr;\n  `};\n`\n\nconst Break = styled.div`\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg1};\n  width: 100%;\n`\n\nconst HoverText = styled.div<{ hide?: boolean | undefined }>`\n  color: ${({ theme }) => theme.blue1}\n  display: ${({ hide = false }) => hide && 'none'};\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst HoverRowLink = styled.div`\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst OptionButton = styled.div<{ enabled: boolean }>`\n  width: fit-content;\n  padding: 4px 8px;\n  border-radius: 8px;\n  display: flex;\n  font-size: 12px;\n  font-weight: 600;\n  margin-right: 10px;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme, enabled }) => (enabled ? theme.pink1 : 'transparent')};\n  color: ${({ theme, enabled }) => (enabled ? theme.white : theme.pink1)};\n  :hover {\n    opacity: 0.6;\n    cursor: pointer;\n  }\n`\n\nconst PoolSelect = ({ ...rest }) => {\n  const history = useHistory()\n\n  const ref = useRef<HTMLInputElement>(null)\n  const menuRef = useRef<HTMLDivElement>(null)\n  const textRef = useRef<HTMLDivElement>(null)\n\n  const handleDown = useCallback(() => {\n    if (ref != null && ref.current !== null) {\n      ref.current.focus()\n    }\n  }, [])\n\n  const [focused, setFocused] = useState<boolean>(false)\n  const [showMenu, setShowMenu] = useState(false)\n  const [value, setValue] = useState('')\n\n  const { tokens, pools } = useFetchSearchResults(value)\n\n  useEffect(() => {\n    if (value !== '') {\n      setFocused(true)\n    } else {\n      setFocused(false)\n    }\n  }, [value])\n\n  const [poolsShown, setPoolsShown] = useState(3)\n\n  const handleClick = (e: any) => {\n    if (!(menuRef.current && menuRef.current.contains(e.target)) && !(ref.current && ref.current.contains(e.target))) {\n      setPoolsShown(3)\n      setShowMenu(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick)\n    return () => {\n      document.removeEventListener('click', handleClick)\n    }\n  })\n\n  // watchlist\n  const [savedPools, addSavedPool] = useSavedPools()\n\n  const handleNav = (to: string) => {\n    setShowMenu(false)\n    setPoolsShown(3)\n    history.push(to)\n  }\n\n  // get date for watchlist\n  const watchListPoolData = usePoolDatas(savedPools)\n\n  // filter on view\n  const [showWatchlist, setShowWatchlist] = useState(false)\n\n  const poolForList = useMemo(() => (showWatchlist ? watchListPoolData ?? [] : pools), [\n    pools,\n    showWatchlist,\n    watchListPoolData,\n  ])\n\n  return (\n    <Hotkeys keyName=\"command+/\" onKeyDown={handleDown}>\n      {showMenu ? <Blackout /> : null}\n      <Container>\n        <Wrapper {...rest}>\n          <StyledInput\n            type=\"text\"\n            value={value}\n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n            placeholder=\"Search pools or tokens\"\n            ref={ref}\n            onFocus={() => {\n              setFocused(true)\n              setShowMenu(true)\n            }}\n            onBlur={() => setFocused(false)}\n          />\n          {!focused && <TYPE.gray pl=\"2px\">⌘/</TYPE.gray>}\n        </Wrapper>\n        <Menu hide={!showMenu} ref={menuRef}>\n          <AutoColumn gap=\"lg\">\n            <AutoColumn gap=\"sm\">\n              <RowFixed>\n                <OptionButton enabled={!showWatchlist} onClick={() => setShowWatchlist(false)}>\n                  Search\n                </OptionButton>\n                <OptionButton enabled={showWatchlist} onClick={() => setShowWatchlist(true)}>\n                  Watchlist\n                </OptionButton>\n              </RowFixed>\n            </AutoColumn>\n\n            <ResponsiveGrid>\n              <TYPE.main>Pools</TYPE.main>\n              <HideSmall>\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                  Volume 24H\n                </TYPE.main>\n              </HideSmall>\n              <HideSmall>\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                  TVL\n                </TYPE.main>\n              </HideSmall>\n              <HideSmall>\n                {/* <TYPE.main textAlign=\"end\" fontSize=\"12px\">\n                  Price\n                </TYPE.main> */}\n              </HideSmall>\n            </ResponsiveGrid>\n            {poolForList\n              .filter((p) => !POOL_HIDE.includes(p.address))\n              .slice(0, poolsShown)\n              .map((p, i) => {\n                return (\n                  <HoverRowLink onClick={() => handleNav('/simulator/' + p.address)} key={i}>\n                    <ResponsiveGrid key={i}>\n                      <RowFixed>\n                        <DoubleCurrencyLogo address0={p.token0.address} address1={p.token1.address} />\n                        <TYPE.label ml=\"10px\" style={{ whiteSpace: 'nowrap' }}>\n                          <HoverInlineText maxCharacters={12} text={`${p.token0.symbol} / ${p.token1.symbol}`} />\n                        </TYPE.label>\n                        <GreyBadge ml=\"10px\">{feeTierPercent(p.feeTier)}</GreyBadge>\n                        <SavedIcon\n                          id=\"watchlist-icon\"\n                          size={'16px'}\n                          style={{ marginLeft: '10px' }}\n                          fill={savedPools.includes(p.address)}\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            addSavedPool(p.address)\n                          }}\n                        />\n                      </RowFixed>\n                      <HideSmall>\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(p.volumeUSD)}</TYPE.label>\n                      </HideSmall>\n                      <HideSmall>\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(p.tvlUSD)}</TYPE.label>\n                      </HideSmall>\n                      {/* <HideSmall>\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(p.token0Price)}</TYPE.label>\n                      </HideSmall> */}\n                    </ResponsiveGrid>\n                  </HoverRowLink>\n                )\n              })}\n            {poolForList.length === 0 ? (\n              <TYPE.main>{showWatchlist ? 'Saved pools will appear here' : 'No results'}</TYPE.main>\n            ) : null}\n            <HoverText\n              onClick={() => {\n                setPoolsShown(poolsShown + 5)\n              }}\n              hide={!(poolForList.length > 3 && poolForList.length >= poolsShown)}\n              ref={textRef}\n            >\n              See more...\n            </HoverText>\n          </AutoColumn>\n        </Menu>\n        {/* <BelowMedium>\n          <MobileMenu>hey</MobileMenu>\n        </BelowMedium> */}\n      </Container>\n    </Hotkeys>\n  )\n}\n\nexport default PoolSelect\n","import { useState, useLayoutEffect, useMemo } from 'react'\nimport { shade } from 'polished'\nimport Vibrant from 'node-vibrant'\nimport { hex } from 'wcag-contrast'\nimport { Token, ChainId } from '@uniswap/sdk'\nimport uriToHttp from 'utils/uriToHttp'\nimport { isAddress } from 'utils'\n\nasync function getColorFromToken(token: Token): Promise<string | null> {\n  if (token.chainId === ChainId.RINKEBY && token.address === '0xc7AD46e0b8a400Bb3C915120d284AafbA8fc4735') {\n    return Promise.resolve('#FAAB14')\n  }\n\n  const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`\n\n  return Vibrant.from(path)\n    .getPalette()\n    .then((palette) => {\n      if (palette?.Vibrant) {\n        let detectedHex = palette.Vibrant.hex\n        let AAscore = hex(detectedHex, '#FFF')\n        while (AAscore < 3) {\n          detectedHex = shade(0.005, detectedHex)\n          AAscore = hex(detectedHex, '#FFF')\n        }\n        return detectedHex\n      }\n      return null\n    })\n    .catch(() => null)\n}\n\nasync function getColorFromUriPath(uri: string): Promise<string | null> {\n  const formattedPath = uriToHttp(uri)[0]\n\n  return Vibrant.from(formattedPath)\n    .getPalette()\n    .then((palette) => {\n      if (palette?.Vibrant) {\n        return palette.Vibrant.hex\n      }\n      return null\n    })\n    .catch(() => null)\n}\n\nexport function useColor(address?: string) {\n  const [color, setColor] = useState('#2172E5')\n\n  const formattedAddress = isAddress(address)\n\n  const token = useMemo(() => {\n    return formattedAddress ? new Token(1, formattedAddress, 0) : undefined\n  }, [formattedAddress])\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (token) {\n      getColorFromToken(token).then((tokenColor) => {\n        if (!stale && tokenColor !== null) {\n          setColor(tokenColor)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#2172E5')\n    }\n  }, [token])\n\n  return color\n}\n\nexport function useListColor(listImageUri?: string) {\n  const [color, setColor] = useState('#2172E5')\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (listImageUri) {\n      getColorFromUriPath(listImageUri).then((color) => {\n        if (!stale && color !== null) {\n          setColor(color)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#2172E5')\n    }\n  }, [listImageUri])\n\n  return color\n}\n","/* eslint-disable max-classes-per-file */\nimport React, { PureComponent } from 'react'\nimport { Area, AreaChart, CartesianGrid, ReferenceLine, ResponsiveContainer, XAxis, YAxis, Label } from 'recharts'\nimport styled, { DefaultTheme } from 'styled-components'\n\nconst Title = styled.div`\n  color: ${({ theme }) => theme.text2};\n  text-align: center;\n  width: 100%;\n`\n\ninterface ChartDataItem {\n  price: number\n  liquidityValues: Array<number | undefined>\n}\n\ninterface Props {\n  height?: number\n  data: ChartDataItem[]\n  currentPrice: number\n  simulatedPrice: number | null\n  tokenSymbols: string[]\n  theme: DefaultTheme\n  maxInvestment: number\n}\n\ninterface State {\n  highlightedAreaId: string | null\n}\n\nclass SimulatedDensityChart extends PureComponent<Props, State> {\n  render() {\n    const { theme, currentPrice, simulatedPrice, data, maxInvestment, tokenSymbols } = this.props\n\n    return (\n      <div>\n        <Title>Current liquidity distribution</Title>\n        <ResponsiveContainer width=\"100%\" height={350}>\n          <AreaChart\n            width={800}\n            height={320}\n            data={data}\n            margin={{\n              top: 40,\n              right: 10,\n              bottom: 40,\n              left: 70,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"2 2\" />\n            {/* consider adding reference area for the liquidity amount \n                        https://gaurav5430.medium.com/exploring-recharts-reference-area-2fd68bb33ca5 */}\n            {data.map((_data, i) => {\n              const dataKeyName = `liquidityValues[${i}]`\n              return (\n                <Area\n                  key={dataKeyName}\n                  isAnimationActive={false}\n                  dataKey={dataKeyName}\n                  name={`${i}`}\n                  fill={theme.blue1}\n                  strokeWidth={1.5}\n                  fillOpacity={0.8}\n                />\n              )\n            })}\n\n            <XAxis\n              type=\"number\"\n              xAxisId={0}\n              dataKey=\"price\"\n              tick={{\n                fontSize: theme.fontSize.small,\n              }}\n              domain={['dataMin', 'dataMax']}\n            >\n              <Label\n                value={`${tokenSymbols[0]} / ${tokenSymbols[1]}`}\n                position=\"bottom\"\n                offset={15}\n                style={{\n                  textAnchor: 'middle',\n                  fontSize: theme.fontSize.normal,\n                  fill: theme.text2,\n                }}\n              />\n            </XAxis>\n\n            <YAxis\n              tick={{ fontSize: theme.fontSize.small }}\n              domain={[0, 1.2 * maxInvestment]}\n              label={{\n                value: 'Liquidity',\n                angle: -90,\n                offset: 460,\n                position: 'center',\n                dx: -90,\n                style: {\n                  textAnchor: 'middle',\n                  fontSize: theme.fontSize.normal,\n                  fill: theme.text2,\n                },\n              }}\n            />\n            <ReferenceLine\n              x={currentPrice}\n              strokeDasharray=\"3 3\"\n              isFront\n              stroke={theme.blue1}\n              label={{\n                position: 'top',\n                value: 'Current price',\n                fill: theme.blue2,\n                fontSize: 14,\n              }}\n            />\n\n            {simulatedPrice && (\n              <ReferenceLine\n                x={simulatedPrice}\n                strokeDasharray=\"3 3\"\n                isFront\n                stroke={theme.green1}\n                label={{\n                  position: 'top',\n                  value: 'Simulated price',\n                  fill: theme.green1,\n                  fontSize: 14,\n                }}\n              />\n            )}\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    )\n  }\n}\n\nexport default SimulatedDensityChart\n","import { ButtonSecondary } from 'components/Button'\nimport Position from 'components/simulator/Position'\nimport PriceReferenceSwitch from 'components/simulator/PriceReferenceSwitch'\nimport PriceSimulationBox from 'components/simulator/PriceSimulationBox'\nimport useTheme from 'hooks/useTheme'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addPosition, setDefaultSliderPriceCoefficient, setSimulatedPriceCoefficients } from 'state/simulator/actions'\nimport { useAllSimulatorData } from 'state/simulator/hooks'\nimport styled from 'styled-components'\nimport SearchSmall from 'components/Search'\nimport { usePoolDatas } from 'state/pools/hooks'\nimport { RouteComponentProps } from 'react-router-dom'\nimport PoolSelect from 'components/simulator/PoolSelect'\nimport { setNewSimulationPoolData } from 'state/simulator/actions'\nimport { useTokenPriceData, useAllTokenData } from 'state/tokens/hooks'\nimport { ThemedBackground, PageWrapper } from 'pages/styled'\nimport { useColor } from 'hooks/useColor'\nimport BarChart from 'components/BarChart'\nimport SimulatedDensityChart from 'components/SimulatedDensityChart'\nimport { multiplyArraysElementWise } from 'utils/math'\nimport { getDataForSimulatedDensityChart } from 'utils/simulator'\n\nconst Wrapper = styled.div`\n  padding-bottom: 40px;\n  width: 100%;\n`\n\nconst ContentWrapper = styled.div`\n  padding: 10px;\n`\n\nconst SectionHeadline = styled(ContentWrapper)`\n  padding: 20px;\n  font-size: ${({ theme }) => theme.fontSize.h3};\n  font-weight: ${({ theme }) => theme.fontWeight.demiBold};\n  color: ${({ theme }) => theme.text2};\n`\n\nconst PoolSelectTitle = styled.div`\n  margin-right: 20px;\n  width: 150px;\n  font-size: ${({ theme }) => theme.fontSize.h3};\n  font-weight: ${({ theme }) => theme.fontWeight.demiBold};\n  color: ${({ theme }) => theme.text2};\n`\n\nconst PositionsHeadline = styled(ContentWrapper)`\n  display: flex;\n  margin-top: 20px;\n`\n\nconst PositionsTitle = styled.div`\n  display: flex;\n  flex-grow: 1;\n  font-size: ${({ theme }) => theme.fontSize.h3};\n  font-weight: ${({ theme }) => theme.fontWeight.demiBold};\n  color: ${({ theme }) => theme.text2};\n`\n\nconst PositionWrapper = styled.div`\n  margin-bottom: 20px;\n`\n\nconst PoolSelectWrapper = styled(ContentWrapper)`\n  align-items: center;\n  display: flex;\n  border-bottom: 1px solid ${({ theme }) => theme.text4};\n  padding-bottom: 20px;\n`\n\nconst PositionsSelectorWrapper = styled(ContentWrapper)``\n\nconst AddPositionButtonWrapper = styled.div`\n  display: flex;\n  flex-grow: 1;\n  justify-content: flex-end;\n  margin-top: 10px;\n  width: 200px;\n  margin: 0 20px 0 auto;\n`\n\nconst AddPositionButton = styled(ButtonSecondary)`\n  padding: 10px;\n`\n\nconst SimulationBoxWrapper = styled(ContentWrapper)`\n  display: flex;\n  width: 100%;\n  ${({ theme }) => theme.mediaWidth.upToLarge`\n  flex-direction: column;\n  `}\n`\n\nconst ChartWrapper = styled.div`\n  width: 620px;\n  margin-left: 50px;\n`\n\nconst Simulator = ({\n  match: {\n    params: { address },\n  },\n}: RouteComponentProps<{ address: string }>) => {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n    console.log('1. Calling simulator useEffect()')\n  }, [])\n\n  // theming\n  const backgroundColor = useColor(address)\n  const theme = useTheme()\n  const dispatch = useDispatch()\n  const {\n    simulatedPriceCoefficients,\n    poolId,\n    tokenAddresses,\n    tokenSymbols,\n    currentTokenPricesUsd,\n    positions,\n  } = useAllSimulatorData()\n\n  const poolData = usePoolDatas([address])[0]\n  const allTokens = useAllTokenData()\n\n  useEffect(() => {\n    console.log('2. Calling simulator useEffect()')\n    console.log('poolData', poolData)\n    console.log('allTokens', allTokens)\n\n    if (poolData && allTokens && Object.keys(poolData).length !== 0 && Object.keys(allTokens).length !== 0) {\n      const token0Address = poolData.token0.address\n      const token1Address = poolData.token1.address\n\n      const token0PriceUSD = allTokens[token0Address].data?.priceUSD\n      const token1PriceUSD = allTokens[token1Address].data?.priceUSD\n\n      if (token0PriceUSD && token1PriceUSD) {\n        dispatch(\n          setNewSimulationPoolData({\n            poolId: address,\n            tokenSymbols: [poolData.token0.symbol, poolData.token1.symbol],\n            tokenAddresses: [poolData.token0.address, poolData.token1.address],\n            tokenWeights: [0.5, 0.5],\n            currentTokenPricesUsd: [token0PriceUSD, token1PriceUSD],\n            poolTokenReserves: [poolData.tvlToken0, poolData.tvlToken1],\n            swapFee: poolData.feeTier,\n            volume24Usd: poolData.volumeUSD,\n          })\n        )\n      }\n    }\n\n    // check if pool address in url\n    // if not address in url, allow user to set pool via search\n  }, [address, dispatch, poolData, allTokens])\n\n  const currentPriceRatio = currentTokenPricesUsd[0] / currentTokenPricesUsd[1]\n  const simulatedTokenPricesUsd = multiplyArraysElementWise(currentTokenPricesUsd, simulatedPriceCoefficients)\n  const simulatedPriceRatio = simulatedTokenPricesUsd[0] / simulatedTokenPricesUsd[1]\n\n  const { chartData, maxInvestment } = getDataForSimulatedDensityChart(positions)\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={backgroundColor} />\n      <PoolSelectWrapper>\n        <PoolSelectTitle>Choose pool: </PoolSelectTitle>\n        <PoolSelect />\n      </PoolSelectWrapper>\n      {address && poolData && allTokens && (\n        <>\n          <PositionsHeadline>\n            <PositionsTitle>Define your positions</PositionsTitle>\n            {positions.length > 0 && <PriceReferenceSwitch />}\n          </PositionsHeadline>\n          <PositionsSelectorWrapper>\n            {/* TODO change the way how you render this. \"positions\" array will get re-render every time you change something in any of the positions */}\n            {/* Consider using something like React.memo */}\n            {positions.map((position, i) => (\n              // eslint-disable-next-line react/jsx-key\n              <PositionWrapper>\n                <Position\n                  positionIndex={i}\n                  investmentUsd={position.investmentUsd}\n                  priceMin={position.priceMin}\n                  priceMax={position.priceMax}\n                  infiniteRangeSelected={position.infiniteRangeSelected}\n                />\n              </PositionWrapper>\n            ))}\n            <AddPositionButtonWrapper>\n              <AddPositionButton\n                onClick={() => {\n                  dispatch(addPosition())\n                }}\n              >\n                Add Position\n              </AddPositionButton>\n            </AddPositionButtonWrapper>\n          </PositionsSelectorWrapper>\n          {/* TODO add overall positions overview */}\n          <SectionHeadline>Simulate token prices</SectionHeadline>\n          <SimulationBoxWrapper>\n            <PriceSimulationBox\n              poolId={poolId}\n              tokenSymbols={tokenSymbols}\n              tokenAddresses={tokenAddresses}\n              currentTokenPrices={currentTokenPricesUsd}\n              simulatedCoefficients={simulatedPriceCoefficients}\n              onSliderMoveChange={(newValue, index) => dispatch(setSimulatedPriceCoefficients({ newValue, index }))}\n              onNewDefaultSliderValue={(newValue, index) =>\n                dispatch(setDefaultSliderPriceCoefficient({ newValue, index }))\n              }\n            />\n\n            <ChartWrapper>\n              <SimulatedDensityChart\n                theme={theme}\n                currentPrice={currentPriceRatio}\n                simulatedPrice={simulatedPriceRatio}\n                data={chartData}\n                maxInvestment={maxInvestment}\n                tokenSymbols={tokenSymbols}\n              />\n            </ChartWrapper>\n          </SimulationBoxWrapper>\n        </>\n      )}\n    </PageWrapper>\n  )\n}\n\nexport default Simulator\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ToggleElement = styled.span<{ isActive?: boolean; isOnSwitch?: boolean }>`\n  padding: 0.25rem 0.5rem;\n  border-radius: 14px;\n  background: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.primary1 : theme.text4) : 'none')};\n  color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text3)};\n  font-size: 1rem;\n  font-weight: 400;\n\n  padding: 0.35rem 0.6rem;\n  border-radius: 12px;\n  background: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.primary1 : theme.text4) : 'none')};\n  color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text2)};\n  font-size: 1rem;\n  font-weight: ${({ isOnSwitch }) => (isOnSwitch ? '500' : '400')};\n  :hover {\n    user-select: ${({ isOnSwitch }) => (isOnSwitch ? 'none' : 'initial')};\n    background: ${({ theme, isActive, isOnSwitch }) =>\n      isActive ? (isOnSwitch ? theme.primary1 : theme.text3) : 'none'};\n    color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text3)};\n  }\n`\n\nconst StyledToggle = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\n  border-radius: 12px;\n  border: none;\n  background: ${({ theme }) => theme.bg3};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0;\n`\n\nexport interface ToggleProps {\n  id?: string\n  isActive: boolean\n  toggle: () => void\n}\n\nexport default function Toggle({ id, isActive, toggle }: ToggleProps) {\n  return (\n    <StyledToggle id={id} isActive={isActive} onClick={toggle}>\n      <ToggleElement isActive={isActive} isOnSwitch={true}>\n        On\n      </ToggleElement>\n      <ToggleElement isActive={!isActive} isOnSwitch={false}>\n        Off\n      </ToggleElement>\n    </StyledToggle>\n  )\n}\n\nexport const ToggleWrapper = styled.button<{ width?: string }>`\n  display: flex;\n  align-items: center;\n  width: ${({ width }) => width ?? '100%'}\n  padding: 1px;\n  background: ${({ theme }) => theme.bg2};\n  border-radius: 12px;\n  border: ${({ theme }) => '2px solid ' + theme.bg2};\n  cursor: pointer;\n  outline: none;\n  color: ${({ theme }) => theme.text2};\n\n`\n\nexport const ToggleElementFree = styled.span<{ isActive?: boolean; fontSize?: string }>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 2px 10px;\n  border-radius: 12px;\n  justify-content: center;\n  height: 100%;\n  background: ${({ theme, isActive }) => (isActive ? theme.black : 'none')};\n  color: ${({ theme, isActive }) => (isActive ? theme.text1 : theme.text2)};\n  font-size: ${({ fontSize }) => fontSize ?? '1rem'};\n  font-weight: 600;\n  white-space: nowrap;\n  :hover {\n    user-select: initial;\n    color: ${({ theme, isActive }) => (isActive ? theme.text2 : theme.text3)};\n  }\n  margin-top: 0.5px;\n`\n","import React, { useMemo, useState, useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport {\n  useTokenData,\n  usePoolsForToken,\n  useTokenChartData,\n  useTokenPriceData,\n  useTokenTransactions,\n} from 'state/tokens/hooks'\nimport styled from 'styled-components'\nimport { useColor } from 'hooks/useColor'\nimport { ThemedBackground, PageWrapper } from 'pages/styled'\nimport { shortenAddress, getEtherscanLink } from 'utils'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween, RowFixed, AutoRow, RowFlat } from 'components/Row'\nimport { TYPE, StyledInternalLink } from 'theme'\nimport Loader, { LocalLoader } from 'components/Loader'\nimport { ExternalLink, Download } from 'react-feather'\nimport { ExternalLink as StyledExternalLink } from '../../theme/components'\nimport useTheme from 'hooks/useTheme'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { formatDollarAmount } from 'utils/numbers'\nimport Percent from 'components/Percent'\nimport { ButtonPrimary, ButtonGray, SavedIcon } from 'components/Button'\nimport { DarkGreyCard } from 'components/Card'\nimport { usePoolDatas } from 'state/pools/hooks'\nimport PoolTable from 'components/pools/PoolTable'\nimport LineChart from 'components/LineChart'\nimport { unixToDate } from 'utils/date'\nimport { ToggleWrapper, ToggleElementFree } from 'components/Toggle/index'\nimport BarChart from 'components/BarChart'\nimport CandleChart from 'components/CandleChart'\nimport TransactionTable from 'components/TransactionsTable'\nimport { useSavedTokens } from 'state/user/hooks'\n\nconst PriceText = styled(TYPE.label)`\n  font-size: 36px;\n  line-height: 0.8;\n`\n\nconst ContentLayout = styled.div`\n  display: grid;\n  grid-template-columns: 260px 1fr;\n  grid-gap: 1em;\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`\n\nconst ResponsiveRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-direction: column;\n    align-items: flex-start;\n    row-gap: 24px;\n    width: 100%:\n  `};\n`\n\nenum ChartView {\n  TVL,\n  VOL,\n  PRICE,\n}\n\nexport default function TokenPage({\n  match: {\n    params: { address },\n  },\n}: RouteComponentProps<{ address: string }>) {\n  // theming\n  const backgroundColor = useColor(address)\n  const theme = useTheme()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  // token data\n  const tokenData = useTokenData(address)\n\n  // get the data for the pools this token is a part of\n  const poolsForToken = usePoolsForToken(address)\n  const poolDatas = usePoolDatas(poolsForToken ?? [])\n  const transactions = useTokenTransactions(address)\n  const chartData = useTokenChartData(address)\n\n  const formattedTvlData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: unixToDate(day.date),\n          value: day.totalValueLockedUSD,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [chartData])\n\n  const formattedVolumeData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: unixToDate(day.date),\n          value: day.volumeUSD,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [chartData])\n\n  const [view, setView] = useState(ChartView.TVL)\n  const [latestValue, setLatestValue] = useState<number | undefined>()\n\n  const priceData = useTokenPriceData(address, 3600)\n  const formattedPriceData = useMemo(() => {\n    if (priceData) {\n      return priceData.map((day) => {\n        return {\n          time: parseFloat(day.timestamp),\n          open: day.open,\n          close: day.close,\n          high: day.close,\n          low: day.open,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [priceData])\n\n  // watchlist\n  const [savedTokens, addSavedToken] = useSavedTokens()\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={backgroundColor} />\n      {tokenData ? (\n        <AutoColumn gap=\"16px\">\n          <AutoColumn gap=\"lg\">\n            <RowBetween>\n              <AutoRow gap=\"4px\">\n                <StyledInternalLink to={'/'}>\n                  <TYPE.main>{`Home > `}</TYPE.main>\n                </StyledInternalLink>\n                <StyledInternalLink to={'/tokens'}>\n                  <TYPE.label>{` Tokens `}</TYPE.label>\n                </StyledInternalLink>\n                <TYPE.main>{` > `}</TYPE.main>\n                <TYPE.label>{` ${tokenData.symbol} `}</TYPE.label>\n                <StyledExternalLink href={getEtherscanLink(1, address, 'address')}>\n                  <TYPE.main>{` (${shortenAddress(address)}) `}</TYPE.main>\n                </StyledExternalLink>\n              </AutoRow>\n              <RowFixed gap=\"10px\" align=\"center\">\n                <SavedIcon fill={savedTokens.includes(address)} onClick={() => addSavedToken(address)} />\n                <StyledExternalLink href={getEtherscanLink(1, address, 'address')}>\n                  <ExternalLink stroke={theme.text2} size={'17px'} style={{ marginLeft: '12px' }} />\n                </StyledExternalLink>\n              </RowFixed>\n            </RowBetween>\n            <ResponsiveRow align=\"flex-end\">\n              <AutoColumn gap=\"md\">\n                <RowFixed gap=\"4px\">\n                  <CurrencyLogo address={address} />\n                  <TYPE.label ml={'12px'} fontSize=\"20px\">\n                    {tokenData.name}\n                  </TYPE.label>\n                  <TYPE.main ml={'12px'} fontSize=\"20px\">\n                    ({tokenData.symbol})\n                  </TYPE.main>\n                </RowFixed>\n                <RowFlat style={{ marginTop: '8px' }}>\n                  <PriceText mr=\"10px\"> {formatDollarAmount(tokenData.priceUSD)}</PriceText>\n                  (<Percent value={tokenData.priceUSDChange} />)\n                </RowFlat>\n              </AutoColumn>\n              <RowFixed>\n                <StyledExternalLink href={`https://app.uniswap.org/#/add/${address}`}>\n                  <ButtonGray width=\"170px\" mr=\"12px\" height={'100%'} style={{ height: '44px' }}>\n                    <RowBetween>\n                      <Download size={24} />\n                      <div style={{ display: 'flex', alignItems: 'center' }}>Add Liquidity</div>\n                    </RowBetween>\n                  </ButtonGray>\n                </StyledExternalLink>\n                <StyledExternalLink href={`https://app.uniswap.org/#/swap?inputCurrency=${address}`}>\n                  <ButtonPrimary width=\"100px\" bgColor={backgroundColor} style={{ height: '44px' }}>\n                    Trade\n                  </ButtonPrimary>\n                </StyledExternalLink>\n              </RowFixed>\n            </ResponsiveRow>\n          </AutoColumn>\n          <ContentLayout>\n            <DarkGreyCard>\n              <AutoColumn gap=\"lg\">\n                <AutoColumn gap=\"4px\">\n                  <TYPE.main fontWeight={400}>TVL</TYPE.main>\n                  <TYPE.label fontSize=\"24px\">{formatDollarAmount(tokenData.tvlUSD)}</TYPE.label>\n                  <Percent value={tokenData.tvlUSDChange} />\n                </AutoColumn>\n                <AutoColumn gap=\"4px\">\n                  <TYPE.main fontWeight={400}>24h Trading Vol</TYPE.main>\n                  <TYPE.label fontSize=\"24px\">{formatDollarAmount(tokenData.volumeUSD)}</TYPE.label>\n                  <Percent value={tokenData.volumeUSDChange} />\n                </AutoColumn>\n                <AutoColumn gap=\"4px\">\n                  <TYPE.main fontWeight={400}>7d Trading Vol</TYPE.main>\n                  <TYPE.label fontSize=\"24px\">{formatDollarAmount(tokenData.volumeUSDWeek)}</TYPE.label>\n                </AutoColumn>\n                <AutoColumn gap=\"4px\">\n                  <TYPE.main fontWeight={400}>24h Txns</TYPE.main>\n                  <TYPE.label fontSize=\"24px\">{tokenData.txCount ?? 0}</TYPE.label>\n                </AutoColumn>\n              </AutoColumn>\n            </DarkGreyCard>\n            <DarkGreyCard>\n              <RowBetween>\n                <AutoColumn>\n                  <TYPE.main>{view === ChartView.VOL ? '24H Volume' : 'TVL'}</TYPE.main>\n                  <TYPE.label fontSize=\"24px\" height=\"30px\">\n                    {latestValue\n                      ? formatDollarAmount(latestValue)\n                      : view === ChartView.VOL\n                      ? formatDollarAmount(formattedVolumeData[formattedVolumeData.length - 1]?.value)\n                      : formatDollarAmount(formattedTvlData[formattedTvlData.length - 1]?.value)}\n                  </TYPE.label>\n                </AutoColumn>\n                <ToggleWrapper width=\"160px\">\n                  <ToggleElementFree\n                    isActive={view === ChartView.VOL}\n                    fontSize=\"12px\"\n                    onClick={() => (view === ChartView.VOL ? setView(ChartView.TVL) : setView(ChartView.VOL))}\n                  >\n                    Volume\n                  </ToggleElementFree>\n                  <ToggleElementFree\n                    isActive={view === ChartView.TVL}\n                    fontSize=\"12px\"\n                    onClick={() => (view === ChartView.VOL ? setView(ChartView.TVL) : setView(ChartView.VOL))}\n                  >\n                    TVL\n                  </ToggleElementFree>\n                  {/* <ToggleElementFree\n                    isActive={view === ChartView.PRICE}\n                    fontSize=\"12px\"\n                    onClick={() => setView(ChartView.PRICE)}\n                  >\n                    Price\n                  </ToggleElementFree> */}\n                </ToggleWrapper>\n              </RowBetween>\n              {view === ChartView.TVL ? (\n                <LineChart data={formattedTvlData} color={backgroundColor} minHeight={340} setValue={setLatestValue} />\n              ) : view === ChartView.VOL ? (\n                <BarChart\n                  data={formattedVolumeData}\n                  color={backgroundColor}\n                  minHeight={340}\n                  setValue={setLatestValue}\n                />\n              ) : view === ChartView.PRICE ? (\n                <CandleChart data={formattedPriceData} />\n              ) : null}\n            </DarkGreyCard>\n          </ContentLayout>\n          <TYPE.main>Pools</TYPE.main>\n          <DarkGreyCard>\n            <PoolTable poolDatas={poolDatas} />\n          </DarkGreyCard>\n          <TYPE.main>Transactions</TYPE.main>\n          <DarkGreyCard>\n            {transactions ? (\n              <TransactionTable transactions={transactions} color={backgroundColor} />\n            ) : (\n              <LocalLoader fill={false} />\n            )}\n          </DarkGreyCard>\n        </AutoColumn>\n      ) : (\n        <Loader />\n      )}\n    </PageWrapper>\n  )\n}\n","import React, { useRef, useState, useEffect, useCallback, Dispatch, SetStateAction, ReactNode } from 'react'\nimport { createChart, IChartApi } from 'lightweight-charts'\nimport { RowBetween } from 'components/Row'\nimport Card from '../Card'\nimport styled from 'styled-components'\nimport useTheme from 'hooks/useTheme'\n\nconst Wrapper = styled(Card)`\n  width: 100%;\n  padding: 1rem;\n  display: flex;\n  background-color: ${({ theme }) => theme.bg0}\n  flex-direction: column;\n  > * {\n    font-size: 1rem;\n  }\n`\n\nconst DEFAULT_HEIGHT = 300\n\nexport type LineChartProps = {\n  data: any[]\n  color?: string | undefined\n  height?: number | undefined\n  minHeight?: number\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  topLeft?: ReactNode | undefined\n  topRight?: ReactNode | undefined\n  bottomLeft?: ReactNode | undefined\n  bottomRight?: ReactNode | undefined\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst CandleChart = ({\n  data,\n  color = '#56B2A4',\n  setValue,\n  topLeft,\n  topRight,\n  bottomLeft,\n  bottomRight,\n  height = DEFAULT_HEIGHT,\n  minHeight = DEFAULT_HEIGHT,\n  ...rest\n}: LineChartProps) => {\n  const theme = useTheme()\n  const textColor = theme.text2\n  const chartRef = useRef<HTMLDivElement>(null)\n  const [chartCreated, setChart] = useState<IChartApi | undefined>()\n\n  // for reseting value on hover exit\n  const currentValue = 10\n\n  const handleResize = useCallback(() => {\n    if (chartCreated && chartRef?.current?.parentElement) {\n      chartCreated.resize(chartRef.current.parentElement.clientWidth - 32, height)\n      chartCreated.timeScale().fitContent()\n      chartCreated.timeScale().scrollToPosition(0, false)\n    }\n  }, [chartCreated, chartRef, height])\n\n  // add event listener for resize\n  const isClient = typeof window === 'object'\n  useEffect(() => {\n    if (!isClient) {\n      return\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, chartRef, handleResize]) // Empty array ensures that effect is only run on mount and unmount\n\n  // if chart not instantiated in canvas, create it\n  useEffect(() => {\n    if (!chartCreated && data && !!chartRef?.current?.parentElement) {\n      const chart = createChart(chartRef.current, {\n        height: height,\n        width: chartRef.current.parentElement.clientWidth - 32,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: textColor,\n          fontFamily: 'Inter',\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: 0.1,\n            bottom: 0.1,\n          },\n          borderVisible: false,\n        },\n        timeScale: {\n          borderVisible: false,\n        },\n        watermark: {\n          color: 'rgba(0, 0, 0, 0)',\n        },\n        grid: {\n          horzLines: {\n            visible: false,\n          },\n          vertLines: {\n            visible: false,\n          },\n        },\n        crosshair: {\n          horzLine: {\n            visible: true,\n            style: 3,\n            width: 1,\n            color: '#505050',\n            labelBackgroundColor: color,\n          },\n          vertLine: {\n            visible: true,\n            style: 3,\n            width: 1,\n            color: '#505050',\n            labelBackgroundColor: color,\n          },\n        },\n      })\n\n      chart.timeScale().fitContent()\n      setChart(chart)\n    }\n  }, [color, chartCreated, currentValue, data, height, setValue, textColor, theme])\n\n  useEffect(() => {\n    if (chartCreated && data) {\n      const series = chartCreated.addCandlestickSeries({\n        upColor: 'green',\n        downColor: 'red',\n        borderDownColor: 'red',\n        borderUpColor: 'green',\n        wickDownColor: 'red',\n        wickUpColor: 'green',\n      })\n\n      series.setData(data)\n\n      // update the title when hovering on the chart\n      //   chartCreated.subscribeCrosshairMove(function (param) {\n      //     if (\n      //       chartRef?.current &&\n      //       (param === undefined ||\n      //         param.time === undefined ||\n      //         (param && param.point && param.point.x < 0) ||\n      //         (param && param.point && param.point.x > chartRef.current.clientWidth) ||\n      //         (param && param.point && param.point.y < 0) ||\n      //         (param && param.point && param.point.y > height))\n      //     ) {\n      //       setValue && setValue(undefined)\n      //     } else if (series && param) {\n      //       const price = parseFloat(param?.seriesPrices?.get(series)?.toString() ?? '10')\n      //       setValue && setValue(price)\n      //     }\n      //   })\n    }\n  }, [chartCreated, color, currentValue, data, height, setValue, theme.bg0])\n\n  return (\n    <Wrapper minHeight={minHeight}>\n      <RowBetween>\n        {topLeft ?? null}\n        {topRight ?? null}\n      </RowBetween>\n      <div ref={chartRef} id={'candle-chart'} {...rest} />\n      <RowBetween>\n        {bottomLeft ?? null}\n        {bottomRight ?? null}\n      </RowBetween>\n    </Wrapper>\n  )\n}\n\nexport default CandleChart\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport TokenPage from './TokenPage'\nimport { isAddress } from 'ethers/lib/utils'\n\nexport function RedirectInvalidToken(props: RouteComponentProps<{ address: string }>) {\n  const {\n    match: {\n      params: { address },\n    },\n  } = props\n\n  if (!isAddress(address)) {\n    return <Redirect to={`/`} />\n  }\n  return <TokenPage {...props} />\n}\n","import gql from 'graphql-tag'\nimport { client } from 'apollo/client'\nimport JSBI from 'jsbi'\nimport keyBy from 'lodash.keyby'\nimport { TickMath, tickToPrice } from '@uniswap/v3-sdk'\nimport { Token } from '@uniswap/sdk-core'\n\nconst PRICE_FIXED_DIGITS = 4\nconst DEFAULT_SURROUNDING_TICKS = 300\nconst FEE_TIER_TO_TICK_SPACING = (feeTier: string): number => {\n  switch (feeTier) {\n    case '10000':\n      return 200\n    case '3000':\n      return 60\n    case '500':\n      return 10\n    default:\n      throw Error(`Tick spacing for fee tier ${feeTier} undefined.`)\n  }\n}\n\ninterface TickPool {\n  tick: string\n  feeTier: string\n  token0: {\n    symbol: string\n    id: string\n    decimals: string\n  }\n  token1: {\n    symbol: string\n    id: string\n    decimals: string\n  }\n  sqrtPrice: string\n  liquidity: string\n}\n\ninterface PoolResult {\n  pool: TickPool\n}\n\n// Raw tick returned from GQL\ninterface Tick {\n  tickIdx: string\n  liquidityGross: string\n  liquidityNet: string\n  price0: string\n  price1: string\n}\n\ninterface SurroundingTicksResult {\n  ticks: Tick[]\n}\n\n// Tick with fields parsed to JSBIs, and active liquidity computed.\nexport interface TickProcessed {\n  liquidityGross: JSBI\n  liquidityNet: JSBI\n  tickIdx: number\n  liquidityActive: JSBI\n  price0: string\n  price1: string\n}\n\nconst fetchInitializedTicks = async (\n  poolAddress: string,\n  tickIdxLowerBound: number,\n  tickIdxUpperBound: number\n): Promise<{ loading?: boolean; error?: boolean; ticks?: Tick[] }> => {\n  const tickQuery = gql`\n    query surroundingTicks(\n      $poolAddress: String!\n      $tickIdxLowerBound: BigInt!\n      $tickIdxUpperBound: BigInt!\n      $skip: Int!\n    ) {\n      ticks(\n        first: 1000\n        skip: $skip\n        where: { poolAddress: $poolAddress, tickIdx_lte: $tickIdxUpperBound, tickIdx_gte: $tickIdxLowerBound }\n      ) {\n        tickIdx\n        liquidityGross\n        liquidityNet\n        price0\n        price1\n      }\n    }\n  `\n\n  let surroundingTicks: Tick[] = []\n  let surroundingTicksResult: Tick[] = []\n  let skip = 0\n  do {\n    const { data, error, loading } = await client.query<SurroundingTicksResult>({\n      query: tickQuery,\n      fetchPolicy: 'network-only',\n      variables: {\n        poolAddress,\n        tickIdxLowerBound,\n        tickIdxUpperBound,\n        skip,\n      },\n    })\n\n    // console.log({ data, error, loading }, 'Result. Skip: ' + skip)\n\n    if (loading) {\n      continue\n    }\n\n    if (error) {\n      return { error: Boolean(error), loading, ticks: surroundingTicksResult }\n    }\n\n    surroundingTicks = data.ticks\n    surroundingTicksResult = surroundingTicksResult.concat(surroundingTicks)\n    skip += 1000\n  } while (surroundingTicks.length > 0)\n\n  return { ticks: surroundingTicksResult, loading: false, error: false }\n}\n\nexport interface PoolTickData {\n  ticksProcessed: TickProcessed[]\n  feeTier: string\n  tickSpacing: number\n  activeTickIdx: number\n}\n\nexport const fetchTicksSurroundingPrice = async (\n  poolAddress: string,\n  numSurroundingTicks = DEFAULT_SURROUNDING_TICKS\n): Promise<{\n  loading?: boolean\n  error?: boolean\n  data?: PoolTickData\n}> => {\n  const poolQuery = gql`\n    query pool($poolAddress: String!) {\n      pool(id: $poolAddress) {\n        tick\n        token0 {\n          symbol\n          id\n          decimals\n        }\n        token1 {\n          symbol\n          id\n          decimals\n        }\n        feeTier\n        sqrtPrice\n        liquidity\n      }\n    }\n  `\n  const { data: poolResult, error, loading } = await client.query<PoolResult>({\n    query: poolQuery,\n    variables: {\n      poolAddress,\n    },\n  })\n\n  if (loading || error || !poolResult) {\n    return {\n      loading,\n      error: Boolean(error),\n      data: undefined,\n    }\n  }\n\n  const {\n    pool: {\n      tick: poolCurrentTick,\n      feeTier,\n      liquidity,\n      token0: { id: token0Address, decimals: token0Decimals },\n      token1: { id: token1Address, decimals: token1Decimals },\n    },\n  } = poolResult\n  const poolCurrentTickIdx = parseInt(poolCurrentTick)\n  const tickSpacing = FEE_TIER_TO_TICK_SPACING(feeTier)\n\n  // The pools current tick isn't necessarily a tick that can actually be initialized.\n  // Find the nearest valid tick given the tick spacing.\n  const activeTickIdx = Math.floor(poolCurrentTickIdx / tickSpacing) * tickSpacing\n\n  // Our search bounds must take into account fee spacing. i.e. for fee tier 1%, only\n  // ticks with index 200, 400, 600, etc can be active.\n  const tickIdxLowerBound = activeTickIdx - numSurroundingTicks * tickSpacing\n  const tickIdxUpperBound = activeTickIdx + numSurroundingTicks * tickSpacing\n\n  const initializedTicksResult = await fetchInitializedTicks(poolAddress, tickIdxLowerBound, tickIdxUpperBound)\n  if (initializedTicksResult.error || initializedTicksResult.loading) {\n    return {\n      error: initializedTicksResult.error,\n      loading: initializedTicksResult.loading,\n    }\n  }\n\n  const { ticks: initializedTicks } = initializedTicksResult\n\n  const tickIdxToInitializedTick = keyBy(initializedTicks, 'tickIdx')\n\n  const token0 = new Token(1, token0Address, parseInt(token0Decimals))\n  const token1 = new Token(1, token1Address, parseInt(token1Decimals))\n\n  // console.log({ activeTickIdx, poolCurrentTickIdx }, 'Active ticks')\n\n  // If the pool's tick is MIN_TICK (-887272), then when we find the closest\n  // initializable tick to its left, the value would be smaller than MIN_TICK.\n  // In this case we must ensure that the prices shown never go below/above.\n  // what actual possible from the protocol.\n  let activeTickIdxForPrice = activeTickIdx\n  if (activeTickIdxForPrice < TickMath.MIN_TICK) {\n    activeTickIdxForPrice = TickMath.MIN_TICK\n  }\n  if (activeTickIdxForPrice > TickMath.MAX_TICK) {\n    activeTickIdxForPrice = TickMath.MAX_TICK\n  }\n\n  const activeTickProcessed: TickProcessed = {\n    liquidityActive: JSBI.BigInt(liquidity),\n    tickIdx: activeTickIdx,\n    liquidityNet: JSBI.BigInt(0),\n    price0: tickToPrice(token0, token1, activeTickIdxForPrice).toFixed(PRICE_FIXED_DIGITS),\n    price1: tickToPrice(token1, token0, activeTickIdxForPrice).toFixed(PRICE_FIXED_DIGITS),\n    liquidityGross: JSBI.BigInt(0),\n  }\n\n  // If our active tick happens to be initialized (i.e. there is a position that starts or\n  // ends at that tick), ensure we set the gross and net.\n  // correctly.\n  const activeTick = tickIdxToInitializedTick[activeTickIdx]\n  if (activeTick) {\n    activeTickProcessed.liquidityGross = JSBI.BigInt(activeTick.liquidityGross)\n    activeTickProcessed.liquidityNet = JSBI.BigInt(activeTick.liquidityNet)\n  }\n\n  enum Direction {\n    ASC,\n    DESC,\n  }\n\n  // Computes the numSurroundingTicks above or below the active tick.\n  const computeSurroundingTicks = (\n    activeTickProcessed: TickProcessed,\n    tickSpacing: number,\n    numSurroundingTicks: number,\n    direction: Direction\n  ) => {\n    let previousTickProcessed: TickProcessed = {\n      ...activeTickProcessed,\n    }\n\n    // Iterate outwards (either up or down depending on 'Direction') from the active tick,\n    // building active liquidity for every tick.\n    let processedTicks: TickProcessed[] = []\n    for (let i = 0; i < numSurroundingTicks; i++) {\n      const currentTickIdx =\n        direction == Direction.ASC\n          ? previousTickProcessed.tickIdx + tickSpacing\n          : previousTickProcessed.tickIdx - tickSpacing\n\n      if (currentTickIdx < TickMath.MIN_TICK || currentTickIdx > TickMath.MAX_TICK) {\n        break\n      }\n\n      const currentTickProcessed: TickProcessed = {\n        liquidityActive: previousTickProcessed.liquidityActive,\n        tickIdx: currentTickIdx,\n        liquidityNet: JSBI.BigInt(0),\n        price0: tickToPrice(token0, token1, currentTickIdx).toFixed(PRICE_FIXED_DIGITS),\n        price1: tickToPrice(token1, token0, currentTickIdx).toFixed(PRICE_FIXED_DIGITS),\n        liquidityGross: JSBI.BigInt(0),\n      }\n\n      // Check if there is an initialized tick at our current tick.\n      // If so copy the gross and net liquidity from the initialized tick.\n      const currentInitializedTick = tickIdxToInitializedTick[currentTickIdx.toString()]\n      if (currentInitializedTick) {\n        currentTickProcessed.liquidityGross = JSBI.BigInt(currentInitializedTick.liquidityGross)\n        currentTickProcessed.liquidityNet = JSBI.BigInt(currentInitializedTick.liquidityNet)\n      }\n\n      // Update the active liquidity.\n      // If we are iterating ascending and we found an initialized tick we immediately apply\n      // it to the current processed tick we are building.\n      // If we are iterating descending, we don't want to apply the net liquidity until the following tick.\n      if (direction == Direction.ASC && currentInitializedTick) {\n        currentTickProcessed.liquidityActive = JSBI.add(\n          previousTickProcessed.liquidityActive,\n          JSBI.BigInt(currentInitializedTick.liquidityNet)\n        )\n      } else if (direction == Direction.DESC && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n        // We are iterating descending, so look at the previous tick and apply any net liquidity.\n        currentTickProcessed.liquidityActive = JSBI.subtract(\n          previousTickProcessed.liquidityActive,\n          previousTickProcessed.liquidityNet\n        )\n      }\n\n      processedTicks.push(currentTickProcessed)\n      previousTickProcessed = currentTickProcessed\n    }\n\n    if (direction == Direction.DESC) {\n      processedTicks = processedTicks.reverse()\n    }\n\n    return processedTicks\n  }\n\n  const subsequentTicks: TickProcessed[] = computeSurroundingTicks(\n    activeTickProcessed,\n    tickSpacing,\n    numSurroundingTicks,\n    Direction.ASC\n  )\n\n  const previousTicks: TickProcessed[] = computeSurroundingTicks(\n    activeTickProcessed,\n    tickSpacing,\n    numSurroundingTicks,\n    Direction.DESC\n  )\n\n  const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks)\n\n  return {\n    data: {\n      ticksProcessed,\n      feeTier,\n      tickSpacing,\n      activeTickIdx,\n    },\n  }\n}\n","import { fetchTicksSurroundingPrice, TickProcessed } from 'data/pools/tickData'\nimport React, { useEffect, useMemo } from 'react'\nimport {\n  BarChart,\n  Bar,\n  // Cell,\n  CartesianGrid,\n  // Brush,\n  // LabelList,\n  Label,\n  XAxis,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts'\nimport Loader from 'components/Loader'\nimport styled from 'styled-components'\nimport { LightCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween } from 'components/Row'\nimport { TYPE } from 'theme'\nimport useTheme from 'hooks/useTheme'\nimport { usePoolDatas, usePoolTickData } from 'state/pools/hooks'\n// import { Token, TokenAmount } from '@uniswap/sdk'\n// import { isAddress } from 'utils'\n// import { Pool, Position, Tick, TICK_SPACINGS } from '@uniswap/v3-sdk'\nimport { PoolData } from 'state/pools/reducer'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 400px;\n`\n\nconst TooltipWrapper = styled(LightCard)`\n  width: 360px;\n`\n\ninterface DensityChartProps {\n  address: string\n}\n\ninterface ChartEntry {\n  index: number\n  isCurrent: number\n  activeLiquidity: number\n  price0: number\n  price1: number\n}\n\nexport default function DensityChart({ address }: DensityChartProps) {\n  // theming\n  const theme = useTheme()\n\n  const poolData: PoolData = usePoolDatas([address])[0]\n  // const formattedAddress0 = isAddress(poolData.token0.address)\n  // const formattedAddress1 = isAddress(poolData.token1.address)\n\n  // tokens\n  // const token0 = useMemo(() => {\n  //   return poolData && formattedAddress0 && formattedAddress1\n  //     ? new Token(1, formattedAddress0, poolData.token0.decimals)\n  //     : undefined\n  // }, [formattedAddress0, formattedAddress1, poolData])\n\n  // const token1 = useMemo(() => {\n  //   return poolData && formattedAddress1 && formattedAddress1\n  //     ? new Token(1, formattedAddress1, poolData.token1.decimals)\n  //     : undefined\n  // }, [formattedAddress1, poolData])\n\n  // const poolLiquidity = poolData?.liquidity\n  // const poolSqrtPrice = poolData?.sqrtPrice\n  // const tick = poolData?.tick\n  // const feeTier = poolData?.feeTier\n\n  // const pool = useMemo(() => {\n  //   if (poolLiquidity && tick && poolSqrtPrice && token0 && token1 && feeTier) {\n  //     const pool = new Pool(token0, token1, feeTier, poolSqrtPrice, poolLiquidity, tick)\n  //     return pool\n  //   }\n  //   return undefined\n  // }, [feeTier, poolLiquidity, poolSqrtPrice, tick, token0, token1])\n\n  const [poolTickData, updatePoolTickData] = usePoolTickData(address)\n\n  useEffect(() => {\n    async function fetch() {\n      const { data } = await fetchTicksSurroundingPrice(address)\n      if (data) {\n        updatePoolTickData(address, data)\n      }\n    }\n    if (!poolTickData) {\n      fetch()\n    }\n  }, [address, poolTickData, updatePoolTickData])\n\n  const TICKS_PER_GROUP = 1\n\n  const formattedData = useMemo(() => {\n    if (poolTickData) {\n      let currentGroup = 1\n      let currentEntry: ChartEntry = {\n        index: 0,\n        isCurrent: 0,\n        activeLiquidity: 0,\n        price0: 0,\n        price1: 0,\n      }\n      return poolTickData.ticksProcessed.reduce((grouped: ChartEntry[], t: TickProcessed, i) => {\n        const active = t.tickIdx === poolTickData.activeTickIdx\n\n        // check if need to update current entry\n        if (i % TICKS_PER_GROUP === 0 && i !== 0) {\n          currentGroup = currentGroup + 1\n          grouped.push(currentEntry)\n          currentEntry = {\n            index: currentEntry.index + 1,\n            activeLiquidity: 0,\n            isCurrent: 0,\n            price0: 0,\n            price1: 0,\n          }\n        }\n        currentEntry.isCurrent = active ? parseFloat(t.liquidityActive.toString()) : 0\n        currentEntry.activeLiquidity = active\n          ? 0\n          : currentEntry.activeLiquidity + parseFloat(t.liquidityActive.toString())\n        currentEntry.price0 = currentEntry.price0 + parseFloat(t.price0)\n        currentEntry.price1 = currentEntry.price1 + parseFloat(t.price1)\n        return grouped\n      }, [])\n    }\n    return undefined\n  }, [poolTickData])\n\n  const CustomToolTip = (props: any) => {\n    const index = props.label as number\n    const price0 = poolTickData?.ticksProcessed[index]?.price0\n    const price1 = poolTickData?.ticksProcessed[index]?.price1\n    // const liquidity = poolTickData?.ticksProcessed[index]?.liquidityActive ?? undefined\n\n    return (\n      <TooltipWrapper>\n        <AutoColumn gap=\"md\">\n          <TYPE.main color={theme.text3}>Tick stats</TYPE.main>\n          <RowBetween>\n            <TYPE.label>{poolData?.token0?.symbol} Price: </TYPE.label>\n            <TYPE.label>\n              {price0\n                ? Number(price0).toLocaleString(undefined, {\n                    minimumSignificantDigits: 1,\n                  })\n                : ''}{' '}\n              {poolData?.token1?.symbol}\n            </TYPE.label>\n          </RowBetween>\n          <RowBetween>\n            <TYPE.label>{poolData?.token1?.symbol} Price: </TYPE.label>\n            <TYPE.label>\n              {price1\n                ? Number(price1).toLocaleString(undefined, {\n                    minimumSignificantDigits: 1,\n                  })\n                : ''}{' '}\n              {poolData?.token0?.symbol}\n            </TYPE.label>\n          </RowBetween>\n          {/* <RowBetween>\n            <TYPE.label>Liquidity : </TYPE.label>\n            <TYPE.label>{liquidity}</TYPE.label>\n          </RowBetween> */}\n        </AutoColumn>\n      </TooltipWrapper>\n    )\n  }\n\n  if (!poolTickData) {\n    return <Loader />\n  }\n\n  return (\n    <Wrapper>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          width={500}\n          height={300}\n          data={formattedData}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"4 4 4\" stroke=\"#2C2F36\" />\n          <Tooltip content={CustomToolTip} />\n          <XAxis reversed={true} tick={false}>\n            <Label value=\"Liquidity Range\" offset={0} position=\"insideBottom\" fill={theme.text3} />\n          </XAxis>\n          {/* <Brush dataKey=\"index\" height={30} stroke={theme.bg3} fill={theme.bg1} /> */}\n          <Bar dataKey=\"activeLiquidity\" fill=\"#2172E5\">\n            {/* {poolTickData.ticksProcessed.map((entry, index) => {\n              const active = entry.tickIdx === poolTickData.activeTickIdx\n              return <Cell key={`cell-${index}`} fill={active ? theme.blue2 : theme.blue1} />\n            })} */}\n          </Bar>\n          <Bar dataKey=\"isCurrent\" fill={theme.pink1} isAnimationActive={false}></Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </Wrapper>\n  )\n}\n","import React, { useMemo, useState, useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useColor } from 'hooks/useColor'\nimport { ThemedBackground, PageWrapper } from 'pages/styled'\nimport { feeTierPercent, getEtherscanLink } from 'utils'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween, RowFixed, AutoRow } from 'components/Row'\nimport { TYPE, StyledInternalLink } from 'theme'\nimport Loader, { LocalLoader } from 'components/Loader'\nimport { ExternalLink, Download } from 'react-feather'\nimport { ExternalLink as StyledExternalLink } from '../../theme/components'\nimport useTheme from 'hooks/useTheme'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { formatDollarAmount, formatAmount } from 'utils/numbers'\nimport Percent from 'components/Percent'\nimport { ButtonPrimary, ButtonGray, SavedIcon } from 'components/Button'\nimport { DarkGreyCard, GreyCard, GreyBadge } from 'components/Card'\nimport { usePoolDatas, usePoolChartData, usePoolTransactions } from 'state/pools/hooks'\nimport LineChart from 'components/LineChart'\nimport { unixToDate } from 'utils/date'\nimport { ToggleWrapper, ToggleElementFree } from 'components/Toggle/index'\nimport BarChart from 'components/BarChart'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport TransactionTable from 'components/TransactionsTable'\nimport { useSavedPools } from 'state/user/hooks'\nimport DensityChart from 'components/DensityChart'\n\nconst ContentLayout = styled.div`\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-gap: 1em;\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`\n\nconst TokenButton = styled(GreyCard)`\n  padding: 8px 12px;\n  border-radius: 10px;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst ResponsiveRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-direction: column;\n    align-items: flex-start;\n    row-gap: 24px;\n    width: 100%:\n  `};\n`\n\nenum ChartView {\n  TVL,\n  VOL,\n  PRICE,\n  DENSITY,\n}\n\nexport default function PoolPage({\n  match: {\n    params: { address },\n  },\n}: RouteComponentProps<{ address: string }>) {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  // theming\n  const backgroundColor = useColor(address)\n  const theme = useTheme()\n\n  // token data\n  const poolData = usePoolDatas([address])[0]\n  const chartData = usePoolChartData(address)\n  const transactions = usePoolTransactions(address)\n\n  const [view, setView] = useState(ChartView.VOL)\n  const [latestValue, setLatestValue] = useState<number | undefined>()\n\n  const formattedTvlData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: unixToDate(day.date),\n          value: day.totalValueLockedUSD,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [chartData])\n\n  const formattedVolumeData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: unixToDate(day.date),\n          value: day.volumeUSD,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [chartData])\n\n  //watchlist\n  const [savedPools, addSavedPool] = useSavedPools()\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={backgroundColor} />\n      {poolData ? (\n        <AutoColumn gap=\"32px\">\n          <RowBetween>\n            <AutoRow gap=\"4px\">\n              <StyledInternalLink to=\"/\">\n                <TYPE.main>{`Home > `}</TYPE.main>\n              </StyledInternalLink>\n              <StyledInternalLink to=\"/pools\">\n                <TYPE.label>{` Pools `}</TYPE.label>\n              </StyledInternalLink>\n              <TYPE.main>{` > `}</TYPE.main>\n              <TYPE.label>{` ${poolData.token0.symbol} / ${poolData.token1.symbol} ${feeTierPercent(\n                poolData.feeTier\n              )} `}</TYPE.label>\n            </AutoRow>\n            <RowFixed gap=\"10px\" align=\"center\">\n              <SavedIcon fill={savedPools.includes(address)} onClick={() => addSavedPool(address)} />\n              <StyledExternalLink href={getEtherscanLink(1, address, 'address')}>\n                <ExternalLink stroke={theme.text2} size={'17px'} style={{ marginLeft: '12px' }} />\n              </StyledExternalLink>\n            </RowFixed>\n          </RowBetween>\n          <ResponsiveRow align=\"flex-end\">\n            <AutoColumn gap=\"lg\">\n              <RowFixed gap=\"4px\">\n                <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} size={24} />\n                <TYPE.label\n                  ml=\"8px\"\n                  mr=\"8px\"\n                  fontSize=\"24px\"\n                >{` ${poolData.token0.symbol} / ${poolData.token1.symbol} `}</TYPE.label>\n                <GreyBadge>{feeTierPercent(poolData.feeTier)}</GreyBadge>\n              </RowFixed>\n              <ResponsiveRow>\n                <StyledInternalLink to={'/tokens/' + poolData.token0.address}>\n                  <TokenButton>\n                    <RowFixed>\n                      <CurrencyLogo address={poolData.token0.address} size={'20px'} />\n                      <TYPE.label fontSize=\"16px\" ml=\"4px\" style={{ whiteSpace: 'nowrap' }} width={'fit-content'}>\n                        {`1 ${poolData.token0.symbol} =  ${formatAmount(poolData.token1Price)} ${\n                          poolData.token1.symbol\n                        }`}\n                      </TYPE.label>\n                    </RowFixed>\n                  </TokenButton>\n                </StyledInternalLink>\n                <StyledInternalLink to={'/tokens/' + poolData.token1.address}>\n                  <TokenButton ml=\"10px\">\n                    <RowFixed>\n                      <CurrencyLogo address={poolData.token1.address} size={'20px'} />\n                      <TYPE.label fontSize=\"16px\" ml=\"4px\" style={{ whiteSpace: 'nowrap' }} width={'fit-content'}>\n                        {`1 ${poolData.token1.symbol} =  ${formatAmount(poolData.token0Price)} ${\n                          poolData.token0.symbol\n                        }`}\n                      </TYPE.label>\n                    </RowFixed>\n                  </TokenButton>\n                </StyledInternalLink>\n              </ResponsiveRow>\n            </AutoColumn>\n            <AutoColumn gap=\"lg\">\n              <RowFixed>\n                <StyledExternalLink\n                  href={`https://app.uniswap.org/#/add/${poolData.token0.address}/${poolData.token1.address}/${poolData.feeTier}`}\n                >\n                  <ButtonGray width=\"170px\" mr=\"12px\" style={{ height: '44px' }}>\n                    <RowBetween>\n                      <Download size={24} />\n                      <div style={{ display: 'flex', alignItems: 'center' }}>Add Liquidity</div>\n                    </RowBetween>\n                  </ButtonGray>\n                </StyledExternalLink>\n                <StyledExternalLink\n                  href={`https://app.uniswap.org/#/swap?inputCurrency=${poolData.token0.address}&outputCurrency=${poolData.token1.address}`}\n                >\n                  <ButtonPrimary width=\"100px\" style={{ height: '44px' }}>\n                    Trade\n                  </ButtonPrimary>\n                </StyledExternalLink>\n              </RowFixed>\n            </AutoColumn>\n          </ResponsiveRow>\n          <ContentLayout>\n            <DarkGreyCard>\n              <AutoColumn gap=\"lg\">\n                <GreyCard padding=\"16px\">\n                  <AutoColumn gap=\"md\">\n                    <TYPE.main>Total Tokens Locked</TYPE.main>\n                    <RowBetween>\n                      <RowFixed>\n                        <CurrencyLogo address={poolData.token0.address} size={'20px'} />\n                        <TYPE.label fontSize=\"14px\" ml=\"8px\">\n                          {poolData.token0.symbol}\n                        </TYPE.label>\n                      </RowFixed>\n                      <TYPE.label fontSize=\"14px\">{formatAmount(poolData.tvlToken0)}</TYPE.label>\n                    </RowBetween>\n                    <RowBetween>\n                      <RowFixed>\n                        <CurrencyLogo address={poolData.token1.address} size={'20px'} />\n                        <TYPE.label fontSize=\"14px\" ml=\"8px\">\n                          {poolData.token1.symbol}\n                        </TYPE.label>\n                      </RowFixed>\n                      <TYPE.label fontSize=\"14px\">{formatAmount(poolData.tvlToken1)}</TYPE.label>\n                    </RowBetween>\n                  </AutoColumn>\n                </GreyCard>\n                <AutoColumn gap=\"4px\">\n                  <TYPE.main fontWeight={400}>TVL</TYPE.main>\n                  <TYPE.label fontSize=\"24px\">{formatDollarAmount(poolData.tvlUSD)}</TYPE.label>\n                  <Percent value={poolData.tvlUSDChange} />\n                </AutoColumn>\n                <AutoColumn gap=\"4px\">\n                  <TYPE.main fontWeight={400}>Volume 24h</TYPE.main>\n                  <TYPE.label fontSize=\"24px\">{formatDollarAmount(poolData.volumeUSD)}</TYPE.label>\n                  <Percent value={poolData.volumeUSDChange} />\n                </AutoColumn>\n                <AutoColumn gap=\"4px\">\n                  <TYPE.main fontWeight={400}>24h Fees</TYPE.main>\n                  <TYPE.label fontSize=\"24px\">\n                    {formatDollarAmount(poolData.volumeUSD * (poolData.feeTier / 1000000))}\n                  </TYPE.label>\n                </AutoColumn>\n              </AutoColumn>\n            </DarkGreyCard>\n            <DarkGreyCard>\n              <RowBetween align=\"flex-start\">\n                <AutoColumn>\n                  <TYPE.main>\n                    {view === ChartView.VOL ? '24H Volume' : view === ChartView.TVL ? 'TVL' : 'Liquidity Distribution'}\n                  </TYPE.main>\n                  <TYPE.label fontSize=\"24px\" height=\"30px\">\n                    {latestValue\n                      ? formatDollarAmount(latestValue)\n                      : view === ChartView.VOL\n                      ? formatDollarAmount(formattedVolumeData[formattedVolumeData.length - 1]?.value)\n                      : view === ChartView.DENSITY\n                      ? ''\n                      : formatDollarAmount(formattedTvlData[formattedTvlData.length - 1]?.value)}\n                  </TYPE.label>\n                </AutoColumn>\n                <ToggleWrapper width=\"200px\">\n                  <ToggleElementFree\n                    isActive={view === ChartView.VOL}\n                    fontSize=\"12px\"\n                    onClick={() => (view === ChartView.VOL ? setView(ChartView.TVL) : setView(ChartView.VOL))}\n                  >\n                    Volume\n                  </ToggleElementFree>\n                  <ToggleElementFree\n                    isActive={view === ChartView.TVL}\n                    fontSize=\"12px\"\n                    onClick={() => (view === ChartView.TVL ? setView(ChartView.DENSITY) : setView(ChartView.TVL))}\n                  >\n                    TVL\n                  </ToggleElementFree>\n                  <ToggleElementFree\n                    isActive={view === ChartView.DENSITY}\n                    fontSize=\"12px\"\n                    onClick={() => (view === ChartView.DENSITY ? setView(ChartView.VOL) : setView(ChartView.DENSITY))}\n                  >\n                    Liquidity\n                  </ToggleElementFree>\n                </ToggleWrapper>\n              </RowBetween>\n              {view === ChartView.TVL ? (\n                <LineChart data={formattedTvlData} color={backgroundColor} minHeight={340} setValue={setLatestValue} />\n              ) : view === ChartView.VOL ? (\n                <BarChart\n                  data={formattedVolumeData}\n                  color={backgroundColor}\n                  minHeight={340}\n                  setValue={setLatestValue}\n                />\n              ) : (\n                <DensityChart address={address} />\n              )}\n            </DarkGreyCard>\n          </ContentLayout>\n          <TYPE.main fontSize=\"24px\">Transactions</TYPE.main>\n          <DarkGreyCard>\n            {transactions ? <TransactionTable transactions={transactions} /> : <LocalLoader fill={false} />}\n          </DarkGreyCard>\n        </AutoColumn>\n      ) : (\n        <Loader />\n      )}\n    </PageWrapper>\n  )\n}\n","import React, { Suspense, useState, useEffect } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport GoogleAnalyticsReporter from '../components/analytics/GoogleAnalyticsReporter'\r\nimport Header from '../components/Header'\r\nimport URLWarning from '../components/Header/URLWarning'\r\nimport Popups from '../components/Popups'\r\nimport DarkModeQueryParamReader from '../theme/DarkModeQueryParamReader'\r\nimport Home from './Home'\r\nimport Protocol from './Protocol'\r\nimport PoolsOverview from './Pool/PoolsOverview'\r\nimport TokensOverview from './Token/TokensOverview'\r\nimport TopBar from 'components/Header/TopBar'\r\nimport Simulator from './Simulator'\r\nimport { RedirectInvalidToken } from './Token/redirects'\r\nimport { LocalLoader } from 'components/Loader'\r\nimport PoolPage from './Pool/PoolPage'\r\nimport { HideMedium } from 'theme'\r\n\r\nconst AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: flex-start;\r\n  overflow-x: hidden;\r\n  min-height: 100vh;\r\n`\r\n\r\nconst HeaderWrapper = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  width: 100%;\r\n  position: fixed;\r\n  justify-content: space-between;\r\n  z-index: 2;\r\n`\r\n\r\nconst BodyWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding-top: 40px;\r\n  margin-top: 100px;\r\n  align-items: center;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  z-index: 10;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    padding: 16px;\r\n    padding-top: 2rem;\r\n    margin-top: 140px;\r\n  `};\r\n\r\n  z-index: 1;\r\n\r\n  > * {\r\n    max-width: 1200px;\r\n  }\r\n`\r\n\r\nconst Marginer = styled.div`\r\n  margin-top: 5rem;\r\n`\r\n\r\nexport default function App() {\r\n  const [loading, setLoading] = useState(true)\r\n  useEffect(() => {\r\n    setTimeout(() => setLoading(false), 700)\r\n  }, [])\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <Route component={GoogleAnalyticsReporter} />\r\n      <Route component={DarkModeQueryParamReader} />\r\n      {loading ? (\r\n        <LocalLoader fill={true} />\r\n      ) : (\r\n        <AppWrapper>\r\n          <URLWarning />\r\n          <HeaderWrapper>\r\n            <HideMedium>\r\n              <TopBar />\r\n            </HideMedium>\r\n            <Header />\r\n          </HeaderWrapper>\r\n          <BodyWrapper>\r\n            <Popups />\r\n            <Switch>\r\n              <Route exact strict path=\"/\" component={Home} />\r\n              <Route exact strict path=\"/protocol\" component={Protocol} />\r\n              <Route exact strict path=\"/pools\" component={PoolsOverview} />\r\n              <Route exact strict path=\"/tokens\" component={TokensOverview} />\r\n              <Route exact strict path=\"/tokens/:address\" component={RedirectInvalidToken} />\r\n              <Route exact strict path=\"/pools/:address\" component={PoolPage} />\r\n              <Route exact strict path=\"/simulator\" component={Simulator} />\r\n              <Route exact strict path=\"/simulator/:address\" component={Simulator} />\r\n            </Switch>\r\n            <Marginer />\r\n          </BodyWrapper>\r\n        </AppWrapper>\r\n      )}\r\n    </Suspense>\r\n  )\r\n}\r\n","import { createReducer, nanoid } from '@reduxjs/toolkit'\nimport { addPopup, PopupContent, removePopup, updateBlockNumber, ApplicationModal, setOpenModal } from './actions'\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n  readonly popupList: PopupList\n  readonly openModal: ApplicationModal | null\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  popupList: [],\n  openModal: null,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n    .addCase(setOpenModal, (state, action) => {\n      state.openModal = action.payload\n    })\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\n      state.popupList = (key ? state.popupList.filter((popup) => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs,\n        },\n      ])\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach((p) => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    })\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateMatchesDarkMode,\n  updateUserDarkMode,\n  toggleURLWarning,\n  addSavedToken,\n  addSavedPool,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\n  matchesDarkMode: boolean // whether the dark mode media query matches\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  savedTokens: string[]\n  savedPools: string[]\n\n  timestamp: number\n  URLWarningVisible: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userDarkMode: true,\n  matchesDarkMode: false,\n  tokens: {},\n  pairs: {},\n  savedTokens: [],\n  savedPools: [],\n  timestamp: currentTimestamp(),\n  URLWarningVisible: true,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserDarkMode, (state, action) => {\n      state.userDarkMode = action.payload.userDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateMatchesDarkMode, (state, action) => {\n      state.matchesDarkMode = action.payload.matchesDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSavedToken, (state, { payload: { address } }) => {\n      if (!state.savedTokens || !state.savedTokens.includes(address)) {\n        const newTokens = state.savedTokens ?? []\n        newTokens.push(address)\n        state.savedTokens = newTokens\n      }\n      // toggle for delete\n      else if (state.savedTokens && state.savedTokens.includes(address)) {\n        const newTokens = state.savedTokens.filter((x) => x !== address)\n        state.savedTokens = newTokens\n      }\n    })\n    .addCase(addSavedPool, (state, { payload: { address } }) => {\n      if (!state.savedPools || !state.savedPools.includes(address)) {\n        const newPools = state.savedPools ?? []\n        newPools.push(address)\n        state.savedPools = newPools\n      } else if (state.savedPools && state.savedPools.includes(address)) {\n        const newPools = state.savedPools.filter((x) => x !== address)\n        state.savedPools = newPools\n      }\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const chainId = serializedPair.token0.chainId\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(toggleURLWarning, (state) => {\n      state.URLWarningVisible = !state.URLWarningVisible\n    })\n)\n","// used to mark unsupported tokens, these are hosted lists of unsupported tokens\n/**\n * @TODO add list from blockchain association\n */\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// const COMPOUND_LIST = 'https://raw.githubusercontent.com/compound-finance/token-list/master/compound.tokenlist.json'\n// const UMA_LIST = 'https://umaproject.org/uma.tokenlist.json'\n// const AAVE_LIST = 'tokenlist.aave.eth'\n// const SYNTHETIX_LIST = 'synths.snx.eth'\n// const WRAPPED_LIST = 'wrapped.tokensoft.eth'\n// const SET_LIST = 'https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json'\n// const OPYN_LIST = 'https://raw.githubusercontent.com/opynfinance/opyn-tokenlist/master/opyn-v1.tokenlist.json'\n// const ROLL_LIST = 'https://app.tryroll.com/tokens.json'\n// const COINGECKO_LIST = 'https://tokens.coingecko.com/uniswap/all.json'\n// const CMC_ALL_LIST = 'defi.cmc.eth'\n// const CMC_STABLECOIN = 'stablecoin.cmc.eth'\n// const KLEROS_LIST = 't2crtokens.eth'\nconst GEMINI_LIST = 'https://www.gemini.com/uniswap/manifest.json'\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  GEMINI_LIST,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = [GEMINI_LIST]\n","import { DEFAULT_ACTIVE_LIST_URLS } from './../../constants/lists'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_LIST_OF_LISTS } from '../../constants/lists'\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current: current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set()\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    })\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners'\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners'\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults'\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      }\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    })\n)\n","import { currentTimestamp } from './../../utils/index'\nimport { updateProtocolData, updateChartData, updateTransactions } from './actions'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { ChartDayData, Transaction } from 'types'\n\nexport interface ProtocolData {\n  // volume\n  volumeUSD: number\n  volumeUSDChange: number\n\n  // in range liquidity\n  tvlUSD: number\n  tvlUSDChange: number\n\n  // transactions\n  txCount: number\n  txCountChange: number\n}\n\nexport interface ProtocolState {\n  // timestamp for last updated fetch\n  readonly lastUpdated: number | undefined\n\n  // overview data\n  readonly data: ProtocolData | undefined\n\n  readonly chartData: ChartDayData[] | undefined\n\n  readonly transactions: Transaction[] | undefined\n}\n\nexport const initialState: ProtocolState = {\n  data: undefined,\n  chartData: undefined,\n  transactions: undefined,\n  lastUpdated: undefined,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.data = protocolData\n      // mark when last updated\n      state.lastUpdated = currentTimestamp()\n    })\n    .addCase(updateChartData, (state, { payload: { chartData } }) => {\n      state.chartData = chartData\n    })\n    .addCase(updateTransactions, (state, { payload: { transactions } }) => {\n      state.transactions = transactions\n    })\n)\n","import { currentTimestamp } from './../../utils/index'\nimport {\n  updateTokenData,\n  addTokenKeys,\n  addPoolAddresses,\n  updateChartData,\n  updatePriceData,\n  updateTransactions,\n} from './actions'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { Transaction } from 'types'\n\nexport type TokenData = {\n  // basic token info\n  name: string\n  symbol: string\n  address: string\n\n  // volume\n  volumeUSD: number\n  volumeUSDChange: number\n  volumeUSDWeek: number\n  txCount: number\n\n  // tvl\n  tvlToken: number\n  tvlUSD: number\n  tvlUSDChange: number\n\n  priceUSD: number\n  priceUSDChange: number\n  priceUSDChangeWeek: number\n}\n\nexport interface TokenChartEntry {\n  date: number\n  volumeUSD: number\n  totalValueLockedUSD: number\n}\n\nexport interface TokenPriceEntry {\n  timestamp: string\n  open: number\n  close: number\n}\n\nexport interface TokensState {\n  // analytics data from\n  byAddress: {\n    [address: string]: {\n      data: TokenData | undefined\n      poolAddresses: string[] | undefined\n      chartData: TokenChartEntry[] | undefined\n      priceData: {\n        [secondsInterval: number]: TokenPriceEntry[] | undefined\n      }\n      transactions: Transaction[] | undefined\n      lastUpdated: number | undefined\n    }\n  }\n}\n\nexport const initialState: TokensState = { byAddress: {} }\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.map(\n        (tokenData) =>\n          (state.byAddress[tokenData.address] = {\n            ...state.byAddress[tokenData.address],\n            data: tokenData,\n            lastUpdated: currentTimestamp(),\n          })\n      )\n    }) // add address to byAddress keys if not included yet\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.map((address) => {\n        if (!state.byAddress[address]) {\n          state.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n            lastUpdated: undefined,\n          }\n        }\n      })\n    })\n    // add list of pools the token is included in\n    .addCase(addPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.byAddress[tokenAddress] = { ...state.byAddress[tokenAddress], poolAddresses }\n    })\n    // add list of pools the token is included in\n    .addCase(updateChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.byAddress[tokenAddress] = { ...state.byAddress[tokenAddress], chartData }\n    })\n    // add list of pools the token is included in\n    .addCase(updateTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.byAddress[tokenAddress] = { ...state.byAddress[tokenAddress], transactions }\n    })\n    // update historical price volume based on interval size\n    .addCase(updatePriceData, (state, { payload: { tokenAddress, secondsInterval, priceData } }) => {\n      state.byAddress[tokenAddress] = {\n        ...state.byAddress[tokenAddress],\n        priceData: {\n          ...state.byAddress[tokenAddress].priceData,\n          [secondsInterval]: priceData,\n        },\n      }\n    })\n)\n","import { currentTimestamp } from './../../utils/index'\nimport { updatePoolData, addPoolKeys, updatePoolChartData, updatePoolTransactions, updateTickData } from './actions'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'state/user/actions'\nimport { Transaction } from 'types'\nimport { PoolTickData } from 'data/pools/tickData'\n\nexport interface Pool {\n  address: string\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport interface PoolData {\n  // basic token info\n  address: string\n  feeTier: number\n\n  token0: {\n    name: string\n    symbol: string\n    address: string\n    decimals: number\n    derivedETH: number\n  }\n\n  token1: {\n    name: string\n    symbol: string\n    address: string\n    decimals: number\n    derivedETH: number\n  }\n\n  // for tick math\n  liquidity: number\n  sqrtPrice: number\n  tick: number\n\n  // volume\n  volumeUSD: number\n  volumeUSDChange: number\n  volumeUSDWeek: number\n\n  // liquidity\n  tvlUSD: number\n  tvlUSDChange: number\n\n  // prices\n  token0Price: number\n  token1Price: number\n\n  // token amounts\n  tvlToken0: number\n  tvlToken1: number\n}\n\nexport type PoolChartEntry = {\n  date: number\n  volumeUSD: number\n  totalValueLockedUSD: number\n}\n\nexport interface PoolsState {\n  // analytics data from\n  byAddress: {\n    [address: string]: {\n      data: PoolData | undefined\n      chartData: PoolChartEntry[] | undefined\n      transactions: Transaction[] | undefined\n      lastUpdated: number | undefined\n      tickData: PoolTickData | undefined\n    }\n  }\n}\n\nexport const initialState: PoolsState = { byAddress: {} }\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.map(\n        (poolData) =>\n          (state.byAddress[poolData.address] = {\n            ...state.byAddress[poolData.address],\n            data: poolData,\n            lastUpdated: currentTimestamp(),\n          })\n      )\n    })\n    // add address to byAddress keys if not included yet\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.map((address) => {\n        if (!state.byAddress[address]) {\n          state.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n            lastUpdated: undefined,\n            tickData: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.byAddress[poolAddress] = { ...state.byAddress[poolAddress], chartData: chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.byAddress[poolAddress] = { ...state.byAddress[poolAddress], transactions }\n    })\n    .addCase(updateTickData, (state, { payload: { poolAddress, tickData } }) => {\n      state.byAddress[poolAddress] = { ...state.byAddress[poolAddress], tickData }\n    })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  setNewSimulationPoolData,\n  resetSimulationCoefficients,\n  setSimulatedPriceCoefficients,\n  setDefaultSliderPriceCoefficient,\n  setPositionMinPrice,\n  setPositionMaxPrice,\n  switchPriceRatioOrder,\n  toggleInfiniteRange,\n  setPositionInvestedAmount,\n  addPosition,\n  removePosition,\n} from './actions'\n\nexport interface Position {\n  investmentUsd: number\n  priceMin: number\n  priceMax: number\n  infiniteRangeSelected: boolean\n}\nexport interface SimulatorState {\n  // pool data fetching\n  fetchError: boolean\n  loading: boolean\n  // pool data\n  poolId: string\n  tokenSymbols: string[]\n  tokenAddresses: string[]\n  tokenWeights: number[]\n  poolTokenReserves: number[] | null\n  volume24Usd: number | null\n  swapFee: number | null\n  currentTokenPricesUsd: number[]\n  // simulation data\n  simulatedPriceCoefficients: number[]\n  defaultSliderPriceCoefficients: number[]\n  // user's positions\n  positions: Position[]\n  // in which order to show price ratio\n  // default is priceToken[0] / priceToken[1]\n  // reverse is priceToken[1] / priceToken[0]\n  // price ratio order probably should not be specific to position because if every position uses\n  // different order, it would be confusing in summary of all positions\n  priceRatioOrder: 'default' | 'reversed'\n}\n\nconst initialPosition: Position = {\n  investmentUsd: 0,\n  priceMin: 0,\n  priceMax: 0,\n  infiniteRangeSelected: true,\n}\n\nconst initialState: SimulatorState = {\n  // pool data fetching\n  fetchError: false,\n  loading: false,\n  // pool data\n  poolId: '',\n  tokenSymbols: [],\n  tokenAddresses: [],\n  tokenWeights: [],\n  poolTokenReserves: [],\n  volume24Usd: 0,\n  swapFee: 0,\n  currentTokenPricesUsd: [],\n  // simulation data\n  simulatedPriceCoefficients: [],\n  defaultSliderPriceCoefficients: [],\n  // initiate the state with one position on infinite price range\n  positions: [initialPosition],\n  priceRatioOrder: 'default',\n}\n\nconst fakeInitialState: SimulatorState = {\n  // pool data fetching\n  fetchError: false,\n  loading: false,\n  // pool data\n  poolId: '0xa478c2975ab1ea89e8196811f51a7b7ade33eb11',\n  tokenSymbols: ['DAI', 'WETH'],\n  tokenAddresses: ['0x6B175474E89094C44Da98b954EedeAC495271d0F', '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'],\n  tokenWeights: [0.5, 0.5],\n  poolTokenReserves: [73875146, 29406],\n  volume24Usd: 45654504,\n  swapFee: 0.03,\n  currentTokenPricesUsd: [1, 1500],\n  // currentTokenPricesUsd: [1, 3000],\n  // simulation data\n  simulatedPriceCoefficients: [1, 1],\n  defaultSliderPriceCoefficients: [1, 1],\n  // initiate the state with one position on infinite price range\n  positions: [\n    {\n      investmentUsd: 1000000,\n      priceMin: 1 / 2250,\n      priceMax: 1 / 1000,\n      infiniteRangeSelected: true,\n    },\n    // {\n    //     investmentUsd: 500000,\n    //     priceMin: 1 / 900,\n    //     priceMax: 1 / 800,\n    //     infiniteRangeSelected: true,\n    // },\n  ],\n  priceRatioOrder: 'default',\n}\n\nexport default createReducer(fakeInitialState, (builder) =>\n  builder\n    .addCase(setNewSimulationPoolData, (state, action) => {\n      const {\n        poolId,\n        tokenSymbols,\n        tokenAddresses,\n        tokenWeights,\n        currentTokenPricesUsd,\n        poolTokenReserves,\n        volume24Usd,\n        swapFee,\n      } = action.payload\n      state.poolId = poolId\n      state.tokenSymbols = tokenSymbols\n      state.tokenAddresses = tokenAddresses\n      state.tokenWeights = tokenWeights\n      state.currentTokenPricesUsd = currentTokenPricesUsd\n      state.poolTokenReserves = poolTokenReserves\n      state.volume24Usd = volume24Usd\n      state.swapFee = swapFee\n    })\n    .addCase(resetSimulationCoefficients, (state, action) => {\n      const tokenCount = state.simulatedPriceCoefficients.length\n      state.simulatedPriceCoefficients = new Array(tokenCount).fill(1)\n      state.defaultSliderPriceCoefficients = new Array(tokenCount).fill(1)\n    })\n    // TODO double check this\n    .addCase(setSimulatedPriceCoefficients, (state, action) => {\n      const { newValue, index } = action.payload\n      const coefficientsArrCopy = [...state.simulatedPriceCoefficients]\n      coefficientsArrCopy[index] = newValue\n      state.simulatedPriceCoefficients = coefficientsArrCopy\n    })\n    .addCase(setDefaultSliderPriceCoefficient, (state, action) => {\n      const { newValue, index } = action.payload\n      const coefficientsArrCopy = [...state.defaultSliderPriceCoefficients]\n      coefficientsArrCopy[index] = newValue\n      state.defaultSliderPriceCoefficients = coefficientsArrCopy\n    })\n    .addCase(setPositionMinPrice, (state, action) => {\n      const { price, positionIndex } = action.payload\n      state.positions[positionIndex].priceMin = price\n    })\n    .addCase(setPositionMaxPrice, (state, action) => {\n      const { price, positionIndex } = action.payload\n      state.positions[positionIndex].priceMax = price\n    })\n    .addCase(switchPriceRatioOrder, (state) => {\n      const currentOrder = state.priceRatioOrder\n      if (currentOrder === 'default') state.priceRatioOrder = 'reversed'\n      if (currentOrder === 'reversed') state.priceRatioOrder = 'default'\n      // change the order of all token-related arrays\n      state.tokenSymbols.reverse()\n      state.tokenAddresses.reverse()\n      state.tokenWeights.reverse()\n      state.currentTokenPricesUsd.reverse()\n      state.poolTokenReserves?.reverse()\n      state.simulatedPriceCoefficients.reverse()\n      state.defaultSliderPriceCoefficients.reverse()\n\n      // go through all positions and change bottom/top prices according to the new price reference\n      state.positions.forEach((position) => {\n        let newTop\n        let newBottom\n\n        // make sure you don't divide by 0\n        if (position.priceMin === 0) {\n          newTop = 0\n        } else {\n          newTop = 1 / position.priceMin\n        }\n\n        if (position.priceMax === 0) {\n          newBottom = 0\n        } else {\n          newBottom = 1 / position.priceMax\n        }\n\n        // set new prices\n        position.priceMin = newBottom\n        position.priceMax = newTop\n      })\n    })\n    .addCase(toggleInfiniteRange, (state, action) => {\n      const { positionIndex } = action.payload\n      const currentValue = state.positions[positionIndex].infiniteRangeSelected\n\n      // I do not change the priceMin and priceMax values, so they don't get deleted when user changes toggle infinite range\n      state.positions[positionIndex].infiniteRangeSelected = !currentValue\n    })\n    .addCase(setPositionInvestedAmount, (state, action) => {\n      const { value, positionIndex } = action.payload\n      state.positions[positionIndex].investmentUsd = value\n    })\n    .addCase(addPosition, (state) => {\n      state.positions.push({ ...initialPosition })\n    })\n    .addCase(removePosition, (state, action) => {\n      const { positionIndex } = action.payload\n      state.positions.splice(positionIndex, 1)\n    })\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\n\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport lists from './lists/reducer'\nimport multicall from './multicall/reducer'\nimport protocol from './protocol/reducer'\nimport tokens from './tokens/reducer'\nimport pools from './pools/reducer'\nimport simulator from './simulator/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'lists']\n\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n    multicall,\n    lists,\n    protocol,\n    tokens,\n    pools,\n    simulator,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: false }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../index'\nimport { updateMatchesDarkMode } from './actions'\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n\n  // keep dark mode in sync with the system\n  useEffect(() => {\n    const darkHandler = (match: MediaQueryListEvent) => {\n      dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\n    }\n\n    const match = window?.matchMedia('(prefers-color-scheme: dark)')\n    dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\n\n    if (match?.addListener) {\n      match?.addListener(darkHandler)\n    } else if (match?.addEventListener) {\n      match?.addEventListener('change', darkHandler)\n    }\n\n    return () => {\n      if (match?.removeListener) {\n        match?.removeListener(darkHandler)\n      } else if (match?.removeEventListener) {\n        match?.removeEventListener('change', darkHandler)\n      }\n    }\n  }, [dispatch])\n\n  return null\n}\n","import { getPercentChange } from '../../utils/data'\nimport { ProtocolData } from '../../state/protocol/reducer'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/client'\nimport { useDeltaTimestamps } from 'utils/queries'\nimport { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\nimport { useMemo } from 'react'\n\nexport const GLOBAL_DATA = (block?: string) => {\n  const queryString = ` query uniswapFactories {\n      factories(\n       ${block ? `block: { number: ${block}}` : ``} \n       first: 1) {\n        txCount\n        totalVolumeUSD\n        totalValueLockedUSD\n      }\n    }`\n  return gql(queryString)\n}\n\ninterface GlobalResponse {\n  factories: {\n    txCount: string\n    totalVolumeUSD: string\n    totalValueLockedUSD: string\n  }[]\n}\n\n// mocked\nexport function useFetchProtocolData(): {\n  loading: boolean\n  error: boolean\n  data: ProtocolData | undefined\n} {\n  // get blocks from historic timestamps\n  const [t24, t48] = useDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48])\n  const [block24, block48] = blocks ?? []\n\n  // fetch all data\n  const { loading, error, data } = useQuery<GlobalResponse>(GLOBAL_DATA())\n\n  const { loading: loading24, error: error24, data: data24 } = useQuery<GlobalResponse>(\n    GLOBAL_DATA(block24?.number ?? undefined)\n  )\n  const { loading: loading48, error: error48, data: data48 } = useQuery<GlobalResponse>(\n    GLOBAL_DATA(block48?.number ?? undefined)\n  )\n\n  const anyError = Boolean(error || error24 || error48 || blockError)\n  const anyLoading = Boolean(loading || loading24 || loading48)\n\n  const parsed = data?.factories?.[0]\n  const parsed24 = data24?.factories?.[0]\n  const parsed48 = data48?.factories?.[0]\n\n  const formattedData: ProtocolData | undefined = useMemo(() => {\n    if (anyError || anyLoading || !parsed || !blocks) {\n      return undefined\n    }\n\n    // volume data\n    const volumeUSD =\n      parsed && parsed24\n        ? parseFloat(parsed.totalVolumeUSD) - parseFloat(parsed24.totalVolumeUSD)\n        : parseFloat(parsed.totalVolumeUSD)\n\n    const volumeUSDChange =\n      parsed && parsed24 && parsed48 && volumeUSD\n        ? (volumeUSD / (parseFloat(parsed24.totalVolumeUSD) - parseFloat(parsed48.totalVolumeUSD))) * 100\n        : 0\n\n    // total value locked\n    const tvlUSDChange = getPercentChange(parsed?.totalValueLockedUSD, parsed24?.totalValueLockedUSD)\n\n    // 24H transactions\n    const txCount =\n      parsed && parsed24 ? parseFloat(parsed.txCount) - parseFloat(parsed24.txCount) : parseFloat(parsed.txCount)\n\n    const txCountChange = getPercentChange(parsed.txCount, parsed24?.txCount)\n\n    return {\n      volumeUSD,\n      volumeUSDChange: typeof volumeUSDChange === 'number' ? volumeUSDChange : 0,\n      tvlUSD: parseFloat(parsed.totalValueLockedUSD),\n      tvlUSDChange,\n      txCount,\n      txCountChange,\n    }\n  }, [anyError, anyLoading, blocks, parsed, parsed24, parsed48])\n\n  return {\n    loading: anyLoading,\n    error: anyError,\n    data: formattedData,\n  }\n}\n","import { ChartDayData } from '../../types/index'\nimport { useState, useEffect } from 'react'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport gql from 'graphql-tag'\nimport { client } from 'apollo/client'\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\nconst ONE_DAY_UNIX = 24 * 60 * 60\n\nconst GLOBAL_CHART = gql`\n  query uniswapDayDatas($startTime: Int!, $skip: Int!) {\n    uniswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\n      id\n      date\n      volumeUSD\n      tvlUSD\n    }\n  }\n`\n\ninterface ChartResults {\n  uniswapDayDatas: {\n    date: number\n    volumeUSD: string\n    tvlUSD: string\n  }[]\n}\n\nasync function fetchChartData() {\n  let data: {\n    date: number\n    volumeUSD: string\n    tvlUSD: string\n  }[] = []\n  const startTimestamp = 1619170975\n  const endTimestamp = dayjs.utc().unix()\n\n  let error = false\n  let skip = 0\n  let allFound = false\n\n  try {\n    while (!allFound) {\n      const { data: chartResData, error, loading } = await client.query<ChartResults>({\n        query: GLOBAL_CHART,\n        variables: {\n          startTime: startTimestamp,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      if (!loading) {\n        skip += 1000\n        if (chartResData.uniswapDayDatas.length < 1000 || error) {\n          allFound = true\n        }\n        if (chartResData) {\n          data = data.concat(chartResData.uniswapDayDatas)\n        }\n      }\n    }\n  } catch {\n    error = true\n  }\n\n  if (data) {\n    const formattedExisting = data.reduce((accum: { [date: number]: ChartDayData }, dayData) => {\n      const roundedDate = parseInt((dayData.date / ONE_DAY_UNIX).toFixed(0))\n      accum[roundedDate] = {\n        date: dayData.date,\n        volumeUSD: parseFloat(dayData.volumeUSD),\n        tvlUSD: parseFloat(dayData.tvlUSD),\n      }\n      return accum\n    }, {})\n\n    const firstEntry = formattedExisting[parseInt(Object.keys(formattedExisting)[0])]\n\n    // fill in empty days ( there will be no day datas if no trades made that day )\n    let timestamp = firstEntry?.date ?? startTimestamp\n    let latestTvl = firstEntry?.tvlUSD ?? 0\n    while (timestamp < endTimestamp - ONE_DAY_UNIX) {\n      const nextDay = timestamp + ONE_DAY_UNIX\n      const currentDayIndex = parseInt((nextDay / ONE_DAY_UNIX).toFixed(0))\n      if (!Object.keys(formattedExisting).includes(currentDayIndex.toString())) {\n        formattedExisting[currentDayIndex] = {\n          date: nextDay,\n          volumeUSD: 0,\n          tvlUSD: latestTvl,\n        }\n      } else {\n        latestTvl = formattedExisting[currentDayIndex].tvlUSD\n      }\n      timestamp = nextDay\n    }\n\n    const dateMap = Object.keys(formattedExisting).map((key) => {\n      return formattedExisting[parseInt(key)]\n    })\n\n    return {\n      data: dateMap,\n      error: false,\n    }\n  } else {\n    return {\n      data: undefined,\n      error,\n    }\n  }\n}\n\n/**\n * Fetch historic chart data\n */\nexport function useFetchGlobalChartData(): {\n  error: boolean\n  data: ChartDayData[] | undefined\n} {\n  const [data, setData] = useState<ChartDayData[] | undefined>()\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    async function fetch() {\n      const { data, error } = await fetchChartData()\n      if (data && !error) {\n        setData(data)\n      } else if (error) {\n        setError(true)\n      }\n    }\n    if (!data && !error) {\n      fetch()\n    }\n  }, [data, error])\n\n  return {\n    error,\n    data,\n  }\n}\n","import { client } from 'apollo/client'\nimport gql from 'graphql-tag'\nimport { Transaction, TransactionType } from 'types'\nimport { formatTokenSymbol } from 'utils/tokens'\n\nconst GLOBAL_TRANSACTIONS = gql`\n  query transactions {\n    transactions(first: 500, orderBy: timestamp, orderDirection: desc) {\n      id\n      timestamp\n      mints {\n        pool {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        owner\n        sender\n        origin\n        amount0\n        amount1\n        amountUSD\n      }\n      swaps {\n        pool {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        origin\n        amount0\n        amount1\n        amountUSD\n      }\n      burns {\n        pool {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        owner\n        amount0\n        amount1\n        amountUSD\n      }\n    }\n  }\n`\n\ntype TransactionEntry = {\n  timestamp: string\n  id: string\n  mints: {\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  swaps: {\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  burns: {\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    owner: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n}\n\ninterface TransactionResults {\n  transactions: TransactionEntry[]\n}\n\nexport async function fetchTopTransactions(): Promise<Transaction[] | undefined> {\n  try {\n    const { data, error, loading } = await client.query<TransactionResults>({\n      query: GLOBAL_TRANSACTIONS,\n      fetchPolicy: 'network-only',\n    })\n\n    if (error || loading || !data) {\n      return undefined\n    }\n\n    const formatted = data.transactions.reduce((accum: Transaction[], t: TransactionEntry) => {\n      const mintEntries = t.mints.map((m) => {\n        return {\n          type: TransactionType.MINT,\n          hash: t.id,\n          timestamp: t.timestamp,\n          sender: m.origin,\n          token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n          token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n          token0Address: m.pool.token0.id,\n          token1Address: m.pool.token1.id,\n          amountUSD: parseFloat(m.amountUSD),\n          amountToken0: parseFloat(m.amount0),\n          amountToken1: parseFloat(m.amount1),\n        }\n      })\n      const burnEntries = t.burns.map((m) => {\n        return {\n          type: TransactionType.BURN,\n          hash: t.id,\n          timestamp: t.timestamp,\n          sender: m.owner,\n          token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n          token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n          token0Address: m.pool.token0.id,\n          token1Address: m.pool.token1.id,\n          amountUSD: parseFloat(m.amountUSD),\n          amountToken0: parseFloat(m.amount0),\n          amountToken1: parseFloat(m.amount1),\n        }\n      })\n\n      const swapEntries = t.swaps.map((m) => {\n        return {\n          hash: t.id,\n          type: TransactionType.SWAP,\n          timestamp: t.timestamp,\n          sender: m.origin,\n          token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n          token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n          token0Address: m.pool.token0.id,\n          token1Address: m.pool.token1.id,\n          amountUSD: parseFloat(m.amountUSD),\n          amountToken0: parseFloat(m.amount0),\n          amountToken1: parseFloat(m.amount1),\n        }\n      })\n      accum = [...accum, ...mintEntries, ...burnEntries, ...swapEntries]\n      return accum\n    }, [])\n\n    return formatted\n  } catch {\n    return undefined\n  }\n}\n","import { useProtocolData, useProtocolChartData, useProtocolTransactions } from './hooks'\nimport { useEffect } from 'react'\nimport { useFetchProtocolData } from 'data/protocol/overview'\nimport { useFetchGlobalChartData } from 'data/protocol/chart'\nimport { fetchTopTransactions } from 'data/protocol/transactions'\n\nexport default function Updater(): null {\n  const [protocolData, updateProtocolData] = useProtocolData()\n  const { data: fetchedProtocolData, error, loading } = useFetchProtocolData()\n\n  const [chartData, updateChartData] = useProtocolChartData()\n  const { data: fetchedChartData, error: chartError } = useFetchGlobalChartData()\n\n  const [transactions, updateTransactions] = useProtocolTransactions()\n\n  // update overview data if available and not set\n  useEffect(() => {\n    if (protocolData === undefined && fetchedProtocolData && !loading && !error) {\n      updateProtocolData(fetchedProtocolData)\n    }\n  }, [error, fetchedProtocolData, loading, protocolData, updateProtocolData])\n\n  // update global chart data if available and not set\n  useEffect(() => {\n    if (chartData === undefined && fetchedChartData && !chartError) {\n      updateChartData(fetchedChartData)\n    }\n  }, [chartData, chartError, fetchedChartData, updateChartData])\n\n  useEffect(() => {\n    async function fetch() {\n      const data = await fetchTopTransactions()\n      if (data) {\n        updateTransactions(data)\n      }\n    }\n    if (!transactions) {\n      fetch()\n    }\n  }, [transactions, updateTransactions])\n\n  return null\n}\n","import { useMemo } from 'react'\nimport { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\n\nexport const TOP_TOKENS = gql`\n  query topPools {\n    tokens(first: 200, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n    }\n  }\n`\n\ninterface TopTokensResponse {\n  tokens: {\n    id: string\n  }[]\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport function useTopTokenAddresses(): {\n  loading: boolean\n  error: boolean\n  addresses: string[] | undefined\n} {\n  const { loading, error, data } = useQuery<TopTokensResponse>(TOP_TOKENS)\n\n  const formattedData = useMemo(() => {\n    if (data) {\n      return data.tokens.map((t) => t.id)\n    } else {\n      return undefined\n    }\n  }, [data])\n\n  return {\n    loading: loading,\n    error: Boolean(error),\n    addresses: formattedData,\n  }\n}\n","import { useAllTokenData, useUpdateTokenData, useAddTokenKeys } from './hooks'\nimport { useEffect, useMemo } from 'react'\nimport { useTopTokenAddresses } from '../../data/tokens/topTokens'\nimport { useTokenDatas } from 'data/tokens/tokenData'\n\nexport default function Updater(): null {\n  // updaters\n  const updateTokenDatas = useUpdateTokenData()\n  const addTokenKeys = useAddTokenKeys()\n\n  // intitial data\n  const allTokenData = useAllTokenData()\n  const { loading, error, addresses } = useTopTokenAddresses()\n\n  // add top pools on first load\n  useEffect(() => {\n    if (addresses && !error && !loading) {\n      addTokenKeys(addresses)\n    }\n  }, [addTokenKeys, addresses, error, loading])\n\n  // detect for which addresses we havent loaded token data yet\n  const unfetchedTokenAddresses = useMemo(() => {\n    return Object.keys(allTokenData).reduce((accum: string[], key) => {\n      const tokenData = allTokenData[key]\n      if (!tokenData.data || !tokenData.lastUpdated) {\n        accum.push(key)\n      }\n      return accum\n    }, [])\n  }, [allTokenData])\n\n  // update unloaded pool entries with fetched data\n  const { error: tokenDataError, loading: tokenDataLoading, data: tokenDatas } = useTokenDatas(unfetchedTokenAddresses)\n  useEffect(() => {\n    if (tokenDatas && !tokenDataError && !tokenDataLoading) {\n      updateTokenDatas(Object.values(tokenDatas))\n    }\n  }, [tokenDataError, tokenDataLoading, tokenDatas, updateTokenDatas])\n\n  return null\n}\n","import { useMemo } from 'react'\nimport { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\n\nexport const TOP_POOLS = gql`\n  query topPools {\n    pools(first: 200, orderBy: totalValueLockedUSD, orderDirection: desc) {\n      id\n    }\n  }\n`\n\ninterface TopPoolsResponse {\n  pools: {\n    id: string\n  }[]\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport function useTopPoolAddresses(): {\n  loading: boolean\n  error: boolean\n  addresses: string[] | undefined\n} {\n  const { loading, error, data } = useQuery<TopPoolsResponse>(TOP_POOLS, {\n    fetchPolicy: 'network-only',\n  })\n\n  const formattedData = useMemo(() => {\n    if (data) {\n      return data.pools.map((p) => p.id)\n    } else {\n      return undefined\n    }\n  }, [data])\n\n  return {\n    loading: loading,\n    error: Boolean(error),\n    addresses: formattedData,\n  }\n}\n","import { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport { useDeltaTimestamps } from 'utils/queries'\nimport { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\nimport { PoolData } from 'state/pools/reducer'\nimport { get2DayChange } from 'utils/data'\nimport { formatTokenName, formatTokenSymbol } from 'utils/tokens'\nimport { NETWORK_ONLY } from '../../constants/index'\n\nexport const POOLS_BULK = (block: number | undefined, pools: string[]) => {\n  let poolString = `[`\n  pools.map((address) => {\n    return (poolString += `\"${address}\",`)\n  })\n  poolString += ']'\n  const queryString =\n    `\n    query pools {\n      pools(first: 200, where: {id_in: ${poolString}},` +\n    (block ? `block: {number: ${block}} ,` : ``) +\n    ` orderBy: totalValueLockedUSD, orderDirection: desc) {\n        id\n        feeTier\n        liquidity\n        sqrtPrice\n        tick\n        token0 {\n            id\n            symbol \n            name\n            decimals\n            derivedETH\n        }\n        token1 {\n            id\n            symbol \n            name\n            decimals\n            derivedETH\n        }\n        token0Price\n        token1Price\n        volumeUSD\n        txCount\n        totalValueLockedToken0\n        totalValueLockedToken1\n        totalValueLockedUSD\n      }\n    }\n    `\n  return gql(queryString)\n}\n\ninterface PoolFields {\n  id: string\n  feeTier: string\n  liquidity: string\n  sqrtPrice: string\n  tick: string\n  token0: {\n    id: string\n    symbol: string\n    name: string\n    decimals: string\n    derivedETH: string\n  }\n  token1: {\n    id: string\n    symbol: string\n    name: string\n    decimals: string\n    derivedETH: string\n  }\n  token0Price: string\n  token1Price: string\n  volumeUSD: string\n  txCount: string\n  totalValueLockedToken0: string\n  totalValueLockedToken1: string\n  totalValueLockedUSD: string\n}\n\ninterface PoolDataResponse {\n  pools: PoolFields[]\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport function usePoolDatas(\n  poolAddresses: string[]\n): {\n  loading: boolean\n  error: boolean\n  data:\n    | {\n        [address: string]: PoolData\n      }\n    | undefined\n} {\n  // get blocks from historic timestamps\n  const [t24, t48, tWeek] = useDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek])\n  const [block24, block48, blockWeek] = blocks ?? []\n\n  const { loading, error, data } = useQuery<PoolDataResponse>(POOLS_BULK(undefined, poolAddresses), {\n    fetchPolicy: 'network-only',\n  })\n\n  const { loading: loading24, error: error24, data: data24 } = useQuery<PoolDataResponse>(\n    POOLS_BULK(block24?.number, poolAddresses),\n    {\n      fetchPolicy: 'network-only',\n    }\n  )\n  const { loading: loading48, error: error48, data: data48 } = useQuery<PoolDataResponse>(\n    POOLS_BULK(block48?.number, poolAddresses),\n    {\n      fetchPolicy: 'network-only',\n    }\n  )\n  const { loading: loadingWeek, error: errorWeek, data: dataWeek } = useQuery<PoolDataResponse>(\n    POOLS_BULK(blockWeek?.number, poolAddresses),\n    {\n      fetchPolicy: 'network-only',\n    }\n  )\n\n  const anyError = Boolean(error || error24 || error48 || blockError || errorWeek)\n  const anyLoading = Boolean(loading || loading24 || loading48 || loadingWeek)\n\n  // return early if not all data yet\n  if (anyError || anyLoading) {\n    return {\n      loading: anyLoading,\n      error: anyError,\n      data: undefined,\n    }\n  }\n\n  const parsed = data?.pools\n    ? data.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsed24 = data24?.pools\n    ? data24.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsed48 = data48?.pools\n    ? data48.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsedWeek = dataWeek?.pools\n    ? dataWeek.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n\n  // format data and calculate daily changes\n  const formatted = poolAddresses.reduce((accum: { [address: string]: PoolData }, address) => {\n    const current: PoolFields | undefined = parsed[address]\n    const oneDay: PoolFields | undefined = parsed24[address]\n    const twoDay: PoolFields | undefined = parsed48[address]\n    const week: PoolFields | undefined = parsedWeek[address]\n\n    const [volumeUSD, volumeUSDChange] =\n      current && oneDay && twoDay\n        ? get2DayChange(current.volumeUSD, oneDay.volumeUSD, twoDay.volumeUSD)\n        : current\n        ? [parseFloat(current.volumeUSD), 0]\n        : [0, 0]\n\n    const volumeUSDWeek =\n      current && week\n        ? parseFloat(current.volumeUSD) - parseFloat(week.volumeUSD)\n        : current\n        ? parseFloat(current.volumeUSD)\n        : 0\n\n    const tvlUSD = current ? parseFloat(current.totalValueLockedUSD) : 0\n\n    const tvlUSDChange =\n      current && oneDay\n        ? ((parseFloat(current.totalValueLockedUSD) - parseFloat(oneDay.totalValueLockedUSD)) /\n            parseFloat(oneDay.totalValueLockedUSD)) *\n          100\n        : 0\n\n    const tvlToken0 = current ? parseFloat(current.totalValueLockedToken0) : 0\n    const tvlToken1 = current ? parseFloat(current.totalValueLockedToken1) : 0\n\n    const feeTier = current ? parseInt(current.feeTier) : 0\n\n    if (current) {\n      accum[address] = {\n        address,\n        feeTier,\n        liquidity: parseFloat(current.liquidity),\n        sqrtPrice: parseFloat(current.sqrtPrice),\n        tick: parseFloat(current.tick),\n        token0: {\n          address: current.token0.id,\n          name: formatTokenName(current.token0.id, current.token0.name),\n          symbol: formatTokenSymbol(current.token0.id, current.token0.symbol),\n          decimals: parseInt(current.token0.decimals),\n          derivedETH: parseFloat(current.token0.derivedETH),\n        },\n        token1: {\n          address: current.token1.id,\n          name: formatTokenName(current.token1.id, current.token1.name),\n          symbol: formatTokenSymbol(current.token1.id, current.token1.symbol),\n          decimals: parseInt(current.token0.decimals),\n          derivedETH: parseFloat(current.token1.derivedETH),\n        },\n        token0Price: parseFloat(current.token0Price),\n        token1Price: parseFloat(current.token1Price),\n        volumeUSD,\n        volumeUSDChange,\n        volumeUSDWeek,\n        tvlUSD,\n        tvlUSDChange,\n        tvlToken0,\n        tvlToken1,\n      }\n    }\n\n    return accum\n  }, {})\n\n  return {\n    loading: anyLoading,\n    error: anyError,\n    data: formatted,\n  }\n}\n","import { useUpdatePoolData, useAllPoolData, useAddPoolKeys } from './hooks'\nimport { useEffect, useMemo } from 'react'\nimport { useTopPoolAddresses } from 'data/pools/topPools'\nimport { usePoolDatas } from 'data/pools/poolData'\n\nexport default function Updater(): null {\n  // updaters\n  const updatePoolData = useUpdatePoolData()\n  const addPoolKeys = useAddPoolKeys()\n\n  // data\n  const allPoolData = useAllPoolData()\n  const { loading, error, addresses } = useTopPoolAddresses()\n\n  // add top pools on first load\n  useEffect(() => {\n    if (addresses && !error && !loading) {\n      addPoolKeys(addresses)\n    }\n  }, [addPoolKeys, addresses, error, loading])\n\n  // detect for which addresses we havent loaded pool data yet\n  const unfetchedPoolAddresses = useMemo(() => {\n    return Object.keys(allPoolData).reduce((accum: string[], key) => {\n      const poolData = allPoolData[key]\n      if (!poolData.data || !poolData.lastUpdated) {\n        accum.push(key)\n      }\n      return accum\n    }, [])\n  }, [allPoolData])\n\n  // update unloaded pool entries with fetched data\n  const { error: poolDataError, loading: poolDataLoading, data: poolDatas } = usePoolDatas(unfetchedPoolAddresses)\n  useEffect(() => {\n    if (poolDatas && !poolDataError && !poolDataLoading) {\n      updatePoolData(Object.values(poolDatas))\n    }\n  }, [poolDataError, poolDataLoading, poolDatas, updatePoolData])\n\n  return null\n}\n","import 'inter-ui'\nimport React, { StrictMode } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport ReactDOM from 'react-dom'\nimport ReactGA from 'react-ga'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport './i18n'\nimport App from './pages/App'\nimport store from './state'\nimport UserUpdater from './state/user/updater'\nimport ProtocolUpdater from './state/protocol/updater'\nimport TokenUpdater from './state/tokens/updater'\nimport PoolUpdater from './state/pools/updater'\nimport ThemeProvider, { FixedGlobalStyle, ThemedGlobalStyle } from './theme'\nimport { ApolloProvider } from '@apollo/client/react'\nimport { client } from 'apollo/client'\n\nconst GOOGLE_ANALYTICS_ID: string | undefined = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID)\n  ReactGA.set({\n    customBrowserType: !isMobile\n      ? 'desktop'\n      : 'web3' in window || 'ethereum' in window\n      ? 'mobileWeb3'\n      : 'mobileRegular',\n  })\n} else {\n  ReactGA.initialize('test', { testMode: true, debug: true })\n}\n\nwindow.addEventListener('error', (error) => {\n  ReactGA.exception({\n    description: `${error.message} @ ${error.filename}:${error.lineno}:${error.colno}`,\n    fatal: true,\n  })\n})\n\nfunction Updaters() {\n  return (\n    <>\n      <UserUpdater />\n      <ProtocolUpdater />\n      <TokenUpdater />\n      <PoolUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <StrictMode>\n    <FixedGlobalStyle />\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <Updaters />\n        <ThemeProvider>\n          <ThemedGlobalStyle />\n          <HashRouter>\n            <App />\n          </HashRouter>\n        </ThemeProvider>\n      </Provider>\n    </ApolloProvider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}